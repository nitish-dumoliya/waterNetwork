Water Network: d14_balerma 

Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(379, 380), (126, 125001), (163, 164), (366, 364), (255, 256), (71, 71001), (320, 321), (199, 196), (352, 353), (256, 257), (9, 8), (196, 197), (251, 252), (100, 101), (262, 261), (317, 316), (327, 326), (197, 198), (343, 344), (288, 289), (260001, 262), (192, 193), (353, 354), (407001, 350), (409, 408), (96, 97), (41, 42), (289, 290), (73, 74), (414, 413), (4, 2), (81, 78), (318, 317), (133, 134), (255, 258), (399, 396001), (360, 359), (173, 179), (415, 414), (225, 226), (280, 281), (129, 130), (262, 263), (117, 119), (250001, 412), (327, 328), (221, 222), (214, 216), (46001, 50), (15, 16), (231, 232), (202001, 284), (47, 48), (258, 259), (361, 360001), (268, 269), (162, 163), (365, 301001), (384, 383), (77, 76), (144, 145), (199, 200), (221, 223001), (416, 415), (103, 104), (48, 49), (259, 260), (236, 237), (356, 357), (24, 24001), (350001, 352), (223001, 224), (13, 12), (238, 240), (334, 345), (362, 361), (232, 233), (136, 137), (42, 45), (347, 348), (108, 109), (173, 174), (367, 369), (60, 62), (407, 350), (165, 170), (216, 218), (271, 273), (179, 179001), (380, 381), (109, 110), (365, 362), (357, 358), (258001, 259001), (45, 46), (110, 111), (55, 56), (50, 51), (136, 139), (298, 299), (330, 334), (364, 363), (390, 391), (78, 79), (23, 24), (404, 399), (24001, 25), (265, 268), (143, 144), (354, 355), (83, 84), (331, 332), (131, 133), (115, 116), (350001, 356), (46001, 47), (230, 231), (391, 392), (79, 80), (296, 295), (56, 57), (322, 323), (301, 300), (171001, 171), (171, 172), (116, 117), (387, 388), (21, 20), (52, 53), (301001, 366), (208, 209), (328, 329), (57, 58), (112, 113), (106, 161), (250002, 44), (75, 73), (53, 54), (215, 214), (407001, 406), (18, 11), (119, 118), (241, 242), (385, 387), (306, 307), (385, 88), (32, 34), (171001, 173), (388, 389), (237, 238), (182, 183), (271, 270), (250, 250003), (141, 142), (31, 32), (234, 230), (297, 298), (302, 303), (274, 275), (113, 114), (394, 395), (350001, 351), (389, 390), (400, 399), (64, 65), (365, 325), (125, 124), (211, 212), (156, 157), (406, 405), (60, 61), (4, 8), (271, 272), (303, 304), (220, 215001), (97, 98), (186, 185), (395, 396), (2, 1), (28, 29), (400, 401), (148, 149), (71001, 72), (93, 94), (304, 305), (136, 138), (360001, 360), (350, 345), (163, 165), (12, 14), (29, 30), (84, 85), (222, 223), (277, 278), (392, 393), (214, 203), (187, 186), (2, 3), (372, 378), (204, 211), (410, 409), (250004, 413), (278, 279), (310, 311), (94, 95), (110, 112), (325, 330), (305, 306), (250, 251), (192, 194), (209, 210), (402, 403), (219, 220), (301001, 301), (397, 398), (125001, 125), (35, 36), (285, 284), (77, 81), (180001, 181), (250002, 250003), (338, 339), (393, 394), (348, 349), (252, 253), (36, 37), (68, 69), (334, 335), (224, 225), (279, 280), (166, 168), (183, 184), (128, 129), (368, 367), (15, 17), (32, 33), (127001, 128), (63, 64), (6, 5), (405, 404), (381, 382), (275, 276), (59, 60), (165, 166), (170, 171001), (220, 221), (286, 285), (14, 6), (216, 217), (378, 377), (161, 162), (179, 177), (65, 66), (372, 373), (11, 10), (411, 410), (36, 39), (287, 286), (373, 374), (157, 158), (102, 103), (350, 350001), (313, 314), (415, 250001), (345, 346), (194, 195), (98, 99), (269, 271), (141, 143), (341, 342), (255, 254), (190, 191), (135, 136), (396001, 397), (8, 7), (39, 40), (401, 402), (346, 347), (82, 228), (378, 379), (5, 8), (297, 302), (408, 407001), (316, 315), (155, 154), (131, 132), (412, 411), (325, 327), (342, 343), (131001, 131), (319, 320), (168, 169)}
super_source_out_arc: [(38, 202001), (202001, 215001), (202001, 284), (202001, 82), (38, 266), (266, 180004), (180004, 180003), (180003, 180002), (180002, 421), (421, 420), (420, 419), (419, 418), (418, 416), (416, 417), (417, 43), (43, 422), (422, 180), (180, 180001), (180001, 249), (249, 182), (249, 248), (180001, 181), (416, 415), (415, 250001), (250001, 412), (412, 411), (411, 410), (410, 409), (409, 408), (408, 407001), (407001, 406), (406, 405), (405, 404), (404, 399), (399, 400), (400, 401), (401, 402), (402, 403), (399, 396001), (396001, 397), (397, 398), (407001, 350), (350, 407), (350, 350001), (350001, 351), (350001, 352), (352, 353), (353, 354), (354, 355), (350001, 356), (356, 357), (357, 358), (350, 345), (345, 346), (346, 347), (347, 348), (348, 349), (345, 334), (334, 330), (330, 325), (325, 365), (365, 362), (362, 361), (361, 360001), (360001, 360), (360, 359), (365, 301001), (301001, 366), (366, 364), (364, 363), (301001, 301), (301, 300), (325, 327), (327, 326), (327, 328), (328, 329), (334, 335), (415, 414), (414, 413), (413, 250004)] 

min_demand: 0
max_demand: 0.00555
max_flow: 2.4530999999999903
Ipopt 3.12.13: outlev = 0
expect_infeasible_problem = yes
bound_relax_factor=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

 
Ipopt 3.12.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3992198.5505627594
Solve_result:  solved
Solve_time: 61.474487 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [108, 92, 155, 68, 208, 234001, 180004, 282, 18, 324, 385] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
node: 108
node-in-arcs: [(107, 108), (115, 108)]
decreasing-in-flow-arcs: [(115, 108), (107, 108)]
(115, 108)True    39,92,199     39,22,741     48.01s      solved        Yes       110.4s



**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [155, 68, 91, 208, 235001, 180004, 274, 19, 322, 368] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
node: 155
node-in-arcs: [(156, 155), (155, 153)]
decreasing-in-flow-arcs: [(155, 153), (156, 155)]
(155, 153)True    39,22,741     39,56,196     56.51s      solved        No        167.5s


(156, 155)True    39,22,741     39,18,922     34.95s      solved        Yes       202.88s



**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [59, 90, 208, 235001, 180004, 274, 21, 319, 324] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
node: 59
node-in-arcs: [(55, 59), (59, 63)]
decreasing-in-flow-arcs: [(55, 59), (59, 63)]
(55, 59)  True    39,18,922     39,31,172     34.77s      solved        No        238.07s


(59, 63)  True    39,18,922     39,16,788     32.6s       solved        Yes       271.06s



**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [63, 91, 208, 235, 180004, 277, 21, 324, 368] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
node: 63
node-in-arcs: [(59, 63), (63, 67)]
decreasing-in-flow-arcs: [(59, 63), (63, 67)]
(59, 63)  True    39,16,788     39,65,084     60.62s      solved        No        332.16s


(63, 67)  True    39,16,788     39,57,589     31.06s      solved        No        363.57s


node: 91
node-in-arcs: [(92, 91), (91, 90)]
decreasing-in-flow-arcs: [(92, 91), (91, 90)]
(92, 91)  True    39,16,788     39,43,551     44.92s      solved        No        408.82s


(91, 90)  True    39,16,788     39,07,180     34.02s      solved        Yes       443.18s



**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [90, 208, 238, 180004, 288, 21, 319, 324] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
node: 90
node-in-arcs: [(91, 90), (90, 89)]
decreasing-in-flow-arcs: [(90, 89), (91, 90)]
(90, 89)  True    39,07,180     41,36,048     38.93s      solved        No        482.46s


(91, 90)  True    39,07,180     39,64,547     35.64s      solved        No        518.41s


node: 208
node-in-arcs: [(207, 208), (208, 213)]
decreasing-in-flow-arcs: [(208, 213), (207, 208)]
(208, 213)True    39,07,180     39,20,341     34.54s      solved        No        553.27s


(207, 208)True    39,07,180     39,29,084     34.63s      solved        No        588.24s


node: 238
node-in-arcs: [(234001, 238), (238, 239)]
decreasing-in-flow-arcs: [(238, 239), (234001, 238)]
(238, 239)True    39,07,180     39,27,049     28.28s      solved        No        616.83s


(234001, 238)True    39,07,180     39,19,504     37.92s      solved        No        655.05s


node: 180004
node-in-arcs: [(180004, 266)]
decreasing-in-flow-arcs: [(180004, 266)]
(180004, 266)True    39,07,180     39,21,909     32.25s      solved        No        687.64s


node: 288
node-in-arcs: [(288, 291), (288, 282)]
decreasing-in-flow-arcs: [(288, 291), (288, 282)]
(288, 291)True    39,07,180     39,08,766     35.84s      solved        No        723.81s


(288, 282)True    39,07,180     39,18,017     42.32s      solved        No        766.46s


node: 21
node-in-arcs: [(22, 21), (21, 19)]
decreasing-in-flow-arcs: [(21, 19), (22, 21)]
(21, 19)  True    39,07,180     39,16,094     56.04s      solved        No        822.81s


(22, 21)  True    39,07,180     39,15,075     46.01s      solved        No        869.15s


node: 319
node-in-arcs: [(319, 315), (319, 322)]
decreasing-in-flow-arcs: [(319, 315), (319, 322)]
(319, 315)True    39,07,180     39,21,333     24.86s      solved        No        894.33s


(319, 322)True    39,07,180     39,16,053     31.55s      solved        No        926.19s


node: 324
node-in-arcs: [(324, 368), (324, 331)]
decreasing-in-flow-arcs: [(324, 331), (324, 368)]
(324, 331)True    39,07,180     39,68,253     28.15s      solved        No        954.64s


(324, 368)True    39,07,180     39,06,915     35.39s      solved        Yes       990.31s



**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [235, 322, 368] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
node: 235
node-in-arcs: [(234001, 235), (235, 235001)]
decreasing-in-flow-arcs: [(234001, 235), (235, 235001)]
(234001, 235)True    39,06,915     39,19,169     34.59s      solved        No        1025.17s


(235, 235001)True    39,06,915     39,14,384     28.71s      solved        No        1054.15s


node: 322
node-in-arcs: [(319, 322), (322, 324)]
decreasing-in-flow-arcs: [(319, 322), (322, 324)]
(319, 322)True    39,06,915     39,10,714     26.82s      solved        No        1081.22s


(322, 324)True    39,06,915     39,17,415     26.16s      solved        No        1107.64s


node: 368
node-in-arcs: [(324, 368), (368, 370)]
decreasing-in-flow-arcs: [(368, 370), (324, 368)]
(368, 370)True    39,06,915     39,39,048     31.76s      solved        No        1139.69s


(324, 368)True    39,06,915     39,11,470     34.51s      solved        No        1174.5s



**********************************Final best results******************************************

Water Network: d14_balerma
Final best objective: 3906914.534663346
Number of nlp problem solved: 31
Total number of iteration: 6
Solver_time: 1163.86 seconds
Heuristic elapsed time: 1174.51 seconds

