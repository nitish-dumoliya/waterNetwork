Water Network: d3_Sample_input_double_hanoi 

Testing bound_push=0.0002306246328937011, bound_frac=0.008949869584908053
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0002306246328937011
bound_frac: 0.008949869584908053
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002306246328937011
bound_frac = 0.008949869584908053
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008230317
Testing bound_push=0.000549525194590427, bound_frac=0.001102646979593651
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.000549525194590427
bound_frac: 0.001102646979593651
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000549525194590427
bound_frac = 0.001102646979593651
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008247687
Testing bound_push=0.0006494030288567637, bound_frac=0.0003279656222964981
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006494030288567637
bound_frac: 0.0003279656222964981
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006494030288567637
bound_frac = 0.0003279656222964981
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630213605
Testing bound_push=0.000631028848653014, bound_frac=0.009625354090480577
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.000631028848653014
bound_frac: 0.009625354090480577
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000631028848653014
bound_frac = 0.009625354090480577
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12306931.391509913
Testing bound_push=0.00012563914435827306, bound_frac=0.00020589083928838127
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00012563914435827306
bound_frac: 0.00020589083928838127
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00012563914435827306
bound_frac = 0.00020589083928838127
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245895
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630211521
Testing bound_push=0.0006910258067790455, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006910258067790455
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006910258067790455
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12074371.899577923
Testing bound_push=0.0004908201529408031, bound_frac=0.007818177090999873
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0004908201529408031
bound_frac: 0.007818177090999873
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004908201529408031
bound_frac = 0.007818177090999873
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12306251.273941219
Testing bound_push=4.761764692229331e-05, bound_frac=0.005155079120799384
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 4.761764692229331e-05
bound_frac: 0.005155079120799384
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.761764692229331e-05
bound_frac = 0.005155079120799384
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12306251.273946196
Testing bound_push=0.00043968027627510286, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00043968027627510286
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043968027627510286
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00824619
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630211521
Testing bound_push=0.0005462330543035125, bound_frac=0.0016518357473279364
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005462330543035125
bound_frac: 0.0016518357473279364
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005462330543035125
bound_frac = 0.0016518357473279364
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246189
Testing bound_push=0.00042540015946022317, bound_frac=0.008793202307637424
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00042540015946022317
bound_frac: 0.008793202307637424
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00042540015946022317
bound_frac = 0.008793202307637424
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008247938
Testing bound_push=1e-06, bound_frac=0.0048087401030254325
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.0048087401030254325
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0048087401030254325
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630211521
Testing bound_push=0.000492560276850464, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.000492560276850464
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000492560276850464
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245287
Testing bound_push=2.7365905785293846e-05, bound_frac=0.00940812718419881
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 2.7365905785293846e-05
bound_frac: 0.00940812718419881
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.7365905785293846e-05
bound_frac = 0.00940812718419881
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.63021069
Testing bound_push=0.00037711230885345337, bound_frac=0.003027441326917209
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00037711230885345337
bound_frac: 0.003027441326917209
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00037711230885345337
bound_frac = 0.003027441326917209
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008248469
Testing bound_push=0.00035114972056341615, bound_frac=0.009291312320151826
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00035114972056341615
bound_frac: 0.009291312320151826
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00035114972056341615
bound_frac = 0.009291312320151826
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12235091.088270944
Testing bound_push=1e-06, bound_frac=0.006583175468398102
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.006583175468398102
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.006583175468398102
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630211521
Testing bound_push=0.0004558106719822474, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0004558106719822474
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004558106719822474
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12067969.138223333
Testing bound_push=0.0001966319516648435, bound_frac=0.00886373507196028
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0001966319516648435
bound_frac: 0.00886373507196028
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001966319516648435
bound_frac = 0.00886373507196028
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.881604867
Testing bound_push=0.0002840827462107365, bound_frac=0.005502367331189182
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0002840827462107365
bound_frac: 0.005502367331189182
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002840827462107365
bound_frac = 0.005502367331189182
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082462
Testing bound_push=0.00031496736559945624, bound_frac=0.009308529842124389
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00031496736559945624
bound_frac: 0.009308529842124389
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00031496736559945624
bound_frac = 0.009308529842124389
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246187
Testing bound_push=1e-06, bound_frac=0.0073089148947387845
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.0073089148947387845
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0073089148947387845
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630211521
Testing bound_push=0.00037847595177920365, bound_frac=0.0033733489846271406
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00037847595177920365
bound_frac: 0.0033733489846271406
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00037847595177920365
bound_frac = 0.0033733489846271406
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.720335126
Testing bound_push=0.00030834214186972503, bound_frac=0.008625756094859
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00030834214186972503
bound_frac: 0.008625756094859
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00030834214186972503
bound_frac = 0.008625756094859
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.881600203
Testing bound_push=0.00027758800878496164, bound_frac=0.006607826786345368
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00027758800878496164
bound_frac: 0.006607826786345368
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027758800878496164
bound_frac = 0.006607826786345368
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00825471
Testing bound_push=0.00029498409581051656, bound_frac=0.009223767574227227
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00029498409581051656
bound_frac: 0.009223767574227227
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029498409581051656
bound_frac = 0.009223767574227227
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.881600177
Testing bound_push=1e-06, bound_frac=0.007719524928240281
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.007719524928240281
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.007719524928240281
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630211521
Testing bound_push=0.000296943805395142, bound_frac=0.003758553541110104
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.000296943805395142
bound_frac: 0.003758553541110104
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000296943805395142
bound_frac = 0.003758553541110104
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245667
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0002306246328937011
bound_frac: 0.008949869584908053
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002306246328937011
bound_frac = 0.008949869584908053
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  12064445.008230317
Solve_result:  solved
Solve_time: 1.4149889999999985 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 29, 59, 16, 46] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,20,64,445   1,21,14,386   0.1s        solved        No        37.19s
(56, 57)  True    1,20,64,445   1,21,14,386   0.09s       solved        No        37.46s
(28, 29)  True    1,20,64,445   1,23,41,023   0.1s        solved        No        37.59s
(58, 59)  True    1,20,64,445   1,23,41,023   0.15s       solved        No        37.77s
(15, 16)  True    1,20,64,445   1,20,69,256   0.1s        solved        No        37.89s
(45, 46)  True    1,20,64,445   1,20,69,256   0.1s        solved        No        38.22s

**********************************Final best results******************************************

Water Network: d3_Sample_input_double_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 9.482525875625925e-12
Total relative constraint violation: 2.019276224213979e-11
*******************************************************************************

Final best objective: 12064445.008230317
Number of nlp problem solved: 37
Total number of iteration: 1
Solver_time: 36.77 seconds
Heuristic elapsed time: 38.23 seconds

