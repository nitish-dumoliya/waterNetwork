Water Network: d9_HG_SP_4_2 

Testing bound_push=0.0002965596539796497, bound_frac=0.007356783997938884
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002965596539796497
bound_frac: 0.007356783997938884
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002965596539796497
bound_frac = 0.007356783997938884
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8972646.82341067
Testing bound_push=0.0004201840445478578, bound_frac=0.008592141449009461
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004201840445478578
bound_frac: 0.008592141449009461
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004201840445478578
bound_frac = 0.008592141449009461
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8965880.39161093
Testing bound_push=0.0009455440174562502, bound_frac=0.0020923602654803536
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0009455440174562502
bound_frac: 0.0020923602654803536
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009455440174562502
bound_frac = 0.0020923602654803536
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9046421.87473731
Testing bound_push=0.0003630899825139249, bound_frac=0.0014459996188014872
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0003630899825139249
bound_frac: 0.0014459996188014872
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003630899825139249
bound_frac = 0.0014459996188014872
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984652.7777438
Testing bound_push=5.7971943854427225e-06, bound_frac=0.005060850414066941
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 5.7971943854427225e-06
bound_frac: 0.005060850414066941
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.7971943854427225e-06
bound_frac = 0.005060850414066941
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9012208.536994841
Testing bound_push=0.0007200118210881736, bound_frac=0.01
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007200118210881736
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007200118210881736
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8991979.815692889
Testing bound_push=3.4380433937178324e-05, bound_frac=0.007770680502441247
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 3.4380433937178324e-05
bound_frac: 0.007770680502441247
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 3.4380433937178324e-05
bound_frac = 0.007770680502441247
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9060286.477284528
Testing bound_push=0.0006452595098060175, bound_frac=0.0013515581347412
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0006452595098060175
bound_frac: 0.0013515581347412
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006452595098060175
bound_frac = 0.0013515581347412
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8973345.521774214
Testing bound_push=0.0002661414135727615, bound_frac=0.006900826485813044
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002661414135727615
bound_frac: 0.006900826485813044
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002661414135727615
bound_frac = 0.006900826485813044
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8945871.372020753
Testing bound_push=1e-06, bound_frac=0.009478856393548552
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.009478856393548552
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.009478856393548552
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9018282.25039369
Testing bound_push=0.0007333544515043357, bound_frac=0.009752688159382444
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007333544515043357
bound_frac: 0.009752688159382444
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007333544515043357
bound_frac = 0.009752688159382444
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8975453.80899073
Testing bound_push=1e-06, bound_frac=0.007583595897796939
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.007583595897796939
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.007583595897796939
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9018282.25039369
Testing bound_push=0.0004431897293791325, bound_frac=0.003069257118098716
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004431897293791325
bound_frac: 0.003069257118098716
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004431897293791325
bound_frac = 0.003069257118098716
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8912703.799634947
Testing bound_push=0.0002444640721857407, bound_frac=0.008200266686355066
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002444640721857407
bound_frac: 0.008200266686355066
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002444640721857407
bound_frac = 0.008200266686355066
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8981061.066374507
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9018282.25039369
Testing bound_push=0.0004903888078382701, bound_frac=0.007321162425443619
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004903888078382701
bound_frac: 0.007321162425443619
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004903888078382701
bound_frac = 0.007321162425443619
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8974761.171100046
Testing bound_push=0.00015922089580005461, bound_frac=0.0074564835576494855
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00015922089580005461
bound_frac: 0.0074564835576494855
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00015922089580005461
bound_frac = 0.0074564835576494855
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9057417.830935096
Testing bound_push=0.00034215483916568996, bound_frac=0.003928106609777474
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00034215483916568996
bound_frac: 0.003928106609777474
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034215483916568996
bound_frac = 0.003928106609777474
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019778.774300154
Testing bound_push=0.0002432512158296279, bound_frac=0.006765509727949823
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002432512158296279
bound_frac: 0.006765509727949823
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002432512158296279
bound_frac = 0.006765509727949823
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8998932.30120954
Testing bound_push=6.67728412857148e-05, bound_frac=0.008414646832810239
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 6.67728412857148e-05
bound_frac: 0.008414646832810239
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.67728412857148e-05
bound_frac = 0.008414646832810239
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8993696.657251481
Testing bound_push=0.0003314027331217633, bound_frac=0.00454292072605731
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0003314027331217633
bound_frac: 0.00454292072605731
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003314027331217633
bound_frac = 0.00454292072605731
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8958554.461085944
Testing bound_push=0.0003248639726917839, bound_frac=0.006576272527874971
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0003248639726917839
bound_frac: 0.006576272527874971
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003248639726917839
bound_frac = 0.006576272527874971
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8988273.00220863
Testing bound_push=0.00031519414740981437, bound_frac=0.0037740941463494868
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00031519414740981437
bound_frac: 0.0037740941463494868
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00031519414740981437
bound_frac = 0.0037740941463494868
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8987990.691636123
Testing bound_push=0.0002861296012340999, bound_frac=0.004474501357301406
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002861296012340999
bound_frac: 0.004474501357301406
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002861296012340999
bound_frac = 0.004474501357301406
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8969764.403102452
Testing bound_push=0.00015044036386667307, bound_frac=0.007025802673998546
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00015044036386667307
bound_frac: 0.007025802673998546
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00015044036386667307
bound_frac = 0.007025802673998546
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9018890.635613551
Testing bound_push=0.00026059983986046327, bound_frac=0.0026096341322987215
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00026059983986046327
bound_frac: 0.0026096341322987215
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026059983986046327
bound_frac = 0.0026096341322987215
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019851.993785063
Testing bound_push=0.0005008157258360002, bound_frac=0.006811648405228275
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005008157258360002
bound_frac: 0.006811648405228275
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005008157258360002
bound_frac = 0.006811648405228275
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8976567.64944554
Testing bound_push=0.0003835830967035713, bound_frac=0.0033534951382833945
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0003835830967035713
bound_frac: 0.0033534951382833945
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003835830967035713
bound_frac = 0.0033534951382833945
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8978782.121871771
Testing bound_push=0.0003044220569460107, bound_frac=0.004360981673289374
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0003044220569460107
bound_frac: 0.004360981673289374
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003044220569460107
bound_frac = 0.004360981673289374
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9026776.572022676
Testing bound_push=0.000294332219223336, bound_frac=0.0054726662962275695
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.000294332219223336
bound_frac: 0.0054726662962275695
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000294332219223336
bound_frac = 0.0054726662962275695
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8958592.85891064
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004431897293791325
bound_frac: 0.003069257118098716
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004431897293791325
bound_frac = 0.003069257118098716
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  8912703.799634947
Solve_result:  solved
Solve_time: 5.669885000000022 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 138)True    89,12,704     91,22,260     0.53s       solved        No        151.02s
(117, 143)True    89,12,704     89,76,417     0.26s       infeasible    No        151.36s
(141, 134)True    89,12,704     89,44,759     0.99s       solved        No        152.43s
(11, 126) True    89,12,704     88,86,760     0.74s       solved        Yes       153.25s

visited_nodes: [138, 143, 134, 126]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [135, 123, 17, 54, 112, 22, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 48, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(59, 135) True    88,86,760     90,52,724     1.34s       solved        No        154.69s
(50, 123) True    88,86,760     88,78,352     0.27s       solved        Yes       155.04s

visited_nodes: [138, 143, 134, 126, 135, 123]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 50, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 53, 91, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(41, 17)  True    88,78,352     89,54,414     1.01s       solved        No        156.16s
(105, 112)True    88,78,352     1,02,81,431   1.49s       limit         No        157.73s
(29, 9)   True    88,78,352     89,79,120     1.29s       solved        No        159.09s
(39, 83)  True    88,78,352     91,22,112     0.44s       solved        No        159.61s
(44, 35)  True    88,78,352     89,35,524     0.29s       infeasible    No        159.97s
(126, 59) True    88,78,352     89,62,197     1.54s       limit         No        161.61s
(61, 93)  True    88,78,352     88,81,325     0.39s       solved        No        162.08s
(108, 105)True    88,78,352     88,80,771     0.24s       solved        No        162.37s
(52, 109) True    88,78,352     88,82,761     0.32s       solved        No        162.77s
(6, 85)   True    88,78,352     93,84,973     1.49s       solved        No        164.34s
(5, 76)   True    88,78,352     93,59,614     1.4s        solved        No        165.81s
(109, 89) True    88,78,352     88,79,482     0.33s       solved        No        166.22s
(40, 43)  True    88,78,352     1,19,21,912   1.58s       limit         No        167.9s
(101, 104)True    88,78,352     89,23,689     0.61s       solved        No        168.58s
(48, 2)   True    88,78,352     88,96,545     0.25s       solved        No        168.91s
(51, 103) True    88,78,352     1,01,03,117   1.53s       limit         No        170.51s
(92, 114) True    88,78,352     88,86,059     0.52s       solved        No        171.09s
(28, 51)  True    88,78,352     88,99,418     0.56s       solved        No        171.73s
(114, 5)  True    88,78,352     88,88,518     0.38s       solved        No        172.18s
(74, 60)  True    88,78,352     1,50,67,283   1.6s        limit         No        173.86s
(25, 49)  True    88,78,352     1,30,71,578   1.53s       limit         No        175.46s
(36, 42)  True    88,78,352     1,22,58,672   1.51s       limit         No        177.05s
(26, 74)  True    88,78,352     1,35,22,843   1.55s       limit         No        178.68s
(28, 111) True    88,78,352     88,81,650     0.23s       solved        No        178.98s
(73, 28)  True    88,78,352     88,76,518     0.87s       solved        Yes       179.93s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [54, 58, 18, 68, 73, 65, 77, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(56, 54)  True    88,76,518     1,09,40,680   1.53s       limit         No        181.56s
(60, 58)  True    88,76,518     91,05,211     0.83s       solved        No        182.47s
(4, 18)   True    88,76,518     88,71,591     1.53s       limit         No        184.08s
(21, 68)  True    88,76,518     88,72,390     0.24s       solved        Yes       184.39s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 54, 58, 18, 68]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [21, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(129, 21) True    88,72,390     88,90,489     1.42s       solved        No        185.93s
(23, 65)  True    88,72,390     88,72,860     0.31s       solved        No        186.32s
(77, 57)  True    88,72,390     89,34,908     0.81s       solved        No        187.19s
(18, 23)  True    88,72,390     88,72,850     0.2s        solved        No        187.47s
(70, 101) True    88,72,390     90,67,374     1.5s        limit         No        189.05s
(80, 6)   True    88,72,390     88,70,855     0.26s       solved        Yes       189.39s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 54, 58, 18, 68, 21, 65, 57, 23, 101, 6]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [80, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(6, 80)   True    88,70,855     88,69,326     0.3s        solved        Yes       189.82s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 54, 58, 18, 68, 21, 65, 57, 23, 101, 6, 80]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(99, 24)  True    88,69,326     98,69,772     1.51s       limit         No        191.4s
(75, 36)  True    88,69,326     88,71,213     0.18s       solved        No        191.66s
(96, 47)  True    88,69,326     90,09,116     0.84s       solved        No        192.58s
(47, 53)  True    88,69,326     88,66,654     0.72s       solved        Yes       193.38s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 54, 58, 18, 68, 21, 65, 57, 23, 101, 6, 80, 24, 36, 47, 53]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(55, 100) True    88,66,654     88,60,732     0.17s       solved        Yes       193.66s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 54, 58, 18, 68, 21, 65, 57, 23, 101, 6, 80, 24, 36, 47, 53, 100]

**********************************************************************************************
Iteration : 9 

self.sorted_nodes: [55, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(100, 55) True    88,60,732     88,62,037     0.56s       solved        No        194.32s
(53, 78)  True    88,60,732     88,60,481     0.77s       solved        Yes       195.16s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 54, 58, 18, 68, 21, 65, 57, 23, 101, 6, 80, 24, 36, 47, 53, 100, 55, 78]

**********************************************************************************************
Iteration : 10 

self.sorted_nodes: [87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(91, 87)  True    88,60,481     89,31,804     0.75s       solved        No        196.01s
(48, 11)  True    88,60,481     88,62,884     0.16s       solved        No        196.24s
(87, 63)  True    88,60,481     88,68,035     1.1s        solved        No        197.42s
(119, 115)True    88,60,481     89,40,972     0.21s       solved        No        197.71s

**********************************Final best results******************************************

Water Network: d9_HG_SP_4_2
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,48       |              2e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_2,89       |              1e-08   |          -9e-08      |
+-----------------+----------------------+----------------------+
| con2_2,109      |              1e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_3,12       |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_4,18       |             -1e-08   |          -2.559e-05  |
+-----------------+----------------------+----------------------+
| con2_5,58       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,114      |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_6,10       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,34       |              1e-08   |          -0.00874498 |
+-----------------+----------------------+----------------------+
| con2_8,78       |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_9,22       |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_9,29       |              4e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_9,59       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,72      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_11,48      |              0       |          -4.8e-07    |
+-----------------+----------------------+----------------------+
| con2_11,52      |              0       |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_12,22      |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_13,45      |              1e-08   |          -0.0145048  |
+-----------------+----------------------+----------------------+
| con2_14,97      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,128     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_16,110     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_17,54      |              6e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_17,83      |             -4e-08   |          -8e-08      |
+-----------------+----------------------+----------------------+
| con2_18,23      |             -1e-08   |          -1.65e-06   |
+-----------------+----------------------+----------------------+
| con2_19,84      |             -2e-08   |          -9.51e-06   |
+-----------------+----------------------+----------------------+
| con2_20,18      |             -2e-08   |          -2.44e-06   |
+-----------------+----------------------+----------------------+
| con2_20,23      |             -1e-08   |          -1.34e-06   |
+-----------------+----------------------+----------------------+
| con2_20,50      |             -1e-08   |          -2.2e-06    |
+-----------------+----------------------+----------------------+
| con2_21,68      |             -0       |          -4.19e-06   |
+-----------------+----------------------+----------------------+
| con2_21,130     |             -4e-08   |          -6.7e-07    |
+-----------------+----------------------+----------------------+
| con2_22,135     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_23,65      |             -1e-08   |          -4e-07      |
+-----------------+----------------------+----------------------+
| con2_24,8       |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_24,36      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_24,99      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_25,49      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,16      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,14      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_27,65      |             -1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_27,94      |             -1e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_28,111     |             -1e-08   |          -1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_29,103     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_30,38      |              2e-08   |          -0.00121755 |
+-----------------+----------------------+----------------------+
| con2_31,37      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_31,104     |             -1e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_32,58      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_32,67      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_33,45      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_34,78      |              0       |          -0.00160821 |
+-----------------+----------------------+----------------------+
| con2_35,44      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,85      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,75      |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_37,5       |             -1e-08   |          -2.2e-07    |
+-----------------+----------------------+----------------------+
| con2_37,76      |             -1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_38,130     |              0       |          -0.0002682  |
+-----------------+----------------------+----------------------+
| con2_39,17      |              1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_40,43      |             -1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_41,17      |             -7e-08   |          -1.4e-07    |
+-----------------+----------------------+----------------------+
| con2_41,54      |              7e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_42,36      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,69      |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_43,10      |              2e-08   |          -1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_44,66      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_45,125     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_46,64      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_47,53      |             -0       |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_47,91      |              1e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_48,52      |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_49,33      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,4       |             -1e-08   |          -1.774e-05  |
+-----------------+----------------------+----------------------+
| con2_51,28      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_52,81      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_53,63      |             -0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_53,91      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_54,93      |             -4e-08   |          -0.00010558 |
+-----------------+----------------------+----------------------+
| con2_55,77      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,97      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,100     |             -0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_56,54      |             -2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_56,90      |              6e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_57,31      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,60      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_59,126     |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,32      |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_60,57      |             -1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_60,74      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_61,93      |             -2e-08   |          -2.094e-05  |
+-----------------+----------------------+----------------------+
| con2_62,42      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_63,87      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_64,91      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,96      |             -0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_66,85      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_67,16      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,20      |             -1e-08   |          -1.9e-07    |
+-----------------+----------------------+----------------------+
| con2_68,94      |              1e-08   |          -3e-07      |
+-----------------+----------------------+----------------------+
| con2_69,106     |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_70,87      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,9       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,119     |             -6e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_72,62      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_73,28      |             -0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_73,32      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_74,26      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_74,67      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_75,42      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,101     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,5       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,59      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,126     |             -1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_77,57      |             -1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_78,47      |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_78,53      |             -0       |          -0.254056   |
+-----------------+----------------------+----------------------+
| con2_79,71      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,6       |             -1e-08   |          -3.3e-07    |
+-----------------+----------------------+----------------------+
| con2_80,10      |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_81,104     |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_82,80      |              2e-08   |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_83,39      |              4e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_83,40      |             -2e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_84,123     |             -3e-08   |          -1.584e-05  |
+-----------------+----------------------+----------------------+
| con2_85,6       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_85,43      |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_86,28      |             -1e-08   |          -1.4e-07    |
+-----------------+----------------------+----------------------+
| con2_86,58      |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_87,77      |              1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_88,114     |              3e-08   |          -0.00094227 |
+-----------------+----------------------+----------------------+
| con2_89,80      |              3e-08   |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_89,109     |              1e-08   |          -2.1e-06    |
+-----------------+----------------------+----------------------+
| con2_90,1       |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_91,87      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_92,111     |              0       |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_93,19      |             -2e-08   |          -6.59e-06   |
+-----------------+----------------------+----------------------+
| con2_94,129     |             -1e-08   |          -2.4e-07    |
+-----------------+----------------------+----------------------+
| con2_95,51      |             -1e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_95,73      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_96,47      |             -0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_97,100     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_98,118     |              1e-08   |          -0.00544164 |
+-----------------+----------------------+----------------------+
| con2_99,63      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_100,46     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_101,24     |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_101,70     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,35     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,134    |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,51     |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_103,95     |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_104,101    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_105,103    |              0       |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_105,108    |              2e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_106,75     |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_107,116    |              2e-08   |          -3.34e-06   |
+-----------------+----------------------+----------------------+
| con2_108,95     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_109,52     |              3e-08   |          -1.8e-07    |
+-----------------+----------------------+----------------------+
| con2_109,82     |              1e-08   |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_110,14     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_110,49     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,86     |              1e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_111,114    |             -1e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_112,29     |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_112,105    |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_112,108    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_113,2      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_114,92     |              0       |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_115,22     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_115,138    |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,142    |              0       |          -9.5e-07    |
+-----------------+----------------------+----------------------+
| con2_117,79     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |              7e-08   |          -4.12e-06   |
+-----------------+----------------------+----------------------+
| con2_119,115    |             -1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_120,39     |              3e-08   |          -4.34e-06   |
+-----------------+----------------------+----------------------+
| con2_121,128    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,107    |              2e-08   |          -4.34e-06   |
+-----------------+----------------------+----------------------+
| con2_123,50     |              1e-08   |          -7.05e-06   |
+-----------------+----------------------+----------------------+
| con2_124,121    |              6e-08   |          -1.09e-06   |
+-----------------+----------------------+----------------------+
| con2_125,1      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_125,49     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_126,11     |              0       |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_126,104    |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_127,136    |              1.2e-07 |          -1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_128,112    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,21     |             -0       |          -3.1e-07    |
+-----------------+----------------------+----------------------+
| con2_130,61     |             -1e-08   |          -1.533e-05  |
+-----------------+----------------------+----------------------+
| con2_130,93     |             -2e-08   |          -1.865e-05  |
+-----------------+----------------------+----------------------+
| con2_131,102    |              3e-08   |          -1.251e-05  |
+-----------------+----------------------+----------------------+
| con2_132,133    |              5e-08   |          -4.84e-06   |
+-----------------+----------------------+----------------------+
| con2_133,41     |              2e-08   |          -8.4e-07    |
+-----------------+----------------------+----------------------+
| con2_134,141    |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_135,59     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_135,113    |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_136,141    |              2e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_137,143    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_138,3      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_139,134    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_140,121    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,102    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_142,15     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_143,79     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_143,117    |              0       |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 2.14042734661263e-06
Total relative constraint violation: 0.28708328589352633
*******************************************************************************

Final best objective: 8860480.979762025
Number of nlp problem solved: 84
Total number of iteration: 10
Solver_time: 192.68 seconds
Heuristic elapsed time: 197.73 seconds

