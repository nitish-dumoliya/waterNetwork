Water Network: d8_HG_SP_3_4 

Testing bound_push=0.0007393153355163515, bound_frac=0.005583402668077813
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0007393153355163515
bound_frac: 0.005583402668077813
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007393153355163515
bound_frac = 0.005583402668077813
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972301.882186169
Testing bound_push=0.000680158095666228, bound_frac=0.0013487295531156166
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000680158095666228
bound_frac: 0.0013487295531156166
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000680158095666228
bound_frac = 0.0013487295531156166
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972238.039839742
Testing bound_push=0.0007645521233965968, bound_frac=0.000281623250556562
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0007645521233965968
bound_frac: 0.000281623250556562
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007645521233965968
bound_frac = 0.000281623250556562
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6970550.54057381
Testing bound_push=0.000566151764036765, bound_frac=0.0008559010780367205
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000566151764036765
bound_frac: 0.0008559010780367205
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000566151764036765
bound_frac = 0.0008559010780367205
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.702762646
Testing bound_push=0.0008141734446115376, bound_frac=0.0016892375328111352
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0008141734446115376
bound_frac: 0.0016892375328111352
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008141734446115376
bound_frac = 0.0016892375328111352
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6970568.218021738
Testing bound_push=0.0004986658708835301, bound_frac=0.006610507075137644
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004986658708835301
bound_frac: 0.006610507075137644
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004986658708835301
bound_frac = 0.006610507075137644
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968726.7979840245
Testing bound_push=0.0006895110933188638, bound_frac=0.0023607338366854677
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0006895110933188638
bound_frac: 0.0023607338366854677
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006895110933188638
bound_frac = 0.0023607338366854677
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6966677.755753838
Testing bound_push=0.00023218536351672138, bound_frac=0.004942914654940168
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00023218536351672138
bound_frac: 0.004942914654940168
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023218536351672138
bound_frac = 0.004942914654940168
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6965266.148000501
Testing bound_push=0.0005526824889836766, bound_frac=0.0034937518690049693
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0005526824889836766
bound_frac: 0.0034937518690049693
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005526824889836766
bound_frac = 0.0034937518690049693
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972301.881236123
Testing bound_push=0.00047645885162590524, bound_frac=0.004345484903957706
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00047645885162590524
bound_frac: 0.004345484903957706
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00047645885162590524
bound_frac = 0.004345484903957706
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6973410.908978479
Testing bound_push=0.0003380005695161536, bound_frac=0.006587670127966381
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0003380005695161536
bound_frac: 0.006587670127966381
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003380005695161536
bound_frac = 0.006587670127966381
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6980387.34434549
Testing bound_push=0.000658358522485933, bound_frac=0.002980152752320372
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000658358522485933
bound_frac: 0.002980152752320372
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000658358522485933
bound_frac = 0.002980152752320372
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972313.446902361
Testing bound_push=1e-06, bound_frac=0.007273560357131971
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 1e-06
bound_frac: 0.007273560357131971
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.007273560357131971
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6970550.540575556
Testing bound_push=0.00045124859182096595, bound_frac=0.004295715086036101
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00045124859182096595
bound_frac: 0.004295715086036101
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00045124859182096595
bound_frac = 0.004295715086036101
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6974407.725006454
Testing bound_push=0.0002754017717296716, bound_frac=0.004889465206444622
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0002754017717296716
bound_frac: 0.004889465206444622
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002754017717296716
bound_frac = 0.004889465206444622
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6973465.08093633
Testing bound_push=0.00026454172311277883, bound_frac=0.006381599795848317
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00026454172311277883
bound_frac: 0.006381599795848317
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026454172311277883
bound_frac = 0.006381599795848317
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6985231.508687441
Testing bound_push=0.000644992554876632, bound_frac=0.0033746633031290457
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000644992554876632
bound_frac: 0.0033746633031290457
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000644992554876632
bound_frac = 0.0033746633031290457
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6961873.819340359
Testing bound_push=0.0002707733197159076, bound_frac=0.006752574563780741
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0002707733197159076
bound_frac: 0.006752574563780741
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002707733197159076
bound_frac = 0.006752574563780741
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6979388.798281872
Testing bound_push=0.0004760950944191864, bound_frac=0.0037047056301875046
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004760950944191864
bound_frac: 0.0037047056301875046
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004760950944191864
bound_frac = 0.0037047056301875046
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6966247.582423825
Testing bound_push=0.0004895464066311027, bound_frac=0.003759679038744532
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004895464066311027
bound_frac: 0.003759679038744532
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004895464066311027
bound_frac = 0.003759679038744532
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.7032717
Testing bound_push=0.00037621709315578927, bound_frac=0.006211976955859184
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00037621709315578927
bound_frac: 0.006211976955859184
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00037621709315578927
bound_frac = 0.006211976955859184
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6961873.817312509
Testing bound_push=0.0005850094350111392, bound_frac=0.003958169993046463
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0005850094350111392
bound_frac: 0.003958169993046463
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005850094350111392
bound_frac = 0.003958169993046463
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972533.890780462
Testing bound_push=0.00042477698585041874, bound_frac=0.0059783332597014675
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00042477698585041874
bound_frac: 0.0059783332597014675
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00042477698585041874
bound_frac = 0.0059783332597014675
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 7009464.467427751
Testing bound_push=0.00047285571542194835, bound_frac=0.003537258887091263
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00047285571542194835
bound_frac: 0.003537258887091263
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00047285571542194835
bound_frac = 0.003537258887091263
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.702763155
Testing bound_push=0.0005909410439022586, bound_frac=0.003636049139676177
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0005909410439022586
bound_frac: 0.003636049139676177
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005909410439022586
bound_frac = 0.003636049139676177
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6974407.72702676
Testing bound_push=0.0004320547781772945, bound_frac=0.006127165535864617
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004320547781772945
bound_frac: 0.006127165535864617
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004320547781772945
bound_frac = 0.006127165535864617
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6979388.58797677
Testing bound_push=0.0004641245590875538, bound_frac=0.004828573534526548
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004641245590875538
bound_frac: 0.004828573534526548
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004641245590875538
bound_frac = 0.004828573534526548
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.702614791
Testing bound_push=0.0004513775099682692, bound_frac=0.005438989526766305
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004513775099682692
bound_frac: 0.005438989526766305
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004513775099682692
bound_frac = 0.005438989526766305
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6984823.263727891
Testing bound_push=0.00043880658070099947, bound_frac=0.0038658236642301305
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00043880658070099947
bound_frac: 0.0038658236642301305
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043880658070099947
bound_frac = 0.0038658236642301305
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6980387.344345831
Testing bound_push=0.0005526770573219518, bound_frac=0.004071120180182222
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0005526770573219518
bound_frac: 0.004071120180182222
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005526770573219518
bound_frac = 0.004071120180182222
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6971337.813554614
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00037621709315578927
bound_frac: 0.006211976955859184
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00037621709315578927
bound_frac = 0.006211976955859184
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  6961873.817312509
Solve_result:  solved
Solve_time: 2.1361530000000073 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [78, 76, 24, 3, 51, 21, 66, 41, 64, 56, 42, 32, 17, 39] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(44, 78)  True    69,61,874     75,50,795     1.94s       limit         No        86.53s
(38, 76)  True    69,61,874     83,58,083     0.95s       infeasible    No        87.55s
(78, 24)  True    69,61,874     93,12,853     1.82s       limit         No        89.44s
(2, 3)    True    69,61,874     1,13,57,552   1.7s        infeasible    No        91.32s
(41, 51)  True    69,61,874     82,64,180     1.18s       infeasible    No        92.56s
(27, 21)  True    69,61,874     74,96,560     0.54s       infeasible    No        93.17s
(58, 66)  True    69,61,874     73,16,500     0.72s       solved        No        94.02s
(60, 41)  True    69,61,874     69,96,971     0.71s       solved        No        94.85s
(19, 64)  True    69,61,874     1,00,90,155   1.63s       limit         No        96.53s
(30, 56)  True    69,61,874     78,08,324     1.34s       infeasible    No        97.92s
(77, 42)  True    69,61,874     83,85,292     1.26s       infeasible    No        99.23s
(42, 32)  True    69,61,874     72,07,969     1.1s        infeasible    No        100.38s
(45, 17)  True    69,61,874     60,63,223     0.46s       infeasible    No        100.91s
(35, 39)  True    69,61,874     69,66,228     0.62s       solved        No        101.59s

**********************************Final best results******************************************

Water Network: d8_HG_SP_3_4
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,62       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,63       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,2        |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_4,65       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_4,66       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,20       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_6,36       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_7,48       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_8,47       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_9,82       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,81      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_11,37      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,49      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_13,76      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_14,45      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_15,57      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_16,18      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_17,45      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_18,75      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_19,64      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,50      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,7       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,27      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,48      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_22,62      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,34      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,3       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_24,69      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,78      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_25,43      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,59      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,63      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,66      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,31      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_29,11      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,52      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_31,58      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,77      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,40      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_34,32      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_35,16      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_36,43      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,5       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_38,60      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,16      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,35      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,13      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_41,35      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_41,60      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_42,32      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,77      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_43,14      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_44,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_45,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_46,21      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_47,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,66      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_49,31      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,22      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_51,41      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_51,76      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_52,39      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_52,56      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_54,64      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_56,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_57,51      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_57,72      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_58,4       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_59,19      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_59,64      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_60,16      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_61,50      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_62,17      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_63,40      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_64,42      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_65,23      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_66,58      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_67,46      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_68,80      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,54      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_70,12      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_71,68      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_72,51      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_72,56      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_73,57      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_74,67      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_75,17      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_76,38      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_77,33      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_78,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_78,44      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_79,69      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_80,67      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_81,3       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_82,81      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_83,70      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 8.8018406980438e-15
Total relative constraint violation: 6.583933633736407e-10
*******************************************************************************

Final best objective: 6961873.817312509
Number of nlp problem solved: 45
Total number of iteration: 1
Solver_time: 99.52 seconds
Heuristic elapsed time: 101.60 seconds

