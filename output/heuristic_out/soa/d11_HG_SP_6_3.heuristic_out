Water Network: d11_HG_SP_6_3 

Testing bound_push=0.00023122742606275685, bound_frac=0.002114538728211244
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00023122742606275685
bound_frac: 0.002114538728211244
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023122742606275685
bound_frac = 0.002114538728211244
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617825793
Testing bound_push=0.00034560482237841196, bound_frac=0.00661466878954875
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00034560482237841196
bound_frac: 0.00661466878954875
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034560482237841196
bound_frac = 0.00661466878954875
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11793243.592902636
Testing bound_push=6.0868132587965594e-06, bound_frac=0.008204622016587126
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 6.0868132587965594e-06
bound_frac: 0.008204622016587126
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.0868132587965594e-06
bound_frac = 0.008204622016587126
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11211104.721850207
Testing bound_push=0.0005220448725567952, bound_frac=0.009201965550525739
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005220448725567952
bound_frac: 0.009201965550525739
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005220448725567952
bound_frac = 0.009201965550525739
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10936862.925371956
Testing bound_push=0.0005160377669820823, bound_frac=0.003901719589606912
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005160377669820823
bound_frac: 0.003901719589606912
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005160377669820823
bound_frac = 0.003901719589606912
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11706533.254443536
Testing bound_push=0.0003009111197661092, bound_frac=0.006936530681049469
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0003009111197661092
bound_frac: 0.006936530681049469
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003009111197661092
bound_frac = 0.006936530681049469
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10801183.757898837
Testing bound_push=0.00028219609735875546, bound_frac=0.004882896643146129
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00028219609735875546
bound_frac: 0.004882896643146129
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00028219609735875546
bound_frac = 0.004882896643146129
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.621943148
Testing bound_push=0.00011756896457009294, bound_frac=0.008231785489576244
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00011756896457009294
bound_frac: 0.008231785489576244
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00011756896457009294
bound_frac = 0.008231785489576244
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11704920.172220435
Testing bound_push=6.451908737889207e-05, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 6.451908737889207e-05
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.451908737889207e-05
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679014.803430801
Testing bound_push=0.0006954993881100285, bound_frac=0.005369127752483847
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006954993881100285
bound_frac: 0.005369127752483847
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006954993881100285
bound_frac = 0.005369127752483847
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.37152223
Testing bound_push=0.00033575296661778536, bound_frac=0.009347526657468581
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00033575296661778536
bound_frac: 0.009347526657468581
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00033575296661778536
bound_frac = 0.009347526657468581
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11088377.500183117
Testing bound_push=0.00025504755267424746, bound_frac=0.0041152723814670425
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00025504755267424746
bound_frac: 0.0041152723814670425
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00025504755267424746
bound_frac = 0.0041152723814670425
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617804976
Testing bound_push=0.00018679851655405765, bound_frac=0.00811369872328098
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00018679851655405765
bound_frac: 0.00811369872328098
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018679851655405765
bound_frac = 0.00811369872328098
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617825804
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11191146.792154578
Testing bound_push=0.0006076272720973099, bound_frac=0.006856551504440697
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006076272720973099
bound_frac: 0.006856551504440697
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006076272720973099
bound_frac = 0.006856551504440697
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11004917.547251292
Testing bound_push=0.0003347037395214325, bound_frac=0.008793689357320153
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0003347037395214325
bound_frac: 0.008793689357320153
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003347037395214325
bound_frac = 0.008793689357320153
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11793243.592902595
Testing bound_push=0.0002455088956850774, bound_frac=0.0047834843159451045
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0002455088956850774
bound_frac: 0.0047834843159451045
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002455088956850774
bound_frac = 0.0047834843159451045
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679016.945091154
Testing bound_push=0.00019827050657112574, bound_frac=0.007778720648189156
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00019827050657112574
bound_frac: 0.007778720648189156
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00019827050657112574
bound_frac = 0.007778720648189156
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617835274
Testing bound_push=0.00013584869648670118, bound_frac=0.00984930114288663
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00013584869648670118
bound_frac: 0.00984930114288663
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00013584869648670118
bound_frac = 0.00984930114288663
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617825603
Testing bound_push=0.0005300773242885291, bound_frac=0.007577913553585631
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005300773242885291
bound_frac: 0.007577913553585631
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005300773242885291
bound_frac = 0.007577913553585631
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10929721.625363259
Testing bound_push=0.00031727715581719165, bound_frac=0.007457598431271145
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00031727715581719165
bound_frac: 0.007457598431271145
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00031727715581719165
bound_frac = 0.007457598431271145
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679021.54000074
Testing bound_push=0.00026421590458875166, bound_frac=0.004886762529329134
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00026421590458875166
bound_frac: 0.004886762529329134
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026421590458875166
bound_frac = 0.004886762529329134
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.6178054
Testing bound_push=0.0001587780951984065, bound_frac=0.007627869874561959
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0001587780951984065
bound_frac: 0.007627869874561959
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001587780951984065
bound_frac = 0.007627869874561959
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617805058
Testing bound_push=0.0004308712135036554, bound_frac=0.008463642531290904
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0004308712135036554
bound_frac: 0.008463642531290904
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004308712135036554
bound_frac = 0.008463642531290904
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11712550.740844455
Testing bound_push=0.00048043564921707846, bound_frac=0.007732275148617247
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00048043564921707846
bound_frac: 0.007732275148617247
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00048043564921707846
bound_frac = 0.007732275148617247
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679014.803432273
Testing bound_push=0.00029792530596620093, bound_frac=0.0065994878798479074
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00029792530596620093
bound_frac: 0.0065994878798479074
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029792530596620093
bound_frac = 0.0065994878798479074
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11414098.30197788
Testing bound_push=0.0002902421744440801, bound_frac=0.0056399567655795475
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0002902421744440801
bound_frac: 0.0056399567655795475
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002902421744440801
bound_frac = 0.0056399567655795475
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10925655.252278347
Testing bound_push=0.0001469166095215789, bound_frac=0.007664009402734969
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0001469166095215789
bound_frac: 0.007664009402734969
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001469166095215789
bound_frac = 0.007664009402734969
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617815154
Testing bound_push=0.0005570542851158003, bound_frac=0.007625935787406156
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005570542851158003
bound_frac: 0.007625935787406156
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005570542851158003
bound_frac = 0.007625935787406156
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11829458.134002855
Testing bound_push=0.0004605081691798618, bound_frac=0.007691982873240742
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0004605081691798618
bound_frac: 0.007691982873240742
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004605081691798618
bound_frac = 0.007691982873240742
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11800373.314903613
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0003009111197661092
bound_frac: 0.006936530681049469
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003009111197661092
bound_frac = 0.006936530681049469
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  10801183.757898837
Solve_result:  solved
Solve_time: 6.554240000000021 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 165) True    1,08,01,184   1,32,64,749   3.54s       limit         No        219.25s
(136, 166)True    1,08,01,184   1,60,91,251   3.9s        limit         No        223.25s
(140, 136)True    1,08,01,184   1,57,24,116   3.33s       limit         No        226.69s
(141, 140)True    1,08,01,184   1,12,05,971   2.85s       solved        No        229.73s
(8, 141)  True    1,08,01,184   1,08,66,298   1.23s       solved        No        231.11s
(69, 70)  True    1,08,01,184   1,16,28,262   1.93s       infeasible    No        233.17s
(128, 115)True    1,08,01,184   1,50,93,982   3.55s       limit         No        236.82s
(119, 114)True    1,08,01,184   1,35,53,853   3.17s       limit         No        240.1s
(22, 87)  True    1,08,01,184   1,26,50,031   3.62s       limit         No        243.87s
(87, 85)  True    1,08,01,184   1,08,73,931   0.96s       solved        No        244.95s
(147, 37) True    1,08,01,184   1,07,22,777   0.81s       solved        Yes       245.88s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [147, 82, 30, 131, 35, 65, 32, 72, 2, 93, 19, 113, 26, 55, 100, 45, 14, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 147) True    1,07,22,777   1,07,12,134   0.32s       solved        Yes       246.38s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 26, 55, 100, 45, 88, 6, 58] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(124, 82) True    1,07,12,134   1,07,12,745   0.34s       solved        No        246.89s
(105, 30) True    1,07,12,134   1,07,89,235   1.78s       solved        No        248.77s
(56, 131) True    1,07,12,134   1,10,29,175   3.37s       limit         No        252.25s
(48, 35)  True    1,07,12,134   1,59,32,191   3.59s       limit         No        255.98s
(75, 65)  True    1,07,12,134   1,10,66,380   3.44s       limit         No        259.52s
(111, 32) True    1,07,12,134   1,11,61,458   1.68s       infeasible    No        261.29s
(129, 72) True    1,07,12,134   1,47,00,966   3.31s       limit         No        264.71s
(18, 2)   True    1,07,12,134   1,12,63,816   3.58s       limit         No        268.39s
(14, 122) True    1,07,12,134   1,07,15,253   0.24s       solved        No        268.75s
(74, 93)  True    1,07,12,134   1,07,25,235   0.34s       solved        No        269.21s
(68, 19)  True    1,07,12,134   1,07,88,603   1.26s       solved        No        270.57s
(100, 113)True    1,07,12,134   1,54,76,542   3.76s       limit         No        274.44s
(145, 26) True    1,07,12,134   1,07,09,134   0.23s       solved        Yes       274.78s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 26]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [145, 55, 100, 45, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 145) True    1,07,09,134   1,07,08,085   0.18s       solved        Yes       275.1s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 26, 145]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [55, 100, 45, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(76, 55)  True    1,07,08,085   1,09,17,809   2.72s       limit         No        277.99s
(144, 100)True    1,07,08,085   1,09,91,334   0.94s       solved        No        279.08s
(6, 45)   True    1,07,08,085   1,08,62,024   2.43s       infeasible    No        281.64s
(60, 116) True    1,07,08,085   1,07,08,110   0.21s       solved        No        281.96s
(84, 88)  True    1,07,08,085   1,09,35,568   2.32s       solved        No        284.39s
(101, 6)  True    1,07,08,085   1,07,13,977   0.23s       solved        No        284.73s

**********************************Final best results******************************************

Water Network: d11_HG_SP_6_3
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_2,18       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,111      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_4,43       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,89       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_6,101      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_7,39       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,85       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_9,92       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,126     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_11,59      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,125     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_13,66      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_14,149     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_15,103     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_16,96      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_17,152     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_18,96      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_19,68      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,115     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,121     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_22,2       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,94      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_25,65      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_26,116     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,159     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,165     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,135     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_29,43      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,77      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,105     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_31,83      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,3       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_32,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,114     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_34,11      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_35,48      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_36,154     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,7       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,147     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_38,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,1       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,62      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_41,19      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,146     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_43,158     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_44,79      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_45,6       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_45,101     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_46,133     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_47,93      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,117     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_49,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,44      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_51,42      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_52,118     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,35      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_54,92      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_55,10      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,112     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_57,16      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_58,91      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_59,40      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_60,97      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_60,100     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_61,34      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_61,153     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_62,14      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,33      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,120     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_64,155     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_65,49      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_65,75      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_66,132     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_67,13      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_68,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,70      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,131     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_70,73      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_71,73      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_72,7       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_73,131     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_74,72      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_74,93      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_75,49      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_76,55      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_76,108     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_77,35      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_78,99      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_78,141     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_79,6       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,106     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_81,15      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_82,83      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_82,115     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_83,123     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_84,88      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_85,87      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_86,3       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_87,22      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_87,36      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_88,145     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_89,67      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_90,88      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_91,74      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_92,113     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_93,72      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_94,15      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_94,150     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_95,121     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_96,2       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_96,122     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_97,81      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_97,145     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_98,29      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_99,36      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_100,144    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_101,110    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_102,65     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_103,45     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_103,52     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_104,127    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_105,77     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_106,20     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_107,37     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_107,85     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_108,116    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_109,61     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_110,5      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_111,32     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_112,4      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_113,100    |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_113,101    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_114,119    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_115,83     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_115,128    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_116,60     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_117,35     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_117,92     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_118,79     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_119,77     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_120,19     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_121,104    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_122,11     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_122,14     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_123,21     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_124,47     |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_124,82     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_125,124    |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_126,108    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_127,9      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_128,46     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_129,7      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_129,72     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_130,82     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_131,56     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_131,112    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_132,102    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_133,21     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_134,142    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_135,134    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_136,8      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_136,140    |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_137,51     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_138,160    |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_139,114    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_140,8      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_140,141    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_141,8      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_142,70     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_142,86     |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_143,78     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_143,141    |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_144,45     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_145,26     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_146,86     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_147,58     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_148,27     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_148,166    |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_149,103    |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_150,84     |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_151,80     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_152,24     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_153,1      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_154,57     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_155,75     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_156,138    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_157,161    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_158,90     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_159,12     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_160,151    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_161,162    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_162,139    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_163,12     |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_164,138    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_165,164    |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_166,136    |                   -0 |                    0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 2.3765146663141328e-14
Total relative constraint violation: 4.277727337377462e-09
*******************************************************************************

Final best objective: 10708085.40718229
Number of nlp problem solved: 63
Total number of iteration: 5
Solver_time: 279.12 seconds
Heuristic elapsed time: 284.75 seconds

