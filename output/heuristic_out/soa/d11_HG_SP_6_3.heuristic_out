Water Network: d11_HG_SP_6_3 

Testing bound_push=9.954610536436723e-05, bound_frac=0.008397482993846633
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 9.954610536436723e-05
bound_frac: 0.008397482993846633
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.954610536436723e-05
bound_frac = 0.008397482993846633
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11686972.887564909
Testing bound_push=0.0007675403280202408, bound_frac=0.007440745978687204
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007675403280202408
bound_frac: 0.007440745978687204
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007675403280202408
bound_frac = 0.007440745978687204
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10747470.721439574
Testing bound_push=0.0002850356590516691, bound_frac=0.00568464324843143
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0002850356590516691
bound_frac: 0.00568464324843143
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002850356590516691
bound_frac = 0.00568464324843143
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11763558.476871964
Testing bound_push=0.00020280175855297267, bound_frac=0.004594413589630733
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00020280175855297267
bound_frac: 0.004594413589630733
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020280175855297267
bound_frac = 0.004594413589630733
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11681156.42166422
Testing bound_push=0.0002056590781138839, bound_frac=0.00926435050127736
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0002056590781138839
bound_frac: 0.00926435050127736
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002056590781138839
bound_frac = 0.00926435050127736
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.622612609
Testing bound_push=0.00010893299405942688, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00010893299405942688
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010893299405942688
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11704920.181178119
Testing bound_push=0.0004855504534298432, bound_frac=0.007071145818095508
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0004855504534298432
bound_frac: 0.007071145818095508
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004855504534298432
bound_frac = 0.007071145818095508
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926785.334586263
Testing bound_push=0.0006765877015708936, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006765877015708936
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006765877015708936
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10784372.58699472
Testing bound_push=0.00036195495310065395, bound_frac=0.0012958890443192056
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00036195495310065395
bound_frac: 0.0012958890443192056
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00036195495310065395
bound_frac = 0.0012958890443192056
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11829437.14188257
Testing bound_push=0.0003044256438603887, bound_frac=0.0067860609018612255
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0003044256438603887
bound_frac: 0.0067860609018612255
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003044256438603887
bound_frac = 0.0067860609018612255
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11684673.744057471
Testing bound_push=0.00036193909991769763, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00036193909991769763
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00036193909991769763
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11793243.597629175
Testing bound_push=0.00047826366091402727, bound_frac=0.006927961677514709
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00047826366091402727
bound_frac: 0.006927961677514709
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00047826366091402727
bound_frac = 0.006927961677514709
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11793243.597596785
Testing bound_push=0.0009165080068326854, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009165080068326854
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009165080068326854
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10927589.394418448
Testing bound_push=0.0005564993806561094, bound_frac=0.0021074528776834803
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005564993806561094
bound_frac: 0.0021074528776834803
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005564993806561094
bound_frac = 0.0021074528776834803
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679016.945803445
Testing bound_push=0.0005602017951319202, bound_frac=0.006701043426330716
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005602017951319202
bound_frac: 0.006701043426330716
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005602017951319202
bound_frac = 0.006701043426330716
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10938254.110150544
Testing bound_push=0.0006053204793682564, bound_frac=0.009168942700234753
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006053204793682564
bound_frac: 0.009168942700234753
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006053204793682564
bound_frac = 0.009168942700234753
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11694867.929206943
Testing bound_push=0.0006535068596735826, bound_frac=0.007048603487195313
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006535068596735826
bound_frac: 0.007048603487195313
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006535068596735826
bound_frac = 0.007048603487195313
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11648844.695867613
Testing bound_push=0.0009430898431275179, bound_frac=0.009823935302665225
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009430898431275179
bound_frac: 0.009823935302665225
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009430898431275179
bound_frac = 0.009823935302665225
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10775798.372656412
Testing bound_push=0.0007375151744957316, bound_frac=0.004730578842636737
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007375151744957316
bound_frac: 0.004730578842636737
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007375151744957316
bound_frac = 0.004730578842636737
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10747470.725525081
Testing bound_push=0.0007616185750481514, bound_frac=0.007023585340193844
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007616185750481514
bound_frac: 0.007023585340193844
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007616185750481514
bound_frac = 0.007023585340193844
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.385998618
Testing bound_push=0.0005625933652389414, bound_frac=0.007998868624851854
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005625933652389414
bound_frac: 0.007998868624851854
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005625933652389414
bound_frac = 0.007998868624851854
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10929835.469865367
Testing bound_push=0.0007723587093766201, bound_frac=0.007139188204003129
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007723587093766201
bound_frac: 0.007139188204003129
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007723587093766201
bound_frac = 0.007139188204003129
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10959965.40751486
Testing bound_push=0.0009078776971173429, bound_frac=0.009533926370956005
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009078776971173429
bound_frac: 0.009533926370956005
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009078776971173429
bound_frac = 0.009533926370956005
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10951566.860453943
Testing bound_push=0.0008411906029937193, bound_frac=0.006834145912809278
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008411906029937193
bound_frac: 0.006834145912809278
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008411906029937193
bound_frac = 0.006834145912809278
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10969747.517996112
Testing bound_push=0.0008643203720136976, bound_frac=0.007206485420986276
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008643203720136976
bound_frac: 0.007206485420986276
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008643203720136976
bound_frac = 0.007206485420986276
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10775249.153688764
Testing bound_push=0.0006299117951951293, bound_frac=0.00719874369167414
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006299117951951293
bound_frac: 0.00719874369167414
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006299117951951293
bound_frac = 0.00719874369167414
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10930950.14232786
Testing bound_push=0.0008277244892553889, bound_frac=0.0073132349598443655
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008277244892553889
bound_frac: 0.0073132349598443655
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008277244892553889
bound_frac = 0.0073132349598443655
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10747470.721476
Testing bound_push=0.0008931784892735481, bound_frac=0.00907512678617228
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008931784892735481
bound_frac: 0.00907512678617228
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008931784892735481
bound_frac = 0.00907512678617228
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10934860.979760474
Testing bound_push=0.0008544837173008379, bound_frac=0.007790509935426886
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008544837173008379
bound_frac: 0.007790509935426886
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008544837173008379
bound_frac = 0.007790509935426886
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10951566.860486617
Testing bound_push=0.0008806632687311515, bound_frac=0.007353328759281757
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008806632687311515
bound_frac: 0.007353328759281757
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008806632687311515
bound_frac = 0.007353328759281757
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10934908.30113893
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007675403280202408
bound_frac: 0.007440745978687204
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007675403280202408
bound_frac = 0.007440745978687204
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  10747470.721439574
Solve_result:  solved
Solve_time: 3.022912000000005 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 165) True    1,07,47,471   1,39,60,700   1.57s       limit         No        89.48s
(136, 166)True    1,07,47,471   1,27,45,400   1.53s       limit         No        91.08s
(140, 136)True    1,07,47,471   1,44,74,493   1.5s        limit         No        92.66s
(141, 140)True    1,07,47,471   1,12,34,396   0.96s       solved        No        93.7s
(8, 141)  True    1,07,47,471   1,08,82,470   0.43s       solved        No        94.2s
(69, 70)  True    1,07,47,471   1,14,36,161   1.46s       infeasible    No        95.71s
(128, 115)True    1,07,47,471   1,54,55,187   1.49s       limit         No        97.29s
(119, 114)True    1,07,47,471   1,56,09,185   1.43s       limit         No        98.79s
(22, 87)  True    1,07,47,471   1,27,09,582   1.63s       limit         No        100.5s
(87, 85)  True    1,07,47,471   1,08,68,494   0.58s       solved        No        101.15s
(147, 37) True    1,07,47,471   1,07,09,040   0.36s       solved        Yes       101.59s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [147, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 147) True    1,07,09,040   1,07,07,990   0.22s       solved        Yes       101.92s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6, 58] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(83, 82)  True    1,07,07,990   1,07,06,271   0.29s       solved        Yes       102.33s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147, 82]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [83, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(123, 83) True    1,07,06,271   1,11,68,701   1.05s       solved        No        103.47s
(105, 30) True    1,07,06,271   1,07,94,089   0.6s        solved        No        104.12s
(56, 131) True    1,07,06,271   1,14,05,294   1.18s       infeasible    No        105.37s
(48, 35)  True    1,07,06,271   1,52,07,595   1.51s       limit         No        106.96s
(75, 65)  True    1,07,06,271   1,13,03,052   1.45s       limit         No        108.49s
(111, 32) True    1,07,06,271   1,12,07,621   1.62s       limit         No        110.18s
(129, 72) True    1,07,06,271   1,44,76,996   1.39s       limit         No        111.65s
(18, 2)   True    1,07,06,271   1,09,24,064   1.74s       limit         No        113.47s
(14, 122) True    1,07,06,271   1,07,04,247   0.2s        solved        Yes       113.75s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147, 82, 83, 30, 131, 35, 65, 32, 72, 2, 122]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [93, 19, 113, 55, 100, 45, 14, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(74, 93)  True    1,07,04,247   1,07,19,168   0.18s       solved        No        114.05s
(68, 19)  True    1,07,04,247   1,07,80,436   0.21s       solved        No        114.34s
(100, 113)True    1,07,04,247   1,49,86,477   1.51s       limit         No        115.93s
(76, 55)  True    1,07,04,247   1,07,17,815   0.85s       solved        No        116.86s
(144, 100)True    1,07,04,247   1,09,94,675   0.48s       solved        No        117.41s
(6, 45)   True    1,07,04,247   1,07,63,470   0.53s       solved        No        118.0s
(62, 14)  True    1,07,04,247   1,50,15,014   1.54s       limit         No        119.62s
(26, 116) True    1,07,04,247   1,06,96,654   0.27s       solved        Yes       119.97s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147, 82, 83, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 14, 116]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [26, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(145, 26) True    1,06,96,654   1,07,28,076   0.29s       solved        No        120.38s
(84, 88)  True    1,06,96,654   1,09,37,986   0.5s        solved        No        120.96s
(101, 6)  True    1,06,96,654   1,07,20,819   0.27s       solved        No        121.3s

**********************************Final best results******************************************

Water Network: d11_HG_SP_6_3
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,18       |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,111      |             -2e-08   |          -2.4e-07    |
+-----------------+----------------------+----------------------+
| con2_4,43       |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_5,89       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,101      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_7,39       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,85       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,92       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,126     |              0       |          -0.00079348 |
+-----------------+----------------------+----------------------+
| con2_11,59      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,125     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_13,66      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,149     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,103     |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_16,96      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_17,152     |              1e-08   |          -0.00327055 |
+-----------------+----------------------+----------------------+
| con2_18,96      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_19,68      |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_20,115     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_21,121     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_22,2       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_23,94      |              1e-08   |          -0.00358782 |
+-----------------+----------------------+----------------------+
| con2_24,26      |              1e-08   |          -1.856e-05  |
+-----------------+----------------------+----------------------+
| con2_25,65      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,116     |              0       |           0.294651   |
+-----------------+----------------------+----------------------+
| con2_27,159     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,165     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_28,135     |              3e-08   |          -0.00053372 |
+-----------------+----------------------+----------------------+
| con2_29,43      |              1e-08   |          -0.00036676 |
+-----------------+----------------------+----------------------+
| con2_30,77      |              2e-08   |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_30,105     |              1e-08   |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_31,83      |              2e-08   |          -0.00115094 |
+-----------------+----------------------+----------------------+
| con2_32,3       |              2e-08   |          -2.3e-07    |
+-----------------+----------------------+----------------------+
| con2_32,41      |             -2e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_33,114     |             -1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_34,11      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,48      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_36,154     |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_37,7       |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_37,147     |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_38,30      |              0       |          -0.0264162  |
+-----------------+----------------------+----------------------+
| con2_39,1       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_40,62      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_41,19      |             -1e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_42,146     |              3e-08   |          -1.88e-06   |
+-----------------+----------------------+----------------------+
| con2_43,158     |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_44,79      |              0       |          -0.00567674 |
+-----------------+----------------------+----------------------+
| con2_45,6       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_45,101     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_46,133     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_47,93      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,117     |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_49,25      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,44      |              0       |          -0.0420749  |
+-----------------+----------------------+----------------------+
| con2_51,42      |              3e-08   |          -2.46e-06   |
+-----------------+----------------------+----------------------+
| con2_52,118     |             -0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_53,35      |              2e-08   |          -0.00209776 |
+-----------------+----------------------+----------------------+
| con2_54,92      |              1e-08   |          -0.0120721  |
+-----------------+----------------------+----------------------+
| con2_55,10      |              1e-08   |          -0.00547057 |
+-----------------+----------------------+----------------------+
| con2_56,112     |              1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_57,16      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,91      |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_59,40      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,97      |              1e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_60,100     |             -1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_61,34      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_61,153     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_62,14      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_63,33      |             -2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_63,120     |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,155     |              2e-08   |          -0.00183302 |
+-----------------+----------------------+----------------------+
| con2_65,49      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,75      |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_66,132     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_67,13      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,30      |              2e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_69,70      |             -2e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_69,131     |              0       |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_70,73      |              2e-08   |          -8e-08      |
+-----------------+----------------------+----------------------+
| con2_71,73      |              1e-08   |          -0.00750295 |
+-----------------+----------------------+----------------------+
| con2_72,7       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_73,131     |              1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_74,72      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_74,93      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,49      |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_76,55      |             -2e-08   |          -0.00162178 |
+-----------------+----------------------+----------------------+
| con2_76,108     |              0       |          -0.00044603 |
+-----------------+----------------------+----------------------+
| con2_77,35      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_78,99      |              9e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_78,141     |             -3e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_79,6       |             -0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_80,106     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_81,15      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_82,83      |              1e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_82,115     |             -2e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_83,123     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_84,88      |             -0       |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_85,87      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_86,3       |             -2e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_87,22      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_87,36      |              2e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_88,145     |              0       |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_89,67      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_90,88      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_91,74      |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_92,113     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_93,72      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_94,15      |              1e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_94,150     |             -0       |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_95,121     |              2e-08   |          -0.00181544 |
+-----------------+----------------------+----------------------+
| con2_96,2       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_96,122     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_97,81      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_97,145     |             -1e-08   |          -8e-08      |
+-----------------+----------------------+----------------------+
| con2_98,29      |              2e-08   |          -0.00216437 |
+-----------------+----------------------+----------------------+
| con2_99,36      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_100,144    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_101,110    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,65     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,45     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,52     |             -0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_104,127    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_105,77     |              1e-08   |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_106,20     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_107,37     |              2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_107,85     |             -3e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_108,116    |              1e-08   |          -8.318e-05  |
+-----------------+----------------------+----------------------+
| con2_109,61     |              1e-08   |          -0.0108198  |
+-----------------+----------------------+----------------------+
| con2_110,5      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,32     |             -0       |          -2.5e-07    |
+-----------------+----------------------+----------------------+
| con2_112,4      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_113,100    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_113,101    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_114,119    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_115,83     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_115,128    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,60     |              0       |          -5.559e-05  |
+-----------------+----------------------+----------------------+
| con2_117,35     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_117,92     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_118,79     |             -0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_119,77     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_120,19     |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_121,104    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,11     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,14     |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_123,21     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_124,47     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_124,82     |             -2e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_125,124    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_126,108    |              0       |          -0.00048117 |
+-----------------+----------------------+----------------------+
| con2_127,9      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_128,46     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,7      |              2e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_129,72     |             -1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_130,82     |              1e-08   |          -0.00423496 |
+-----------------+----------------------+----------------------+
| con2_131,56     |              1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_131,112    |              2e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_132,102    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_133,21     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_134,142    |              4e-08   |          -3.67e-06   |
+-----------------+----------------------+----------------------+
| con2_135,134    |              2e-08   |          -3.67e-06   |
+-----------------+----------------------+----------------------+
| con2_136,8      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_136,140    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_137,51     |              7e-08   |          -4.34e-06   |
+-----------------+----------------------+----------------------+
| con2_138,160    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_139,114    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_140,8      |              4e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_140,141    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,8      |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_142,70     |              5e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_142,86     |             -4e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_143,78     |              6e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_143,141    |             -1e-07   |          -1.08e-06   |
+-----------------+----------------------+----------------------+
| con2_144,45     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_145,26     |             -0       |          -1.382e-05  |
+-----------------+----------------------+----------------------+
| con2_146,86     |              3e-08   |          -3.4e-07    |
+-----------------+----------------------+----------------------+
| con2_147,58     |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_148,27     |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_148,166    |             -1.6e-07 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_149,103    |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_150,84     |             -0       |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_151,80     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_152,24     |              1e-08   |          -2.521e-05  |
+-----------------+----------------------+----------------------+
| con2_153,1      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_154,57     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_155,75     |              1e-08   |          -2.2e-05    |
+-----------------+----------------------+----------------------+
| con2_156,138    |              1.5e-07 |          -3.4e-07    |
+-----------------+----------------------+----------------------+
| con2_157,161    |              6e-08   |          -3.47e-06   |
+-----------------+----------------------+----------------------+
| con2_158,90     |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_159,12     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_160,151    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_161,162    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_162,139    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_163,12     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_164,138    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_165,164    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_166,136    |              0       |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.996788680475967e-06
Total relative constraint violation: 0.4293246019109489
*******************************************************************************

Final best objective: 10696654.049590942
Number of nlp problem solved: 64
Total number of iteration: 6
Solver_time: 117.99 seconds
Heuristic elapsed time: 121.31 seconds

