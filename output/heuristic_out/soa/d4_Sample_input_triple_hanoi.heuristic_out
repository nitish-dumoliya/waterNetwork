Water Network: d4_Sample_input_triple_hanoi 

Testing bound_push=0.0002178325360312907, bound_frac=0.0027064787156267493
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0002178325360312907
bound_frac: 0.0027064787156267493
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002178325360312907
bound_frac = 0.0027064787156267493
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18375519.18112366
Testing bound_push=0.0009783768297863533, bound_frac=0.0028872160982361212
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0009783768297863533
bound_frac: 0.0028872160982361212
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009783768297863533
bound_frac = 0.0028872160982361212
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942907684
Testing bound_push=0.0006755293346421339, bound_frac=0.007441100362906194
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006755293346421339
bound_frac: 0.007441100362906194
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006755293346421339
bound_frac = 0.007441100362906194
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18376564.098080598
Testing bound_push=5.783288253624641e-05, bound_frac=9.623907186501054e-05
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 5.783288253624641e-05
bound_frac: 9.623907186501054e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.783288253624641e-05
bound_frac = 9.623907186501054e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18891680.12683267
Testing bound_push=0.0003252125672004627, bound_frac=0.0038987866490612917
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0003252125672004627
bound_frac: 0.0038987866490612917
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003252125672004627
bound_frac = 0.0038987866490612917
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94190636
Testing bound_push=0.0007085875271402385, bound_frac=0.006482473407111453
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007085875271402385
bound_frac: 0.006482473407111453
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007085875271402385
bound_frac = 0.006482473407111453
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937378015
Testing bound_push=0.001, bound_frac=0.0004958504004496378
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.001
bound_frac: 0.0004958504004496378
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0004958504004496378
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94290736
Testing bound_push=0.0009478328241383973, bound_frac=0.003556115209479868
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0009478328241383973
bound_frac: 0.003556115209479868
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009478328241383973
bound_frac = 0.003556115209479868
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942907985
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.521456614
Testing bound_push=0.000530832525850134, bound_frac=0.0029708273242639006
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000530832525850134
bound_frac: 0.0029708273242639006
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000530832525850134
bound_frac = 0.0029708273242639006
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94280939
Testing bound_push=0.0009539650226947124, bound_frac=0.008370470752853805
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0009539650226947124
bound_frac: 0.008370470752853805
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009539650226947124
bound_frac = 0.008370470752853805
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94290916
Testing bound_push=0.000943109926390819, bound_frac=0.001834976501055297
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000943109926390819
bound_frac: 0.001834976501055297
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000943109926390819
bound_frac = 0.001834976501055297
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942749493
Testing bound_push=0.001, bound_frac=0.0026153584469525313
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.001
bound_frac: 0.0026153584469525313
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0026153584469525313
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942907874
Testing bound_push=0.00022220941553656993, bound_frac=0.0014666714068609615
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00022220941553656993
bound_frac: 0.0014666714068609615
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00022220941553656993
bound_frac = 0.0014666714068609615
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937378015
Testing bound_push=0.0006618842495988873, bound_frac=0.0040833744386795335
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006618842495988873
bound_frac: 0.0040833744386795335
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006618842495988873
bound_frac = 0.0040833744386795335
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942910347
Testing bound_push=0.0009911882736416927, bound_frac=0.00903697009973199
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0009911882736416927
bound_frac: 0.00903697009973199
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009911882736416927
bound_frac = 0.00903697009973199
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.93737802
Testing bound_push=0.0008349563062776492, bound_frac=0.004184079430894171
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0008349563062776492
bound_frac: 0.004184079430894171
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008349563062776492
bound_frac = 0.004184079430894171
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18627208.6259212
Testing bound_push=0.0009916802379741462, bound_frac=0.0034323202104547465
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0009916802379741462
bound_frac: 0.0034323202104547465
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009916802379741462
bound_frac = 0.0034323202104547465
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94290849
Testing bound_push=0.00046646432802555993, bound_frac=0.0042189967647014975
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00046646432802555993
bound_frac: 0.0042189967647014975
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046646432802555993
bound_frac = 0.0042189967647014975
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937378015
Testing bound_push=0.0006004042321859538, bound_frac=0.0047041062728327395
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006004042321859538
bound_frac: 0.0047041062728327395
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006004042321859538
bound_frac = 0.0047041062728327395
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942908715
Testing bound_push=0.000935239523107864, bound_frac=0.009101675706446622
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000935239523107864
bound_frac: 0.009101675706446622
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000935239523107864
bound_frac = 0.009101675706446622
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.943818167
Testing bound_push=0.000818414134093098, bound_frac=0.005208488734358631
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000818414134093098
bound_frac: 0.005208488734358631
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000818414134093098
bound_frac = 0.005208488734358631
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942922562
Testing bound_push=0.0008511419811980635, bound_frac=0.005207034565570319
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0008511419811980635
bound_frac: 0.005207034565570319
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008511419811980635
bound_frac = 0.005207034565570319
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.9429079
Testing bound_push=0.000577140929574013, bound_frac=0.0055067933922434385
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000577140929574013
bound_frac: 0.0055067933922434385
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000577140929574013
bound_frac = 0.0055067933922434385
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942837138
Testing bound_push=0.0004901158902775274, bound_frac=0.005014006571151122
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0004901158902775274
bound_frac: 0.005014006571151122
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004901158902775274
bound_frac = 0.005014006571151122
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942908216
Testing bound_push=0.000837202060834572, bound_frac=0.007230242940780406
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000837202060834572
bound_frac: 0.007230242940780406
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000837202060834572
bound_frac = 0.007230242940780406
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942907896
Testing bound_push=0.0008012261551501078, bound_frac=0.004432028385199545
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0008012261551501078
bound_frac: 0.004432028385199545
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008012261551501078
bound_frac = 0.004432028385199545
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942816105
Testing bound_push=0.0007458496666793496, bound_frac=0.00554109768003024
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007458496666793496
bound_frac: 0.00554109768003024
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007458496666793496
bound_frac = 0.00554109768003024
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94290754
Testing bound_push=0.0005728573920339416, bound_frac=0.006150532688615604
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005728573920339416
bound_frac: 0.006150532688615604
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005728573920339416
bound_frac = 0.006150532688615604
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.946621835
Testing bound_push=0.000433270391461119, bound_frac=0.005470232767870604
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000433270391461119
bound_frac: 0.005470232767870604
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000433270391461119
bound_frac = 0.005470232767870604
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942905754
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007085875271402385
bound_frac: 0.006482473407111453
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007085875271402385
bound_frac = 0.006482473407111453
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  18369652.937378015
Solve_result:  solved
Solve_time: 1.1566910000000021 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 87, 29, 59, 89, 16, 46, 76] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,83,69,653   1,84,19,716   0.05s       solved        No        35.5s
(56, 57)  True    1,83,69,653   1,84,19,582   0.08s       solved        No        35.6s
(86, 87)  True    1,83,69,653   1,84,19,900   0.05s       solved        No        35.67s
(28, 29)  True    1,83,69,653   1,86,46,183   0.05s       solved        No        35.73s
(58, 59)  True    1,83,69,653   1,86,46,181   0.05s       solved        No        35.8s
(88, 89)  True    1,83,69,653   1,86,46,181   0.05s       solved        No        35.86s
(15, 16)  True    1,83,69,653   1,83,74,515   0.05s       solved        No        35.93s
(45, 46)  True    1,83,69,653   1,83,74,517   0.05s       solved        No        36.0s
(75, 76)  True    1,83,69,653   1,83,74,517   0.04s       solved        No        36.06s

**********************************Final best results******************************************

Water Network: d4_Sample_input_triple_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,63       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_63,64      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,79      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_63,80      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_64,65      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_65,66      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_66,67      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_67,68      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_68,69      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,70      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_70,71      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_70,74      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_71,72      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_72,73      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_74,75      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_75,76      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_76,87      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_77,76      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_78,77      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_79,78      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_80,81      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_80,83      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_81,82      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_83,84      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_83,88      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_84,85      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_85,92      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_86,85      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_87,86      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_88,89      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_89,90      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_90,91      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_92,91      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 2.3598127618651432e-09
Total relative constraint violation: 2.871144577714459e-09
*******************************************************************************

Final best objective: 18369652.937378015
Number of nlp problem solved: 40
Total number of iteration: 1
Solver_time: 35.67 seconds
Heuristic elapsed time: 36.06 seconds

