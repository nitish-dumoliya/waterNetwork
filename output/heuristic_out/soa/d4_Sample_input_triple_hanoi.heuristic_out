Water Network: d4_Sample_input_triple_hanoi 

Testing bound_push=1.5470913105386078e-05, bound_frac=0.0015271468916637455
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1.5470913105386078e-05
bound_frac: 0.0015271468916637455
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.5470913105386078e-05
bound_frac = 0.0015271468916637455
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.521499295
Testing bound_push=0.0008435838051256925, bound_frac=0.00568904988035119
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0008435838051256925
bound_frac: 0.00568904988035119
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008435838051256925
bound_frac = 0.00568904988035119
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18817527.24044072
Testing bound_push=0.0002337136173454199, bound_frac=0.0019420158953717354
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0002337136173454199
bound_frac: 0.0019420158953717354
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002337136173454199
bound_frac = 0.0019420158953717354
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18732474.884035304
Testing bound_push=0.00030284652529275163, bound_frac=0.003135624821532504
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00030284652529275163
bound_frac: 0.003135624821532504
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00030284652529275163
bound_frac = 0.003135624821532504
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942888454
Testing bound_push=0.0008734015810852546, bound_frac=0.00428025933633444
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0008734015810852546
bound_frac: 0.00428025933633444
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008734015810852546
bound_frac = 0.00428025933633444
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.03445648
Testing bound_push=0.0001339391669748469, bound_frac=0.003907192563227059
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0001339391669748469
bound_frac: 0.003907192563227059
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001339391669748469
bound_frac = 0.003907192563227059
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18374260.05914923
Testing bound_push=0.000814491738053545, bound_frac=0.005762409646981812
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000814491738053545
bound_frac: 0.005762409646981812
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000814491738053545
bound_frac = 0.005762409646981812
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942959566
Testing bound_push=0.00010989743002092465, bound_frac=0.006926404960367957
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010989743002092465
bound_frac: 0.006926404960367957
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010989743002092465
bound_frac = 0.006926404960367957
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.035376504
Testing bound_push=0.0003148607371567224, bound_frac=0.005202870239979632
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0003148607371567224
bound_frac: 0.005202870239979632
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003148607371567224
bound_frac = 0.005202870239979632
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891102
Testing bound_push=0.0007103666072973344, bound_frac=0.00570051043970661
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007103666072973344
bound_frac: 0.00570051043970661
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007103666072973344
bound_frac = 0.00570051043970661
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942806717
Testing bound_push=0.0003672586200172809, bound_frac=0.005381484076916616
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0003672586200172809
bound_frac: 0.005381484076916616
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003672586200172809
bound_frac = 0.005381484076916616
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18966783.456363842
Testing bound_push=0.0007622919938561742, bound_frac=0.005791848789604837
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007622919938561742
bound_frac: 0.005791848789604837
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007622919938561742
bound_frac = 0.005791848789604837
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942889534
Testing bound_push=0.00029768750357794056, bound_frac=0.009343491279243296
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00029768750357794056
bound_frac: 0.009343491279243296
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029768750357794056
bound_frac = 0.009343491279243296
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891113
Testing bound_push=0.00043821701788600157, bound_frac=0.006016532694505652
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00043821701788600157
bound_frac: 0.006016532694505652
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043821701788600157
bound_frac = 0.006016532694505652
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942890923
Testing bound_push=0.0006288491204033743, bound_frac=0.006410635991392696
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006288491204033743
bound_frac: 0.006410635991392696
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006288491204033743
bound_frac = 0.006410635991392696
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18715817.866520274
Testing bound_push=0.0005195660932838405, bound_frac=0.005808439481613605
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005195660932838405
bound_frac: 0.005808439481613605
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005195660932838405
bound_frac = 0.005808439481613605
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94382344
Testing bound_push=0.0007110053084050889, bound_frac=0.005795376963941084
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007110053084050889
bound_frac: 0.005795376963941084
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007110053084050889
bound_frac = 0.005795376963941084
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942748606
Testing bound_push=0.0005287217431915534, bound_frac=0.01
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005287217431915534
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005287217431915534
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942890763
Testing bound_push=0.0005687242485329743, bound_frac=0.0053729756246567425
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005687242485329743
bound_frac: 0.0053729756246567425
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005687242485329743
bound_frac = 0.0053729756246567425
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94289085
Testing bound_push=0.0006048607683283132, bound_frac=0.0063921289741653365
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006048607683283132
bound_frac: 0.0063921289741653365
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006048607683283132
bound_frac = 0.0063921289741653365
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94289152
Testing bound_push=0.000643446741988715, bound_frac=0.006019767232991458
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000643446741988715
bound_frac: 0.006019767232991458
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000643446741988715
bound_frac = 0.006019767232991458
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891605
Testing bound_push=0.0006853619656795462, bound_frac=0.005797141051109207
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006853619656795462
bound_frac: 0.005797141051109207
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006853619656795462
bound_frac = 0.005797141051109207
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891914
Testing bound_push=0.0006853695382425119, bound_frac=0.008563156545894538
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006853695382425119
bound_frac: 0.008563156545894538
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006853695382425119
bound_frac = 0.008563156545894538
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891512
Testing bound_push=0.0006229972328945757, bound_frac=0.0047626718075873065
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006229972328945757
bound_frac: 0.0047626718075873065
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006229972328945757
bound_frac = 0.0047626718075873065
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94288927
Testing bound_push=0.0006609113982366049, bound_frac=0.005854845980582717
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006609113982366049
bound_frac: 0.005854845980582717
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006609113982366049
bound_frac = 0.005854845980582717
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942890346
Testing bound_push=0.0007320558293457276, bound_frac=0.0060838719772268145
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007320558293457276
bound_frac: 0.0060838719772268145
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007320558293457276
bound_frac = 0.0060838719772268145
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18374077.570083823
Testing bound_push=0.0006831552884803899, bound_frac=0.005797043405327046
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006831552884803899
bound_frac: 0.005797043405327046
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006831552884803899
bound_frac = 0.005797043405327046
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94289192
Testing bound_push=0.000749236216897794, bound_frac=0.007861168629937083
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000749236216897794
bound_frac: 0.007861168629937083
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000749236216897794
bound_frac = 0.007861168629937083
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891914
Testing bound_push=0.0005446723234226965, bound_frac=0.004096757374698638
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005446723234226965
bound_frac: 0.004096757374698638
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005446723234226965
bound_frac = 0.004096757374698638
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891914
Testing bound_push=0.0007111510483044874, bound_frac=0.005522253647945259
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007111510483044874
bound_frac: 0.005522253647945259
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007111510483044874
bound_frac = 0.005522253647945259
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942890916
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007110053084050889
bound_frac: 0.005795376963941084
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007110053084050889
bound_frac = 0.005795376963941084
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  18369652.942748606
Solve_result:  solved
Solve_time: 3.1054889999999915 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 87, 29, 59, 89, 16, 46, 76] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,83,69,653   1,84,19,582   0.15s       solved        No        86.45s
(56, 57)  True    1,83,69,653   1,84,19,582   0.09s       solved        No        86.58s
(86, 87)  True    1,83,69,653   1,84,19,582   0.17s       solved        No        86.82s
(28, 29)  True    1,83,69,653   1,86,46,183   0.13s       solved        No        86.98s
(58, 59)  True    1,83,69,653   1,86,46,181   0.12s       solved        No        87.23s
(88, 89)  True    1,83,69,653   1,86,46,181   0.1s        solved        No        87.37s
(15, 16)  True    1,83,69,653   1,83,74,515   0.09s       solved        No        87.5s
(45, 46)  True    1,83,69,653   1,83,74,517   0.09s       solved        No        87.7s
(75, 76)  True    1,83,69,653   1,83,74,517   0.11s       solved        No        87.85s

**********************************Final best results******************************************

Water Network: d4_Sample_input_triple_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,63       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,64      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,79      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,80      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_64,65      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_65,66      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_66,67      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_67,68      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_68,69      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,70      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_70,71      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_70,74      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_71,72      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_72,73      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_74,75      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_75,76      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_76,87      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_77,76      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_78,77      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_79,78      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,81      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,83      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_81,82      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_83,84      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_83,88      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_84,85      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_85,92      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_86,85      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_87,86      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_88,89      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_89,90      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_90,91      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_92,91      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 3.441691376337985e-14
Total relative constraint violation: 9.020644365256412e-15
*******************************************************************************

Final best objective: 18369652.942748606
Number of nlp problem solved: 40
Total number of iteration: 1
Solver_time: 86.50 seconds
Heuristic elapsed time: 87.86 seconds

