Water Network: d12 

Testing bound_push=0.0007289488989251796, bound_frac=0.00027952167132970414
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007289488989251796
bound_frac: 0.00027952167132970414
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007289488989251796
bound_frac = 0.00027952167132970414
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3417548.1349250493
Testing bound_push=0.0004122350889560375, bound_frac=0.0015163572421027617
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004122350889560375
bound_frac: 0.0015163572421027617
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004122350889560375
bound_frac = 0.0015163572421027617
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445882.8230389953
Testing bound_push=0.0006496648720803768, bound_frac=0.0002882117810879736
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006496648720803768
bound_frac: 0.0002882117810879736
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006496648720803768
bound_frac = 0.0002882117810879736
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446131.885413232
Testing bound_push=0.0006720199834674982, bound_frac=0.009667884112193785
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006720199834674982
bound_frac: 0.009667884112193785
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006720199834674982
bound_frac = 0.009667884112193785
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445522.7962225783
Testing bound_push=0.0006668922543810179, bound_frac=0.008543108463143404
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006668922543810179
bound_frac: 0.008543108463143404
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006668922543810179
bound_frac = 0.008543108463143404
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450400.3508744123
Testing bound_push=0.0006409377388849989, bound_frac=0.0011661065033282013
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006409377388849989
bound_frac: 0.0011661065033282013
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006409377388849989
bound_frac = 0.0011661065033282013
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3389289.440560752
Testing bound_push=4.521439601972696e-05, bound_frac=0.006199043269576559
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 4.521439601972696e-05
bound_frac: 0.006199043269576559
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.521439601972696e-05
bound_frac = 0.006199043269576559
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3430935.114777673
Testing bound_push=0.0007108309248929324, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007108309248929324
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007108309248929324
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3444826.7395546143
Testing bound_push=0.0003865102609412183, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0003865102609412183
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003865102609412183
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3427503.7180600204
Testing bound_push=0.0006146390720151543, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006146390720151543
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006146390720151543
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3409362.961779244
Testing bound_push=0.0005969321588649085, bound_frac=0.0016093989193274498
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005969321588649085
bound_frac: 0.0016093989193274498
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005969321588649085
bound_frac = 0.0016093989193274498
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3419851.3354142616
Testing bound_push=1e-06, bound_frac=0.008274468022078601
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.008274468022078601
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.008274468022078601
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445607.584262466
Testing bound_push=0.0007355370309420033, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007355370309420033
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007355370309420033
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3465359.5859089145
Testing bound_push=0.00035318032376029166, bound_frac=0.008183114728399042
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00035318032376029166
bound_frac: 0.008183114728399042
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00035318032376029166
bound_frac = 0.008183114728399042
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446069.8077801964
Testing bound_push=0.0005973352742414332, bound_frac=0.00728741632245472
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005973352742414332
bound_frac: 0.00728741632245472
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005973352742414332
bound_frac = 0.00728741632245472
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404799.342023722
Testing bound_push=0.0005962487707897739, bound_frac=0.0016816731325967873
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005962487707897739
bound_frac: 0.0016816731325967873
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005962487707897739
bound_frac = 0.0016816731325967873
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3410213.6118211453
Testing bound_push=1e-06, bound_frac=0.0058806526067703875
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.0058806526067703875
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0058806526067703875
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445607.584262466
Testing bound_push=0.0006926189322466325, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006926189322466325
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006926189322466325
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3388121.8093593596
Testing bound_push=0.0004872377534737544, bound_frac=0.004215409460908738
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004872377534737544
bound_frac: 0.004215409460908738
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004872377534737544
bound_frac = 0.004215409460908738
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445770.549380949
Testing bound_push=0.0006088412402263964, bound_frac=0.003061955556983161
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006088412402263964
bound_frac: 0.003061955556983161
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006088412402263964
bound_frac = 0.003061955556983161
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445522.7962226383
Testing bound_push=0.0006329918385250002, bound_frac=0.001312409415414878
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006329918385250002
bound_frac: 0.001312409415414878
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006329918385250002
bound_frac = 0.001312409415414878
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425690.1026797676
Testing bound_push=2.120530995999172e-05, bound_frac=0.0019477045517905878
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 2.120530995999172e-05
bound_frac: 0.0019477045517905878
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.120530995999172e-05
bound_frac = 0.0019477045517905878
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425176.512406525
Testing bound_push=0.0006711598828989472, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006711598828989472
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006711598828989472
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3443047.342633198
Testing bound_push=0.0005954488168313195, bound_frac=0.0044550790026353865
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005954488168313195
bound_frac: 0.0044550790026353865
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005954488168313195
bound_frac = 0.0044550790026353865
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3430067.170903574
Testing bound_push=0.0006444739046040839, bound_frac=0.00023391755493675165
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006444739046040839
bound_frac: 0.00023391755493675165
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006444739046040839
bound_frac = 0.00023391755493675165
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425176.5124071026
Testing bound_push=0.0006551710394630931, bound_frac=0.000676409762235874
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006551710394630931
bound_frac: 0.000676409762235874
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006551710394630931
bound_frac = 0.000676409762235874
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445614.4787046975
Testing bound_push=0.00024295522503448868, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00024295522503448868
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00024295522503448868
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404387.0705761495
Testing bound_push=0.000662864864806452, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000662864864806452
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000662864864806452
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3437762.1280752844
Testing bound_push=0.0006502017505825711, bound_frac=0.003266380030975775
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006502017505825711
bound_frac: 0.003266380030975775
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006502017505825711
bound_frac = 0.003266380030975775
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450768.7435105355
Testing bound_push=0.0006661268639130616, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006661268639130616
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006661268639130616
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3406544.791735689
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006926189322466325
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006926189322466325
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3388121.8093593596
Solve_result:  solved
Solve_time: 1.248224999999998 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(60, 71)  True    33,88,122     35,53,189     0.28s       solved        No        39.37s
(25, 69)  True    33,88,122     34,63,068     0.2s        solved        No        39.6s
(35, 68)  True    33,88,122     57,33,760     1.02s       limit         No        40.64s
(2, 66)   True    33,88,122     33,93,219     0.12s       solved        No        40.79s
(69, 60)  True    33,88,122     33,84,394     0.08s       solved        Yes       40.89s

visited_nodes: [71, 69, 68, 66, 60]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 56)  True    33,84,394     41,93,334     0.94s       limit         No        41.86s
(20, 32)  True    33,84,394     34,10,653     0.07s       solved        No        41.96s
(4, 33)   True    33,84,394     55,57,061     0.99s       solved        No        42.97s
(32, 16)  True    33,84,394     33,97,054     0.07s       solved        No        43.07s
(15, 35)  True    33,84,394     38,75,976     0.93s       limit         No        44.03s
(54, 39)  True    33,84,394     33,90,336     0.05s       solved        No        44.13s
(39, 25)  True    33,84,394     34,34,214     0.13s       solved        No        44.31s
(16, 12)  True    33,84,394     34,07,992     0.08s       solved        No        44.44s
(44, 52)  True    33,84,394     34,23,505     0.18s       solved        No        44.66s
(40, 11)  True    33,84,394     33,83,521     0.05s       solved        Yes       44.76s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 52, 11]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [40, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(11, 40)  True    33,83,521     33,83,799     0.05s       solved        No        44.88s
(47, 45)  True    33,83,521     33,79,703     0.24s       solved        Yes       45.17s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 40, 45]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(52, 14)  True    33,79,703     33,86,418     0.08s       solved        No        45.28s
(53, 6)   True    33,79,703     49,96,624     0.9s        limit         No        46.22s
(48, 36)  True    33,79,703     33,74,619     0.12s       solved        Yes       46.39s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 40, 45, 14, 6, 36]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [13, 53, 44, 48, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(10, 13)  True    33,74,619     33,81,493     0.07s       solved        No        46.52s
(8, 53)   True    33,74,619     34,59,264     0.28s       solved        No        46.83s
(45, 44)  True    33,74,619     34,59,472     0.25s       solved        No        47.1s
(13, 48)  True    33,74,619     33,79,457     0.07s       solved        No        47.23s
(13, 47)  True    33,74,619     33,68,819     0.11s       solved        Yes       47.38s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 40, 45, 14, 6, 36, 13, 53, 44, 48, 47]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [19, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(14, 19)  True    33,68,819     33,68,553     0.07s       solved        Yes       47.52s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 40, 45, 14, 6, 36, 13, 53, 44, 48, 47, 19]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(37, 57)  True    33,68,553     37,92,326     0.8s        limit         No        48.39s

**********************************Final best results******************************************

Water Network: d12
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,31       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,51       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,18       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,39       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_4,64       |              3e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,68       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,27       |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,40       |             -1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,50       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,36       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,53       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,49       |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_10,28      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,45      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_11,6       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,16      |              3e-08   |          -2e-07      |
+-----------------+----------------------+----------------------+
| con2_12,32      |              3e-08   |          -9e-08      |
+-----------------+----------------------+----------------------+
| con2_13,10      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_14,52      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,66      |             -1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,11      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_16,20      |              2e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_16,56      |             -3e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_17,7       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_18,41      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_19,14      |             -1e-08   |          -1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_20,21      |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_21,9       |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_22,49      |              1e-08   |          -0.00358782 |
+-----------------+----------------------+----------------------+
| con2_23,56      |              8e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_23,62      |             -3e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_24,34      |              1e-08   |          -0.00856217 |
+-----------------+----------------------+----------------------+
| con2_25,39      |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_25,55      |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_26,44      |             -0       |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_27,19      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_28,50      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_29,17      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_30,13      |             -2e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_30,36      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_31,28      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_32,16      |             -3e-08   |          -2.7e-07    |
+-----------------+----------------------+----------------------+
| con2_32,20      |              5e-08   |          -2.3e-07    |
+-----------------+----------------------+----------------------+
| con2_32,21      |              4e-08   |          -9e-08      |
+-----------------+----------------------+----------------------+
| con2_33,4       |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_33,64      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_34,26      |             -0       |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_35,11      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,15      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_36,48      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_37,57      |             -2e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_38,30      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_38,31      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_39,54      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_39,69      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_40,11      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_40,35      |             -2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_41,66      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,40      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_43,72      |              7e-08   |          -3e-07      |
+-----------------+----------------------+----------------------+
| con2_44,19      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,45      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_45,47      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_46,61      |              4e-08   |          -0.00039041 |
+-----------------+----------------------+----------------------+
| con2_47,10      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_47,13      |              1e-08   |          -7.4e-07    |
+-----------------+----------------------+----------------------+
| con2_48,13      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,34      |             -1e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_49,28      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_50,45      |             -1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_50,52      |             -2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_51,14      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_52,44      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_53,6       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_53,19      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_54,3       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,54      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_56,12      |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_57,33      |             -3e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_58,43      |              3e-08   |          -3.8e-07    |
+-----------------+----------------------+----------------------+
| con2_59,5       |              2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,55      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,71      |             -1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_61,23      |              6e-08   |          -3.57e-06   |
+-----------------+----------------------+----------------------+
| con2_62,37      |             -0       |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_62,57      |             -3e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_63,62      |              2e-08   |          -2.202e-05  |
+-----------------+----------------------+----------------------+
| con2_64,38      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,73      |              1.8e-07 |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_66,2       |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_66,52      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_67,58      |              1.1e-07 |          -7.7e-07    |
+-----------------+----------------------+----------------------+
| con2_68,35      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,42      |              4e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_69,25      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_69,60      |             -1.4e-07 |          -6.418e-05  |
+-----------------+----------------------+----------------------+
| con2_70,69      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,5       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,59      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_72,33      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_73,29      |              0       |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.5472351108206003e-06
Total relative constraint violation: 0.012634397944588323
*******************************************************************************

Final best objective: 3368552.719301591
Number of nlp problem solved: 58
Total number of iteration: 7
Solver_time: 47.02 seconds
Heuristic elapsed time: 48.40 seconds

