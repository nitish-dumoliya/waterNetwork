Water Network: d12 

Testing bound_push=0.0007029792182656403, bound_frac=0.007999011971268998
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007029792182656403
bound_frac: 0.007999011971268998
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007029792182656403
bound_frac = 0.007999011971268998
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445107.3338811058
Testing bound_push=0.0004603242389130631, bound_frac=0.0062052848555903374
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004603242389130631
bound_frac: 0.0062052848555903374
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004603242389130631
bound_frac = 0.0062052848555903374
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404521.063762822
Testing bound_push=0.00017157440698085526, bound_frac=0.009628105844016365
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00017157440698085526
bound_frac: 0.009628105844016365
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017157440698085526
bound_frac = 0.009628105844016365
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3437514.408670221
Testing bound_push=0.0006652127494412709, bound_frac=0.004727841347921683
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006652127494412709
bound_frac: 0.004727841347921683
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006652127494412709
bound_frac = 0.004727841347921683
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3410494.722653398
Testing bound_push=0.0005778445389930446, bound_frac=0.00757940257947543
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005778445389930446
bound_frac: 0.00757940257947543
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005778445389930446
bound_frac = 0.00757940257947543
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3407798.181511215
Testing bound_push=0.0009100088685565202, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0009100088685565202
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009100088685565202
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404799.3355721664
Testing bound_push=0.0008197275586929414, bound_frac=0.009355851064276433
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008197275586929414
bound_frac: 0.009355851064276433
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008197275586929414
bound_frac = 0.009355851064276433
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3417552.9263241347
Testing bound_push=1e-06, bound_frac=0.0038328962109012528
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.0038328962109012528
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0038328962109012528
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429813.364042193
Testing bound_push=0.0009006213898256135, bound_frac=0.0030059606343236503
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0009006213898256135
bound_frac: 0.0030059606343236503
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009006213898256135
bound_frac = 0.0030059606343236503
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3458735.152751866
Testing bound_push=0.0007496576596712108, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007496576596712108
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007496576596712108
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3437695.7256846586
Testing bound_push=0.0008940005590830494, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008940005590830494
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008940005590830494
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3441379.2116026417
Testing bound_push=0.0007853181364756424, bound_frac=0.009058277796629353
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007853181364756424
bound_frac: 0.009058277796629353
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007853181364756424
bound_frac = 0.009058277796629353
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3437339.4333530203
Testing bound_push=1e-06, bound_frac=0.0018710679334564889
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.0018710679334564889
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0018710679334564889
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429813.364042193
Testing bound_push=0.0009247960283234112, bound_frac=0.003111318535222811
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0009247960283234112
bound_frac: 0.003111318535222811
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009247960283234112
bound_frac = 0.003111318535222811
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445821.4925583717
Testing bound_push=0.000764008214224879, bound_frac=0.009191250317180117
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000764008214224879
bound_frac: 0.009191250317180117
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000764008214224879
bound_frac = 0.009191250317180117
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450790.6157221934
Testing bound_push=0.0007282464916433787, bound_frac=0.009805917594489857
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007282464916433787
bound_frac: 0.009805917594489857
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007282464916433787
bound_frac = 0.009805917594489857
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3462162.8676170274
Testing bound_push=0.0006757362784691467, bound_frac=0.007573925075510341
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006757362784691467
bound_frac: 0.007573925075510341
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006757362784691467
bound_frac = 0.007573925075510341
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3461740.4504700997
Testing bound_push=1e-06, bound_frac=0.0017912645491033195
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.0017912645491033195
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0017912645491033195
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429813.364042193
Testing bound_push=0.0007834030621087804, bound_frac=0.004202404639602647
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007834030621087804
bound_frac: 0.004202404639602647
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007834030621087804
bound_frac = 0.004202404639602647
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425176.5059370627
Testing bound_push=0.0006228924943368754, bound_frac=0.00818675813901611
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006228924943368754
bound_frac: 0.00818675813901611
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006228924943368754
bound_frac = 0.00818675813901611
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446131.878915792
Testing bound_push=0.0006140393857241887, bound_frac=0.00935968032539317
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006140393857241887
bound_frac: 0.00935968032539317
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006140393857241887
bound_frac = 0.00935968032539317
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446131.8789157914
Testing bound_push=0.0005561698131761334, bound_frac=0.006502193809835496
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005561698131761334
bound_frac: 0.006502193809835496
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005561698131761334
bound_frac = 0.006502193809835496
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404799.335571772
Testing bound_push=0.00012612810997382438, bound_frac=0.002456725710365591
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00012612810997382438
bound_frac: 0.002456725710365591
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00012612810997382438
bound_frac = 0.002456725710365591
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3462084.523681922
Testing bound_push=0.0005907627732272109, bound_frac=0.005855715330257333
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005907627732272109
bound_frac: 0.005855715330257333
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005907627732272109
bound_frac = 0.005855715330257333
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3410101.065366438
Testing bound_push=0.0004781357390358143, bound_frac=0.006984468040088079
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004781357390358143
bound_frac: 0.006984468040088079
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004781357390358143
bound_frac = 0.006984468040088079
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3409962.4753657286
Testing bound_push=0.0006627536844396222, bound_frac=0.009151399822524942
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006627536844396222
bound_frac: 0.009151399822524942
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006627536844396222
bound_frac = 0.009151399822524942
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3428221.086253596
Testing bound_push=0.00041691616361188427, bound_frac=0.005811896302698051
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00041691616361188427
bound_frac: 0.005811896302698051
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00041691616361188427
bound_frac = 0.005811896302698051
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3388937.4667763086
Testing bound_push=0.00022447084316255515, bound_frac=0.004130517165797193
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00022447084316255515
bound_frac: 0.004130517165797193
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00022447084316255515
bound_frac = 0.004130517165797193
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3462164.045679553
Testing bound_push=0.00048304034214865865, bound_frac=0.006662530669223627
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00048304034214865865
bound_frac: 0.006662530669223627
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00048304034214865865
bound_frac = 0.006662530669223627
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450768.737014723
Testing bound_push=0.0004125026592782872, bound_frac=0.006618524452430015
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004125026592782872
bound_frac: 0.006618524452430015
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004125026592782872
bound_frac = 0.006618524452430015
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445736.126181203
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00041691616361188427
bound_frac: 0.005811896302698051
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00041691616361188427
bound_frac = 0.005811896302698051
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3388937.4667763086
Solve_result:  solved
Solve_time: 2.068747000000002 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(60, 71)  True    33,88,937     35,64,439     0.53s       solved        No        93.72s
(25, 69)  True    33,88,937     34,63,068     0.35s       solved        No        94.16s
(35, 68)  True    33,88,937     54,22,674     1.96s       limit         No        96.23s
(2, 66)   True    33,88,937     33,78,721     0.66s       solved        Yes       96.94s

visited_nodes: [71, 69, 68, 66]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 2, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(69, 60)  True    33,78,721     33,68,871     0.25s       solved        Yes       97.26s

visited_nodes: [71, 69, 68, 66, 60]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 56)  True    33,68,871     39,23,388     2.09s       limit         No        99.42s
(20, 32)  True    33,68,871     33,95,207     0.16s       solved        No        99.64s
(4, 33)   True    33,68,871     55,41,244     1.55s       solved        No        101.29s
(32, 16)  True    33,68,871     33,81,381     0.15s       solved        No        101.52s
(15, 35)  True    33,68,871     39,40,588     2.04s       limit         No        103.61s
(54, 39)  True    33,68,871     33,71,534     0.12s       solved        No        103.82s
(39, 25)  True    33,68,871     34,30,902     0.22s       solved        No        104.11s
(16, 12)  True    33,68,871     33,92,388     0.15s       solved        No        104.31s
(11, 40)  True    33,68,871     33,69,429     0.12s       solved        No        104.51s
(44, 52)  True    33,68,871     33,98,173     0.48s       solved        No        105.05s
(47, 45)  True    33,68,871     33,80,303     0.16s       solved        No        105.33s
(14, 19)  True    33,68,871     33,68,068     0.15s       solved        Yes       105.56s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(52, 14)  True    33,68,068     33,88,631     0.16s       solved        No        105.82s
(53, 6)   True    33,68,068     35,15,971     0.69s       solved        No        106.57s
(48, 36)  True    33,68,068     33,76,209     0.11s       solved        No        106.76s
(10, 13)  True    33,68,068     33,79,116     0.18s       solved        No        107.0s
(8, 53)   True    33,68,068     34,59,264     0.44s       solved        No        107.57s
(45, 44)  True    33,68,068     34,53,016     1.42s       solved        No        109.1s
(13, 47)  True    33,68,068     33,68,421     0.1s        solved        No        109.33s
(37, 57)  True    33,68,068     35,43,574     1.09s       solved        No        110.52s

**********************************Final best results******************************************

Water Network: d12
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,31       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,51       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,18       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,39       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_4,64       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_5,68       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_6,27       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_6,40       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_7,50       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_8,36       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,53       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_9,49       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,28      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,45      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_11,6       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,16      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,32      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_13,10      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_14,52      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_14,66      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_15,11      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_16,20      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_16,56      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_17,7       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_18,41      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_19,14      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,9       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_22,49      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,56      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,62      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_24,34      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_25,39      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_25,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,44      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,19      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,50      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_29,17      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,13      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_30,36      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_31,28      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_32,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_32,20      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,21      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,4       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,64      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_34,26      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_35,11      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_35,15      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_36,48      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,57      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_38,30      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_38,31      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,54      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,69      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,11      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,35      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_41,66      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,40      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_43,72      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_44,19      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_45,47      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_46,61      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_47,10      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_47,13      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,13      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,34      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_49,28      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,45      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,52      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,14      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_52,44      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,6       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,19      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_54,3       |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_55,54      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,12      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_57,33      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_58,43      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_59,5       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_60,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_60,71      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_61,23      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_62,37      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_62,57      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_63,62      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_64,38      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_65,73      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_66,2       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_66,52      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_67,58      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_68,35      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_68,42      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_69,60      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_70,69      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_71,5       |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_71,59      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_72,33      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_73,29      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.870557639277535e-14
Total relative constraint violation: 1.7456757655049836e-10
*******************************************************************************

Final best objective: 3368068.1578072147
Number of nlp problem solved: 56
Total number of iteration: 4
Solver_time: 107.27 seconds
Heuristic elapsed time: 110.53 seconds

