Water Network: d10_HG_SP_5_5 

Testing bound_push=0.0002362402789525957, bound_frac=0.0009951144739342842
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002362402789525957
bound_frac: 0.0009951144739342842
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002362402789525957
bound_frac = 0.0009951144739342842
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9707434.885610487
Testing bound_push=0.00024327955826973721, bound_frac=0.009773251009695857
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00024327955826973721
bound_frac: 0.009773251009695857
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00024327955826973721
bound_frac = 0.009773251009695857
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9444898.541411484
Testing bound_push=0.0003850992655762411, bound_frac=0.00639097551900173
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003850992655762411
bound_frac: 0.00639097551900173
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003850992655762411
bound_frac = 0.00639097551900173
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9674580.636998784
Testing bound_push=0.00010393216576153292, bound_frac=0.009791259205710397
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00010393216576153292
bound_frac: 0.009791259205710397
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010393216576153292
bound_frac = 0.009791259205710397
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9648347.94159465
Testing bound_push=0.0005539420880957844, bound_frac=0.003982002936488391
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005539420880957844
bound_frac: 0.003982002936488391
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005539420880957844
bound_frac = 0.003982002936488391
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9635053.316914557
Testing bound_push=2.710724873128246e-05, bound_frac=0.00340457212655857
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 2.710724873128246e-05
bound_frac: 0.00340457212655857
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.710724873128246e-05
bound_frac = 0.00340457212655857
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9424720.46074593
Testing bound_push=0.0004677436033069812, bound_frac=0.01
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004677436033069812
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004677436033069812
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9649497.317273697
Testing bound_push=0.00011225194177942117, bound_frac=0.0005510210475471776
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00011225194177942117
bound_frac: 0.0005510210475471776
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00011225194177942117
bound_frac = 0.0005510210475471776
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9481173.611715648
Testing bound_push=0.00012813292030977371, bound_frac=0.005249458587095367
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00012813292030977371
bound_frac: 0.005249458587095367
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00012813292030977371
bound_frac = 0.005249458587095367
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9686015.300035425
Testing bound_push=0.00025940306297023196, bound_frac=0.007482791758263694
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00025940306297023196
bound_frac: 0.007482791758263694
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00025940306297023196
bound_frac = 0.007482791758263694
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9698152.114082588
Testing bound_push=1e-06, bound_frac=0.004609300952870713
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.004609300952870713
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.004609300952870713
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=0.00051242389093191, bound_frac=0.009550321312996716
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00051242389093191
bound_frac: 0.009550321312996716
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00051242389093191
bound_frac = 0.009550321312996716
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9622881.469367625
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=9.857590222426502e-05, bound_frac=0.004245181650371957
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 9.857590222426502e-05
bound_frac: 0.004245181650371957
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.857590222426502e-05
bound_frac = 0.004245181650371957
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731591.682761421
Testing bound_push=0.00011769068358907699, bound_frac=0.007801514238147282
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00011769068358907699
bound_frac: 0.007801514238147282
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00011769068358907699
bound_frac = 0.007801514238147282
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9659710.992967764
Testing bound_push=1e-06, bound_frac=0.004916308984543803
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.004916308984543803
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.004916308984543803
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=0.00037994979818785563, bound_frac=0.008623635895741007
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00037994979818785563
bound_frac: 0.008623635895741007
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00037994979818785563
bound_frac = 0.008623635895741007
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9695725.66434291
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=8.054782697479448e-05, bound_frac=0.004591259144021223
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 8.054782697479448e-05
bound_frac: 0.004591259144021223
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 8.054782697479448e-05
bound_frac = 0.004591259144021223
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9647612.735865623
Testing bound_push=0.0001924341239325932, bound_frac=0.006103350463208938
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0001924341239325932
bound_frac: 0.006103350463208938
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001924341239325932
bound_frac = 0.006103350463208938
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9697330.113328803
Testing bound_push=1e-06, bound_frac=0.004409459410669645
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.004409459410669645
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.004409459410669645
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=7.871561400276891e-05, bound_frac=0.006434416545404409
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 7.871561400276891e-05
bound_frac: 0.006434416545404409
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 7.871561400276891e-05
bound_frac = 0.006434416545404409
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9687868.174610266
Testing bound_push=1e-06, bound_frac=0.000649260917760313
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.000649260917760313
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.000649260917760313
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=6.74925886360462e-05, bound_frac=0.004624757647608932
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 6.74925886360462e-05
bound_frac: 0.004624757647608932
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.74925886360462e-05
bound_frac = 0.004624757647608932
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9476493.884189354
Testing bound_push=0.00032304062718116727, bound_frac=0.003835382721701917
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00032304062718116727
bound_frac: 0.003835382721701917
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00032304062718116727
bound_frac = 0.003835382721701917
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9618184.455127044
Testing bound_push=8.403056998031651e-06, bound_frac=0.0035227742621194266
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 8.403056998031651e-06
bound_frac: 0.0035227742621194266
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 8.403056998031651e-06
bound_frac = 0.0035227742621194266
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9511250.119750725
Testing bound_push=1e-06, bound_frac=0.004995037003831471
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.004995037003831471
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.004995037003831471
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=1e-06, bound_frac=0.0008160320009736436
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.0008160320009736436
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0008160320009736436
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.693059534
Testing bound_push=4.612776127594222e-05, bound_frac=0.004377253835426593
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.612776127594222e-05
bound_frac: 0.004377253835426593
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.612776127594222e-05
bound_frac = 0.004377253835426593
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9417223.158338942
Testing bound_push=0.0003754133229624769, bound_frac=0.002828632706783697
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003754133229624769
bound_frac: 0.002828632706783697
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003754133229624769
bound_frac = 0.002828632706783697
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9615715.636120912
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.612776127594222e-05
bound_frac: 0.004377253835426593
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.612776127594222e-05
bound_frac = 0.004377253835426593
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9417223.158338942
Solve_result:  solved
Solve_time: 4.101579000000001 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    94,17,223     1,36,79,765   1.56s       limit         No        108.66s
(9, 149)  True    94,17,223     1,42,06,577   1.6s        limit         No        110.33s
(15, 150) True    94,17,223     1,05,79,276   1.54s       limit         No        111.95s
(154, 151)True    94,17,223     98,72,275     0.36s       solved        No        112.38s
(109, 153)True    94,17,223     1,12,58,455   1.09s       solved        No        113.52s
(29, 155) True    94,17,223     1,02,87,396   0.48s       solved        No        114.07s
(67, 135) True    94,17,223     1,59,97,699   1.56s       limit         No        115.71s
(83, 141) True    94,17,223     1,40,88,261   1.57s       limit         No        117.36s
(130, 124)True    94,17,223     94,02,775     0.19s       solved        Yes       117.62s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 129) True    94,02,775     95,90,097     1.23s       solved        No        118.98s
(82, 130) True    94,02,775     94,04,299     0.11s       solved        No        119.14s
(81, 9)   True    94,02,775     1,08,82,834   1.58s       limit         No        120.8s
(35, 146) True    94,02,775     96,67,394     0.51s       solved        No        121.39s
(107, 27) True    94,02,775     1,24,05,079   1.53s       limit         No        122.99s
(115, 3)  True    94,02,775     1,01,97,707   0.38s       failure       No        123.45s
(133, 103)True    94,02,775     1,08,48,861   1.35s       solved        No        124.87s
(132, 57) True    94,02,775     95,94,870     0.35s       solved        No        125.28s
(117, 116)True    94,02,775     1,02,49,499   0.97s       solved        No        126.32s
(32, 75)  True    94,02,775     94,01,748     0.09s       solved        Yes       126.49s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(72, 25)  True    94,01,748     1,31,30,940   1.57s       limit         No        128.18s
(134, 44) True    94,01,748     93,90,130     0.09s       solved        Yes       128.33s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(113, 20) True    93,90,130     95,01,092     0.13s       solved        No        128.58s
(137, 100)True    93,90,130     1,39,78,847   1.58s       limit         No        130.21s
(108, 59) True    93,90,130     1,30,23,277   1.57s       limit         No        131.83s
(6, 121)  True    93,90,130     96,58,103     0.34s       solved        No        132.27s
(28, 102) True    93,90,130     1,01,96,838   1.41s       limit         No        133.76s
(21, 58)  True    93,90,130     93,90,924     0.12s       solved        No        133.96s
(95, 16)  True    93,90,130     1,17,88,823   1.58s       limit         No        135.61s
(116, 63) True    93,90,130     1,01,56,144   1.55s       limit         No        137.24s
(85, 5)   True    93,90,130     93,88,400     0.18s       solved        Yes       137.5s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [70, 32, 90, 26, 64, 65, 79, 85, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 70)  True    93,88,400     97,41,741     1.17s       solved        No        138.8s
(142, 32) True    93,88,400     93,89,813     0.08s       solved        No        138.93s
(110, 90) True    93,88,400     96,89,931     0.3s        solved        No        139.31s
(22, 26)  True    93,88,400     1,42,60,678   1.55s       limit         No        140.91s
(99, 64)  True    93,88,400     97,65,219     0.78s       infeasible    No        141.76s
(45, 65)  True    93,88,400     93,93,781     0.09s       solved        No        141.93s
(112, 79) True    93,88,400     95,89,125     1.6s        limit         No        143.61s
(5, 85)   True    93,88,400     93,88,088     0.08s       solved        Yes       143.77s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 70, 32, 90, 26, 64, 65, 79, 85]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(24, 22)  True    93,88,088     98,34,149     0.92s       infeasible    No        144.81s
(86, 2)   True    93,88,088     94,03,283     0.15s       solved        No        145.04s
(34, 52)  True    93,88,088     94,02,989     0.42s       solved        No        145.53s
(94, 42)  True    93,88,088     1,50,75,476   1.52s       limit         No        147.11s
(23, 112) True    93,88,088     94,84,170     0.13s       solved        No        147.32s
(84, 4)   True    93,88,088     94,00,250     0.09s       solved        No        147.48s
(147, 123)True    93,88,088     1,09,83,983   1.49s       limit         No        149.05s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,40       |              0       |          -1.088e-05  |
+-----------------+----------------------+----------------------+
| con2_2,86       |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_3,106      |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_3,115      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_4,1        |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,85       |              0       |          -1e-06      |
+-----------------+----------------------+----------------------+
| con2_6,55       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,1        |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,11       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,81       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,141      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,151      |             -2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,54      |              0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_11,26      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,100     |             -1e-08   |          -2.4e-07    |
+-----------------+----------------------+----------------------+
| con2_13,49      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,112     |             -0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_15,132     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,150     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_16,95      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_17,10      |              1e-08   |          -0.0099201  |
+-----------------+----------------------+----------------------+
| con2_18,20      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_18,111     |             -1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_19,78      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_20,7       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_20,113     |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_21,5       |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_22,54      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_23,56      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_24,10      |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_24,22      |             -0       |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_25,91      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,22      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,54      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,107     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_28,20      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_29,75      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_30,98      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_31,53      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_32,142     |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_33,122     |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_34,5       |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_34,52      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,93      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,100     |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_37,105     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_38,16      |             -2e-08   |          -0.00036403 |
+-----------------+----------------------+----------------------+
| con2_39,16      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_39,121     |             -2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_40,34      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_41,79      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,94      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_43,79      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,49      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,134     |             -1e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_45,7       |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_46,109     |              4e-08   |          -0.00030682 |
+-----------------+----------------------+----------------------+
| con2_47,63      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,44      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_49,140     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,123     |              5e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_50,129     |             -4e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_51,37      |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_52,2       |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_52,14      |             -0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_53,85      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_54,42      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,102     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_56,86      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_57,127     |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_57,132     |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,5       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,21      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_58,146     |              1e-08   |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_59,25      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_59,108     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,103     |              3e-08   |          -0.00056264 |
+-----------------+----------------------+----------------------+
| con2_61,106     |              2e-08   |          -0.00208159 |
+-----------------+----------------------+----------------------+
| con2_62,128     |              7e-08   |          -1.9e-07    |
+-----------------+----------------------+----------------------+
| con2_63,76      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,42      |             -0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,136     |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_65,40      |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,45      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_66,102     |             -1e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_67,80      |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_68,12      |              3e-08   |          -0.00095879 |
+-----------------+----------------------+----------------------+
| con2_69,31      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_70,38      |             -3e-08   |          -7.644e-05  |
+-----------------+----------------------+----------------------+
| con2_70,58      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,155     |             -2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_72,25      |             -1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_72,91      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_73,24      |              0       |          -0.00016171 |
+-----------------+----------------------+----------------------+
| con2_74,134     |              2e-08   |          -0.00124681 |
+-----------------+----------------------+----------------------+
| con2_75,13      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,32      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_76,36      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_77,37      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_78,18      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_79,23      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_79,112     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,8       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,12      |             -2e-08   |          -2.1e-07    |
+-----------------+----------------------+----------------------+
| con2_81,47      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_82,27      |             -6e-08   |          -2.3e-07    |
+-----------------+----------------------+----------------------+
| con2_82,51      |              6e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_82,89      |             -3e-08   |          -2.2e-07    |
+-----------------+----------------------+----------------------+
| con2_83,145     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_84,4       |             -0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_85,40      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_86,4       |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_87,98      |              1e-08   |          -0.004113   |
+-----------------+----------------------+----------------------+
| con2_88,149     |             -4e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_88,154     |              1.2e-07 |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_89,27      |             -3e-08   |          -2.5e-07    |
+-----------------+----------------------+----------------------+
| con2_90,41      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_90,110     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_91,118     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_92,108     |              2e-08   |          -0.0012849  |
+-----------------+----------------------+----------------------+
| con2_93,43      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_94,136     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_95,69      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_96,114     |              2e-08   |          -0.00144371 |
+-----------------+----------------------+----------------------+
| con2_97,55      |              1e-08   |          -0.00555707 |
+-----------------+----------------------+----------------------+
| con2_98,33      |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_99,64      |             -1e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_99,136     |              2e-08   |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_100,137    |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_101,11     |              1e-08   |          -0.00442836 |
+-----------------+----------------------+----------------------+
| con2_102,28     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,19     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,133    |              2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_104,99     |              1e-08   |          -0.0133789  |
+-----------------+----------------------+----------------------+
| con2_105,70     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_106,48     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_107,77     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_108,25     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_109,103    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_110,146    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,66     |             -1e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_111,102    |             -1e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_112,23     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_112,52     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_113,30     |              1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_114,73     |              1e-08   |          -0.00025928 |
+-----------------+----------------------+----------------------+
| con2_115,106    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,63     |             -0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,76     |              2e-08   |          -3e-07      |
+-----------------+----------------------+----------------------+
| con2_116,117    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_117,59     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_119,86     |              1e-08   |          -0.0127001  |
+-----------------+----------------------+----------------------+
| con2_120,143    |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_121,6      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,7      |              0       |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_122,84     |             -1e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_123,125    |              6e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_123,147    |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_124,51     |              7e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_124,130    |              1e-08   |          -1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_125,109    |              4e-08   |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_126,3      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_127,120    |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_128,3      |              2e-08   |          -1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_129,71     |             -2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,123    |              7e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_130,82     |              1e-08   |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_131,125    |              3e-08   |          -4.34e-06   |
+-----------------+----------------------+----------------------+
| con2_132,117    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_133,19     |              1e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_134,32     |             -1e-08   |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_135,67     |              8e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_135,154    |              4e-08   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_136,41     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_137,8      |              1e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_138,62     |              1e-07   |          -2.7e-07    |
+-----------------+----------------------+----------------------+
| con2_139,152    |              6e-08   |          -1.06e-06   |
+-----------------+----------------------+----------------------+
| con2_140,121    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,83     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,145    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_142,13     |              0       |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_143,124    |              2e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_144,126    |              1e-07   |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_144,148    |             -9e-08   |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_145,80     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_146,21     |              1e-08   |          -5.1e-07    |
+-----------------+----------------------+----------------------+
| con2_146,35     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_147,19     |              4e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_148,27     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_148,126    |              2e-08   |          -0          |
+-----------------+----------------------+----------------------+
| con2_149,9      |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_150,57     |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_151,154    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_152,149    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_153,109    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_153,135    |              3e-08   |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_154,141    |              0       |          -0          |
+-----------------+----------------------+----------------------+
| con2_155,29     |              0       |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 2.355300965374313e-06
Total relative constraint violation: 0.05886584222618731
*******************************************************************************

Final best objective: 9388087.667733613
Number of nlp problem solved: 76
Total number of iteration: 6
Solver_time: 144.92 seconds
Heuristic elapsed time: 149.08 seconds

