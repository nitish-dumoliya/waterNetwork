Water Network: d10_HG_SP_5_5 

Testing bound_push=0.0007690152703536015, bound_frac=0.00234937762892606
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007690152703536015
bound_frac: 0.00234937762892606
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007690152703536015
bound_frac = 0.00234937762892606
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9645246.772446785
Testing bound_push=0.0009724066477143711, bound_frac=0.006327018323801672
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009724066477143711
bound_frac: 0.006327018323801672
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009724066477143711
bound_frac = 0.006327018323801672
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9648250.380737368
Testing bound_push=0.000558067063322879, bound_frac=0.007559965433393537
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000558067063322879
bound_frac: 0.007559965433393537
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000558067063322879
bound_frac = 0.007559965433393537
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9558914.819821464
Testing bound_push=0.0009298753136720877, bound_frac=0.0026004061851193625
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009298753136720877
bound_frac: 0.0026004061851193625
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009298753136720877
bound_frac = 0.0026004061851193625
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9645246.772446832
Testing bound_push=0.0004991364340306985, bound_frac=0.002033788434109114
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004991364340306985
bound_frac: 0.002033788434109114
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004991364340306985
bound_frac = 0.002033788434109114
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9727967.44477936
Testing bound_push=0.0007782987548047419, bound_frac=0.006132265894815696
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007782987548047419
bound_frac: 0.006132265894815696
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007782987548047419
bound_frac = 0.006132265894815696
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9687345.164623199
Testing bound_push=0.0008218207364392697, bound_frac=0.0021381312808070674
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0008218207364392697
bound_frac: 0.0021381312808070674
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008218207364392697
bound_frac = 0.0021381312808070674
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9647892.416837875
Testing bound_push=0.00046610953502352503, bound_frac=0.008173883395710907
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00046610953502352503
bound_frac: 0.008173883395710907
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046610953502352503
bound_frac = 0.008173883395710907
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9681798.23085441
Testing bound_push=0.0006258119212216777, bound_frac=0.00030608894734480713
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006258119212216777
bound_frac: 0.00030608894734480713
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006258119212216777
bound_frac = 0.00030608894734480713
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9696070.888606535
Testing bound_push=0.00018437256655086701, bound_frac=0.004385660342949322
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00018437256655086701
bound_frac: 0.004385660342949322
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018437256655086701
bound_frac = 0.004385660342949322
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9427435.692065967
Testing bound_push=0.0006429821329864434, bound_frac=0.00773159692010973
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006429821329864434
bound_frac: 0.00773159692010973
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006429821329864434
bound_frac = 0.00773159692010973
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9612384.033017773
Testing bound_push=0.000621517943149944, bound_frac=0.000408387426835243
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000621517943149944
bound_frac: 0.000408387426835243
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000621517943149944
bound_frac = 0.000408387426835243
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731043.73123408
Testing bound_push=0.0003388324181005797, bound_frac=0.0067586269191779015
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003388324181005797
bound_frac: 0.0067586269191779015
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003388324181005797
bound_frac = 0.0067586269191779015
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9622041.44041907
Testing bound_push=0.0005434962231977603, bound_frac=0.0010633512572202416
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005434962231977603
bound_frac: 0.0010633512572202416
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005434962231977603
bound_frac = 0.0010633512572202416
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9696070.888606045
Testing bound_push=2.6990632810951275e-05, bound_frac=0.005561596297369426
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 2.6990632810951275e-05
bound_frac: 0.005561596297369426
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.6990632810951275e-05
bound_frac = 0.005561596297369426
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9685669.365925435
Testing bound_push=0.00045178547564902306, bound_frac=0.007760483541537747
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00045178547564902306
bound_frac: 0.007760483541537747
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00045178547564902306
bound_frac = 0.007760483541537747
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9623529.250883754
Testing bound_push=0.0003856838067315289, bound_frac=0.0009877362851678372
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003856838067315289
bound_frac: 0.0009877362851678372
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003856838067315289
bound_frac = 0.0009877362851678372
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9617139.443535928
Testing bound_push=0.00026060141410544076, bound_frac=0.0060907048098448584
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00026060141410544076
bound_frac: 0.0060907048098448584
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026060141410544076
bound_frac = 0.0060907048098448584
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9792241.35168221
Testing bound_push=0.0005376623800514713, bound_frac=0.0027843105942253806
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005376623800514713
bound_frac: 0.0027843105942253806
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005376623800514713
bound_frac = 0.0027843105942253806
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9698959.579383427
Testing bound_push=1e-06, bound_frac=0.005061113453000244
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.005061113453000244
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.005061113453000244
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710384.96237922
Testing bound_push=0.0003510550329066746, bound_frac=0.0072341944128591264
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003510550329066746
bound_frac: 0.0072341944128591264
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003510550329066746
bound_frac = 0.0072341944128591264
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9650706.189058812
Testing bound_push=0.0002038274468250202, bound_frac=0.0026431670760807798
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002038274468250202
bound_frac: 0.0026431670760807798
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002038274468250202
bound_frac = 0.0026431670760807798
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9521136.688861558
Testing bound_push=0.00027918387933994766, bound_frac=0.0060563960904597485
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00027918387933994766
bound_frac: 0.0060563960904597485
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027918387933994766
bound_frac = 0.0060563960904597485
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9730782.247591702
Testing bound_push=0.0006962495459021125, bound_frac=0.0037526942567698597
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006962495459021125
bound_frac: 0.0037526942567698597
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006962495459021125
bound_frac = 0.0037526942567698597
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9742906.475021463
Testing bound_push=4.533982839874917e-05, bound_frac=0.004574937039059664
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.533982839874917e-05
bound_frac: 0.004574937039059664
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.533982839874917e-05
bound_frac = 0.004574937039059664
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9484790.112896012
Testing bound_push=0.00027507027220957544, bound_frac=0.006108692861067779
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00027507027220957544
bound_frac: 0.006108692861067779
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027507027220957544
bound_frac = 0.006108692861067779
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731591.6818688
Testing bound_push=0.00010839936606320379, bound_frac=0.0038298585714524663
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00010839936606320379
bound_frac: 0.0038298585714524663
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010839936606320379
bound_frac = 0.0038298585714524663
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710458.304192226
Testing bound_push=0.00039659153314676167, bound_frac=0.005895559582007999
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00039659153314676167
bound_frac: 0.005895559582007999
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039659153314676167
bound_frac = 0.005895559582007999
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9685891.007389689
Testing bound_push=0.0008002892486480754, bound_frac=0.0038573841713775703
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0008002892486480754
bound_frac: 0.0038573841713775703
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008002892486480754
bound_frac = 0.0038573841713775703
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9730896.313687338
Testing bound_push=0.0001678497998527863, bound_frac=0.004269376731303593
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0001678497998527863
bound_frac: 0.004269376731303593
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001678497998527863
bound_frac = 0.004269376731303593
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9692233.857234366
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00018437256655086701
bound_frac: 0.004385660342949322
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018437256655086701
bound_frac = 0.004385660342949322
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9427435.692065967
Solve_result:  solved
Solve_time: 8.835446999999988 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    94,27,436     1,25,12,955   3.7s        limit         No        225.16s
(9, 149)  True    94,27,436     1,34,43,336   3.71s       limit         No        228.97s
(15, 150) True    94,27,436     1,22,88,462   2.33s       infeasible    No        231.45s
(154, 151)True    94,27,436     98,68,858     0.63s       solved        No        232.18s
(109, 153)True    94,27,436     1,13,70,616   3.38s       limit         No        235.66s
(29, 155) True    94,27,436     1,02,74,319   2.11s       solved        No        237.87s
(67, 135) True    94,27,436     1,58,12,906   3.77s       limit         No        241.8s
(83, 141) True    94,27,436     1,41,99,370   3.87s       limit         No        245.78s
(130, 124)True    94,27,436     94,11,044     0.36s       solved        Yes       246.23s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 129) True    94,11,044     95,67,355     1.57s       solved        No        247.99s
(82, 130) True    94,11,044     94,08,637     0.3s        solved        Yes       248.42s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(81, 9)   True    94,08,637     1,09,12,748   3.69s       limit         No        252.25s
(35, 146) True    94,08,637     96,60,191     1.37s       solved        No        253.72s
(107, 27) True    94,08,637     1,22,19,463   3.42s       limit         No        257.25s
(130, 82) True    94,08,637     93,95,152     0.25s       solved        Yes       257.6s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 3)  True    93,95,152     96,05,065     2.61s       solved        No        260.61s
(133, 103)True    93,95,152     1,08,85,664   3.84s       limit         No        264.68s
(132, 57) True    93,95,152     96,00,824     0.77s       solved        No        265.55s
(117, 116)True    93,95,152     1,03,64,643   3.63s       limit         No        269.29s
(32, 75)  True    93,95,152     93,99,275     0.35s       solved        No        269.82s
(72, 25)  True    93,95,152     1,24,57,930   3.88s       limit         No        273.86s
(113, 20) True    93,95,152     95,09,986     0.37s       solved        No        274.33s
(137, 100)True    93,95,152     1,36,44,338   3.83s       limit         No        278.27s
(108, 59) True    93,95,152     1,15,73,447   3.66s       limit         No        282.07s
(6, 121)  True    93,95,152     96,65,765     2.87s       solved        No        285.04s
(28, 102) True    93,95,152     1,07,44,799   3.41s       limit         No        288.53s
(21, 58)  True    93,95,152     93,96,047     0.2s        solved        No        288.83s
(95, 16)  True    93,95,152     1,15,73,584   3.8s        limit         No        292.73s
(116, 63) True    93,95,152     1,12,97,427   3.68s       limit         No        296.52s
(85, 5)   True    93,95,152     93,97,171     0.54s       solved        No        297.19s
(142, 32) True    93,95,152     93,65,006     1.15s       solved        Yes       298.5s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [142, 70, 90, 26, 21, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(13, 142) True    93,65,006     93,65,178     0.21s       solved        No        298.87s
(58, 70)  True    93,65,006     98,03,867     1.98s       solved        No        300.97s
(110, 90) True    93,65,006     96,76,524     1.0s        solved        No        302.07s
(22, 26)  True    93,65,006     1,43,47,960   3.6s        limit         No        305.78s
(5, 21)   True    93,65,006     93,82,419     0.24s       solved        No        306.12s
(99, 64)  True    93,65,006     96,53,195     0.74s       infeasible    No        307.0s
(65, 40)  True    93,65,006     97,68,298     3.7s        limit         No        310.8s
(45, 65)  True    93,65,006     93,66,033     0.53s       solved        No        311.43s
(112, 79) True    93,65,006     95,73,912     2.51s       solved        No        314.04s
(24, 22)  True    93,65,006     96,62,815     3.68s       limit         No        317.83s
(34, 52)  True    93,65,006     93,94,219     1.09s       solved        No        319.01s
(94, 42)  True    93,65,006     1,49,37,087   3.68s       limit         No        322.8s
(23, 112) True    93,65,006     94,69,406     0.29s       solved        No        323.21s
(84, 4)   True    93,65,006     93,73,857     0.2s        solved        No        323.51s
(147, 123)True    93,65,006     1,09,74,546   3.74s       limit         No        327.38s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_2,40       |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_2,86       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_3,106      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_3,115      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_4,1        |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_5,85       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_6,55       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_7,1        |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_8,11       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_9,81       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_9,141      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_9,151      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_10,54      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_11,26      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_12,100     |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_13,49      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_14,112     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_15,132     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_15,150     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_16,95      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_17,10      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_18,20      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_18,111     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_19,78      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_20,7       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_20,113     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_21,5       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_22,54      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_23,56      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_24,10      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_24,22      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_25,91      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_26,22      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_26,54      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_27,107     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_28,20      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_29,75      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_30,98      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_31,53      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_32,142     |                   -0 |            -0.000668 |
+-----------------+----------------------+----------------------+
| con2_33,122     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_34,5       |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_34,52      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_35,93      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_36,100     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_37,105     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_38,16      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_39,16      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_39,121     |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_40,34      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_41,79      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_42,94      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_43,79      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_44,49      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_44,134     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_45,7       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_46,109     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_47,63      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_48,44      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_49,140     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_50,123     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_50,129     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_51,37      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_52,2       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_52,14      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_53,85      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_54,42      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_55,102     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_56,86      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_57,127     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_57,132     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_58,5       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_58,21      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_58,146     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_59,25      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_59,108     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_60,103     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_61,106     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_62,128     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_63,76      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_64,42      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_64,136     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_65,40      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_65,45      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_66,102     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_67,80      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_68,12      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_69,31      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_70,38      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_70,58      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_71,155     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_72,25      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_72,91      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_73,24      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_74,134     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_75,13      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_75,32      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_76,36      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_77,37      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_78,18      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_79,23      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_79,112     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_80,8       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_80,12      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_81,47      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_82,27      |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_82,51      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_82,89      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_83,145     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_84,4       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_85,40      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_86,4       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_87,98      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_88,149     |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_88,154     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_89,27      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_90,41      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_90,110     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_91,118     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_92,108     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_93,43      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_94,136     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_95,69      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_96,114     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_97,55      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_98,33      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_99,64      |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_99,136     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_100,137    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_101,11     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_102,28     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_103,19     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_103,133    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_104,99     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_105,70     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_106,48     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_107,77     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_108,25     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_109,103    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_110,146    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_111,66     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_111,102    |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_112,23     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_112,52     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_113,30     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_114,73     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_115,106    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_116,63     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_116,76     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_116,117    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_117,59     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_118,90     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_119,86     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_120,143    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_121,6      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_122,7      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_122,84     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_123,125    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_123,147    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_124,51     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_124,130    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_125,109    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_126,3      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_127,120    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_128,3      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_129,71     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_129,123    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_130,82     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_131,125    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_132,117    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_133,19     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_134,32     |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_135,67     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_135,154    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_136,41     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_137,8      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_138,62     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_139,152    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_140,121    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_141,83     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_141,145    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_142,13     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_143,124    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_144,126    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_144,148    |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_145,80     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_146,21     |                   -0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_146,35     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_147,19     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_148,27     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_148,126    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_149,9      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_150,57     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_151,154    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_152,149    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_153,109    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_153,135    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_154,141    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_155,29     |                    0 |            -0        |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1223172332762099e-13
Total relative constraint violation: 0.0006680025846570657
*******************************************************************************

Final best objective: 9365005.731843341
Number of nlp problem solved: 77
Total number of iteration: 5
Solver_time: 320.30 seconds
Heuristic elapsed time: 327.41 seconds

