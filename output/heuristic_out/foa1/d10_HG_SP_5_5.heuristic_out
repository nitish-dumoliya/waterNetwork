Water Network: d10_HG_SP_5_5 

Testing bound_push=0.000519826175882805, bound_frac=0.0006355143196470139
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000519826175882805
bound_frac: 0.0006355143196470139
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000519826175882805
bound_frac = 0.0006355143196470139
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9730092.69976355
Testing bound_push=5.360505865598492e-05, bound_frac=0.003093885161857156
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 5.360505865598492e-05
bound_frac: 0.003093885161857156
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.360505865598492e-05
bound_frac = 0.003093885161857156
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9471952.076332008
Testing bound_push=0.0009259576968483875, bound_frac=0.0005714478337904517
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009259576968483875
bound_frac: 0.0005714478337904517
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009259576968483875
bound_frac = 0.0005714478337904517
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711596.333234012
Testing bound_push=0.00020502206092567595, bound_frac=0.00062891164354723
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00020502206092567595
bound_frac: 0.00062891164354723
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020502206092567595
bound_frac = 0.00062891164354723
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9707550.02842983
Testing bound_push=0.0008698907612777873, bound_frac=0.001963514541795311
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0008698907612777873
bound_frac: 0.001963514541795311
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008698907612777873
bound_frac = 0.001963514541795311
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710454.649200939
Testing bound_push=0.0006793694264138301, bound_frac=0.0057047255321627695
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006793694264138301
bound_frac: 0.0057047255321627695
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006793694264138301
bound_frac = 0.0057047255321627695
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9646506.497602431
Testing bound_push=0.0005094339705257618, bound_frac=0.00675904257402519
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005094339705257618
bound_frac: 0.00675904257402519
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005094339705257618
bound_frac = 0.00675904257402519
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9661771.975775432
Testing bound_push=0.0009899775448720923, bound_frac=0.0031286203887976815
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009899775448720923
bound_frac: 0.0031286203887976815
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009899775448720923
bound_frac = 0.0031286203887976815
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9642887.407891538
Testing bound_push=0.00017246803207134672, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00017246803207134672
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017246803207134672
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9502017.31650448
Testing bound_push=0.0005769578276651823, bound_frac=0.0013987855222087737
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005769578276651823
bound_frac: 0.0013987855222087737
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005769578276651823
bound_frac = 0.0013987855222087737
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9729687.30913187
Testing bound_push=0.000662941432574621, bound_frac=0.007405009433166276
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000662941432574621
bound_frac: 0.007405009433166276
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000662941432574621
bound_frac = 0.007405009433166276
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9626797.81123769
Testing bound_push=0.0004961291876861074, bound_frac=0.00683418023619586
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004961291876861074
bound_frac: 0.00683418023619586
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004961291876861074
bound_frac = 0.00683418023619586
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9404342.337658152
Testing bound_push=0.0008914960120871766, bound_frac=0.004685383255078008
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0008914960120871766
bound_frac: 0.004685383255078008
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008914960120871766
bound_frac = 0.004685383255078008
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9659479.553665493
Testing bound_push=0.0002839400819172319, bound_frac=0.0013437199060902115
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002839400819172319
bound_frac: 0.0013437199060902115
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002839400819172319
bound_frac = 0.0013437199060902115
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9650534.639678715
Testing bound_push=0.0005345925320151328, bound_frac=0.0021479041053862613
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005345925320151328
bound_frac: 0.0021479041053862613
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005345925320151328
bound_frac = 0.0021479041053862613
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9707513.38015879
Testing bound_push=0.0006395570295875249, bound_frac=0.008245490495928418
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006395570295875249
bound_frac: 0.008245490495928418
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006395570295875249
bound_frac = 0.008245490495928418
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9648078.131999604
Testing bound_push=0.0004894767962662803, bound_frac=0.006871749067281195
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004894767962662803
bound_frac: 0.006871749067281195
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004894767962662803
bound_frac = 0.006871749067281195
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9678173.504937604
Testing bound_push=0.0007290383863771794, bound_frac=0.006289706836049284
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007290383863771794
bound_frac: 0.006289706836049284
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007290383863771794
bound_frac = 0.006289706836049284
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9640271.360697627
Testing bound_push=0.0004142590507305965, bound_frac=0.002553581734146493
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004142590507305965
bound_frac: 0.002553581734146493
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004142590507305965
bound_frac = 0.002553581734146493
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731591.682320248
Testing bound_push=0.0005101254905872288, bound_frac=0.002981330049452618
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005101254905872288
bound_frac: 0.002981330049452618
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005101254905872288
bound_frac = 0.002981330049452618
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9655570.700879535
Testing bound_push=0.000604322679963918, bound_frac=0.008074792346582642
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000604322679963918
bound_frac: 0.008074792346582642
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000604322679963918
bound_frac = 0.008074792346582642
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9697032.67546641
Testing bound_push=0.0004917050392288589, bound_frac=0.006866798909200619
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004917050392288589
bound_frac: 0.006866798909200619
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004917050392288589
bound_frac = 0.006866798909200619
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9727967.445233619
Testing bound_push=0.0006264898332293588, bound_frac=0.007148757831165303
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006264898332293588
bound_frac: 0.007148757831165303
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006264898332293588
bound_frac = 0.007148757831165303
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9624076.82124784
Testing bound_push=0.0004363896724828851, bound_frac=0.003731960152690589
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004363896724828851
bound_frac: 0.003731960152690589
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004363896724828851
bound_frac = 0.003731960152690589
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9658834.067723505
Testing bound_push=0.0004955024922840138, bound_frac=0.004498412824276049
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004955024922840138
bound_frac: 0.004498412824276049
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004955024922840138
bound_frac = 0.004498412824276049
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9627758.778552633
Testing bound_push=0.00059737225904964, bound_frac=0.007244862945384926
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00059737225904964
bound_frac: 0.007244862945384926
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00059737225904964
bound_frac = 0.007244862945384926
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9709097.944337025
Testing bound_push=0.0004937254652107234, bound_frac=0.006845566864487375
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004937254652107234
bound_frac: 0.006845566864487375
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004937254652107234
bound_frac = 0.006845566864487375
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9870271.767981429
Testing bound_push=0.0005280966226704983, bound_frac=0.007534345122225065
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005280966226704983
bound_frac: 0.007534345122225065
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005280966226704983
bound_frac = 0.007534345122225065
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9646371.826100614
Testing bound_push=0.0003651730101746019, bound_frac=0.0029870956081957402
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003651730101746019
bound_frac: 0.0029870956081957402
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003651730101746019
bound_frac = 0.0029870956081957402
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9627438.898327537
Testing bound_push=0.0004884510128013576, bound_frac=0.005460371871958948
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004884510128013576
bound_frac: 0.005460371871958948
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004884510128013576
bound_frac = 0.005460371871958948
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9644111.509610806
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004961291876861074
bound_frac: 0.00683418023619586
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004961291876861074
bound_frac = 0.00683418023619586
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9404342.337658152
Solve_result:  solved
Solve_time: 4.685771000000003 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    94,04,342     1,56,63,808   1.57s       limit         No        99.03s
(9, 149)  True    94,04,342     1,43,64,570   1.53s       limit         No        100.61s
(15, 150) True    94,04,342     1,21,33,281   1.6s        limit         No        102.28s
(154, 151)True    94,04,342     98,66,673     0.2s        solved        No        102.56s
(109, 153)True    94,04,342     1,12,61,603   1.57s       limit         No        104.21s
(29, 155) True    94,04,342     1,02,84,798   0.42s       solved        No        104.71s
(67, 135) True    94,04,342     1,54,04,862   1.54s       limit         No        106.33s
(83, 141) True    94,04,342     1,46,53,566   1.59s       limit         No        107.99s
(130, 124)True    94,04,342     94,04,221     0.22s       solved        Yes       108.29s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 129) True    94,04,221     95,77,966     0.67s       solved        No        109.08s
(82, 130) True    94,04,221     94,05,348     0.11s       solved        No        109.26s
(81, 9)   True    94,04,221     1,14,10,927   1.54s       limit         No        110.88s
(35, 146) True    94,04,221     96,09,201     0.66s       solved        No        111.62s
(107, 27) True    94,04,221     1,26,23,542   1.51s       limit         No        113.21s
(115, 3)  True    94,04,221     96,05,441     0.89s       solved        No        114.18s
(133, 103)True    94,04,221     1,11,37,562   1.54s       limit         No        115.8s
(132, 57) True    94,04,221     95,84,529     0.43s       solved        No        116.29s
(117, 116)True    94,04,221     1,01,01,376   1.42s       solved        No        117.78s
(32, 75)  True    94,04,221     93,94,348     0.16s       solved        Yes       118.02s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(72, 25)  True    93,94,348     1,33,80,310   1.53s       limit         No        119.68s
(134, 44) True    93,94,348     93,82,733     0.13s       solved        Yes       119.89s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(113, 20) True    93,82,733     94,81,636     0.27s       solved        No        120.28s
(137, 100)True    93,82,733     1,39,37,530   1.53s       limit         No        121.89s
(108, 59) True    93,82,733     1,19,93,421   1.7s        limit         No        123.66s
(6, 121)  True    93,82,733     96,55,594     0.6s        solved        No        124.34s
(28, 102) True    93,82,733     1,06,31,682   1.6s        limit         No        126.02s
(21, 58)  True    93,82,733     93,83,747     0.09s       solved        No        126.19s
(95, 16)  True    93,82,733     1,15,67,815   1.48s       limit         No        127.72s
(116, 63) True    93,82,733     1,33,00,436   1.56s       limit         No        129.35s
(85, 5)   True    93,82,733     93,90,164     0.36s       solved        No        129.76s
(142, 32) True    93,82,733     93,82,047     0.72s       solved        Yes       130.56s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [142, 70, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(13, 142) True    93,82,047     93,84,231     0.36s       solved        No        131.01s
(58, 70)  True    93,82,047     1,04,35,209   1.57s       limit         No        132.65s
(110, 90) True    93,82,047     96,72,114     0.79s       solved        No        133.49s
(22, 26)  True    93,82,047     1,42,72,862   1.51s       limit         No        135.08s
(5, 21)   True    93,82,047     93,98,145     0.29s       solved        No        135.45s
(99, 64)  True    93,82,047     1,19,93,029   1.37s       limit         No        136.89s
(45, 65)  True    93,82,047     93,72,864     0.25s       solved        Yes       137.19s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 142, 70, 90, 26, 21, 64, 65]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [79, 22, 2, 52, 42, 112, 45, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(112, 79) True    93,72,864     95,42,745     0.96s       solved        No        138.28s
(24, 22)  True    93,72,864     96,31,311     0.28s       infeasible    No        138.64s
(86, 2)   True    93,72,864     93,76,398     0.1s        solved        No        138.81s
(34, 52)  True    93,72,864     94,11,373     0.67s       solved        No        139.56s
(94, 42)  True    93,72,864     1,42,55,310   1.47s       limit         No        141.1s
(23, 112) True    93,72,864     94,68,663     0.13s       solved        No        141.31s
(7, 45)   True    93,72,864     93,84,444     0.45s       solved        No        141.83s
(84, 4)   True    93,72,864     93,72,138     0.11s       solved        Yes       142.01s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 142, 70, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 45, 4]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [7, 40, 84, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(45, 7)   True    93,72,138     93,59,442     0.09s       solved        Yes       142.23s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 142, 70, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 45, 4, 7]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [40, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(65, 40)  True    93,59,442     1,12,74,905   1.52s       limit         No        143.87s
(147, 123)True    93,59,442     1,10,12,688   1.5s        limit         No        145.45s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,40       |               -0     |          -9.9e-07    |
+-----------------+----------------------+----------------------+
| con2_2,86       |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_3,106      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,115      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_4,1        |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,85       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,55       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,1        |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,11       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,81       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,141      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,151      |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,54      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_11,26      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,100     |               -1e-08 |          -1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_13,49      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,112     |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_15,132     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,150     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_16,95      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_17,10      |                0     |          -0.00521243 |
+-----------------+----------------------+----------------------+
| con2_18,20      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_18,111     |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_19,78      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_20,7       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_20,113     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_21,5       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_22,54      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_23,56      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_24,10      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_24,22      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_25,91      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,22      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,54      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,107     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_28,20      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_29,75      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_30,98      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_31,53      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_32,142     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_33,122     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_34,5       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_34,52      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,93      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,100     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_37,105     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_38,16      |                1e-08 |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_39,16      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_39,121     |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_40,34      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_41,79      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,94      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_43,79      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,49      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,134     |               -0     |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_45,7       |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_46,109     |                2e-08 |          -0.00015485 |
+-----------------+----------------------+----------------------+
| con2_47,63      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,44      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_49,140     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,123     |                3e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_50,129     |               -2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_51,37      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_52,2       |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_52,14      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_53,85      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_54,42      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,102     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_56,86      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_57,127     |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_57,132     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,5       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,21      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,146     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_59,25      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_59,108     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,103     |                2e-08 |          -0.00028488 |
+-----------------+----------------------+----------------------+
| con2_61,106     |                1e-08 |          -0.00106579 |
+-----------------+----------------------+----------------------+
| con2_62,128     |                3e-08 |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_63,76      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,42      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_64,136     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_65,40      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,45      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_66,102     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_67,80      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,12      |                1e-08 |          -0.00048727 |
+-----------------+----------------------+----------------------+
| con2_69,31      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_70,38      |                1e-08 |          -1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_70,58      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,155     |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_72,25      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_72,91      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_73,24      |                0     |          -8.141e-05  |
+-----------------+----------------------+----------------------+
| con2_74,134     |                1e-08 |          -0.00063506 |
+-----------------+----------------------+----------------------+
| con2_75,13      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,32      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,36      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_77,37      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_78,18      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_79,23      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_79,112     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,8       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,12      |               -1e-08 |          -1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_81,47      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_82,27      |               -3e-08 |          -8e-08      |
+-----------------+----------------------+----------------------+
| con2_82,51      |                3e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_82,89      |               -2e-08 |          -8e-08      |
+-----------------+----------------------+----------------------+
| con2_83,145     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_84,4       |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_85,40      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_86,4       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_87,98      |                1e-08 |          -0.00212523 |
+-----------------+----------------------+----------------------+
| con2_88,149     |               -2e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_88,154     |                6e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_89,27      |               -1e-08 |          -8e-08      |
+-----------------+----------------------+----------------------+
| con2_90,41      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_90,110     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_91,118     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_92,108     |                1e-08 |          -0.00065464 |
+-----------------+----------------------+----------------------+
| con2_93,43      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_94,136     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_95,69      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_96,114     |                1e-08 |          -0.00073636 |
+-----------------+----------------------+----------------------+
| con2_97,55      |                1e-08 |          -0.00288586 |
+-----------------+----------------------+----------------------+
| con2_98,33      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_99,64      |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_99,136     |                1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_100,137    |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_101,11     |                1e-08 |          -0.00229087 |
+-----------------+----------------------+----------------------+
| con2_102,28     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,19     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,133    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_104,99     |                0     |          -0.00708109 |
+-----------------+----------------------+----------------------+
| con2_105,70     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_106,48     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_107,77     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_108,25     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_109,103    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_110,146    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,66     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_111,102    |               -1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_112,23     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_112,52     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_113,30     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_114,73     |                0     |          -0.00013076 |
+-----------------+----------------------+----------------------+
| con2_115,106    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,63     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,76     |                1e-08 |          -1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_116,117    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_117,59     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_119,86     |                0     |          -0.00671291 |
+-----------------+----------------------+----------------------+
| con2_120,143    |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_121,6      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,7      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,84     |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_123,125    |                3e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_123,147    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_124,51     |                3e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_124,130    |                0     |          -2e-07      |
+-----------------+----------------------+----------------------+
| con2_125,109    |                2e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_126,3      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_127,120    |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_128,3      |                1e-08 |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_129,71     |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,123    |                4e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_130,82     |                1e-08 |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_131,125    |                1e-08 |          -2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_132,117    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_133,19     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_134,32     |               -0     |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_135,67     |                4e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_135,154    |                2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_136,41     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_137,8      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_138,62     |                5e-08 |          -1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_139,152    |                3e-08 |          -5.3e-07    |
+-----------------+----------------------+----------------------+
| con2_140,121    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,83     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,145    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_142,13     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_143,124    |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_144,126    |                2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_144,148    |               -5e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_145,80     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_146,21     |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_146,35     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_147,19     |                2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_148,27     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_148,126    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_149,9      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_150,57     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_151,154    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_152,149    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_153,109    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_153,135    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_154,141    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_155,29     |                0     |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1510326273033851e-06
Total relative constraint violation: 0.030545398941812393
*******************************************************************************

Final best objective: 9359441.939165713
Number of nlp problem solved: 80
Total number of iteration: 8
Solver_time: 140.86 seconds
Heuristic elapsed time: 145.47 seconds

