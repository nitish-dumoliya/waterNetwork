Water Network: d10_HG_SP_5_5 

Testing bound_push=0.0005917021838131735, bound_frac=0.0074806592099351315
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005917021838131735
bound_frac: 0.0074806592099351315
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005917021838131735
bound_frac = 0.0074806592099351315
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9698099.991333619
Testing bound_push=0.0008987911074609153, bound_frac=8.135897740937487e-05
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0008987911074609153
bound_frac: 8.135897740937487e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008987911074609153
bound_frac = 8.135897740937487e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9910812.050523827
Testing bound_push=0.00024964622924854074, bound_frac=0.0004695787229490831
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00024964622924854074
bound_frac: 0.0004695787229490831
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00024964622924854074
bound_frac = 0.0004695787229490831
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9482416.288507197
Testing bound_push=0.0004837297859811421, bound_frac=0.002378993567340273
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004837297859811421
bound_frac: 0.002378993567340273
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004837297859811421
bound_frac = 0.002378993567340273
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9655751.686281312
Testing bound_push=4.1048629118542415e-05, bound_frac=0.006143927632212176
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.1048629118542415e-05
bound_frac: 0.006143927632212176
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.1048629118542415e-05
bound_frac = 0.006143927632212176
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9421225.442032035
Testing bound_push=0.0005633985294564855, bound_frac=0.01
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005633985294564855
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005633985294564855
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710384.96654669
Testing bound_push=0.0007131659696269531, bound_frac=0.00015305774200003803
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007131659696269531
bound_frac: 0.00015305774200003803
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007131659696269531
bound_frac = 0.00015305774200003803
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9649497.312589865
Testing bound_push=0.00039479979877446913, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00039479979877446913
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039479979877446913
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9419226.919365076
Testing bound_push=0.00022736756286533558, bound_frac=0.0030290622577073705
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00022736756286533558
bound_frac: 0.0030290622577073705
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00022736756286533558
bound_frac = 0.0030290622577073705
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9494652.37482583
Testing bound_push=0.00041356783731591365, bound_frac=0.007273228819996265
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00041356783731591365
bound_frac: 0.007273228819996265
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00041356783731591365
bound_frac = 0.007273228819996265
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731663.632599048
Testing bound_push=0.0005151297653850947, bound_frac=0.01
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005151297653850947
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005151297653850947
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9608819.079239745
Testing bound_push=0.0005690245890834709, bound_frac=0.0001256016960067279
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005690245890834709
bound_frac: 0.0001256016960067279
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005690245890834709
bound_frac = 0.0001256016960067279
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9617139.439344151
Testing bound_push=0.00046737658353743336, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00046737658353743336
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046737658353743336
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9610608.127911458
Testing bound_push=0.000176588584236005, bound_frac=0.003289707042536927
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000176588584236005
bound_frac: 0.003289707042536927
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000176588584236005
bound_frac = 0.003289707042536927
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9707314.266539814
Testing bound_push=0.0005566070249839333, bound_frac=0.0076119950817573594
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005566070249839333
bound_frac: 0.0076119950817573594
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005566070249839333
bound_frac = 0.0076119950817573594
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9692233.857234389
Testing bound_push=0.0004313801009098186, bound_frac=0.009736328583176966
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004313801009098186
bound_frac: 0.009736328583176966
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004313801009098186
bound_frac = 0.009736328583176966
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9639614.382430226
Testing bound_push=0.0004939002924637785, bound_frac=8.312890074611923e-05
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004939002924637785
bound_frac: 8.312890074611923e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004939002924637785
bound_frac = 8.312890074611923e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9634991.071397686
Testing bound_push=0.0004473435324886235, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004473435324886235
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004473435324886235
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9414087.402131816
Testing bound_push=0.00017366007358856275, bound_frac=0.0026884164596865934
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00017366007358856275
bound_frac: 0.0026884164596865934
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017366007358856275
bound_frac = 0.0026884164596865934
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9424435.176723154
Testing bound_push=0.0004965399801214018, bound_frac=0.004980730408331524
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004965399801214018
bound_frac: 0.004980730408331524
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004965399801214018
bound_frac = 0.004980730408331524
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9661606.596546127
Testing bound_push=0.00041134700624495605, bound_frac=0.0076952598160452326
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00041134700624495605
bound_frac: 0.0076952598160452326
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00041134700624495605
bound_frac = 0.0076952598160452326
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9440374.957386889
Testing bound_push=0.0004651007535025994, bound_frac=5.621086908660122e-05
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004651007535025994
bound_frac: 5.621086908660122e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004651007535025994
bound_frac = 5.621086908660122e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9715444.11407403
Testing bound_push=0.0004373270069642186, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004373270069642186
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004373270069642186
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9418759.171386069
Testing bound_push=0.00023208854434149037, bound_frac=0.0021634398379944946
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00023208854434149037
bound_frac: 0.0021634398379944946
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023208854434149037
bound_frac = 0.0021634398379944946
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9435646.76126309
Testing bound_push=0.00043046417542971414, bound_frac=0.0018764514867031326
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00043046417542971414
bound_frac: 0.0018764514867031326
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043046417542971414
bound_frac = 0.0018764514867031326
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9730587.87423132
Testing bound_push=0.00041274912847853127, bound_frac=0.005896985302985284
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00041274912847853127
bound_frac: 0.005896985302985284
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00041274912847853127
bound_frac = 0.005896985302985284
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9521055.692615686
Testing bound_push=0.00046534557534112596, bound_frac=1.7812776283764224e-05
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00046534557534112596
bound_frac: 1.7812776283764224e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046534557534112596
bound_frac = 1.7812776283764224e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9639758.074062848
Testing bound_push=0.0004393325341444888, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004393325341444888
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004393325341444888
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9611536.273650555
Testing bound_push=0.00028624306811896375, bound_frac=0.0020366145112780286
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00028624306811896375
bound_frac: 0.0020366145112780286
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00028624306811896375
bound_frac = 0.0020366145112780286
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710384.962382695
Testing bound_push=0.0003800742877537796, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003800742877537796
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003800742877537796
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9628445.69422292
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004473435324886235
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004473435324886235
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9414087.402131816
Solve_result:  solved
Solve_time: 8.345929000000012 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    94,14,087     1,28,45,217   1.39s       infeasible    No        230.65s
(9, 149)  True    94,14,087     1,66,76,067   3.59s       limit         No        234.41s
(15, 150) True    94,14,087     1,19,65,272   3.45s       limit         No        237.99s
(154, 151)True    94,14,087     98,47,377     1.75s       solved        No        239.83s
(109, 153)True    94,14,087     1,14,39,995   3.72s       limit         No        243.65s
(29, 155) True    94,14,087     1,02,82,289   1.29s       solved        No        245.04s
(67, 135) True    94,14,087     1,55,76,039   3.54s       limit         No        248.68s
(83, 141) True    94,14,087     1,47,59,383   3.67s       limit         No        252.46s
(130, 124)True    94,14,087     94,01,549     0.45s       solved        Yes       253.04s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 129) True    94,01,549     95,87,961     1.43s       solved        No        254.66s
(82, 130) True    94,01,549     93,93,126     0.3s        solved        Yes       255.05s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [9, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 70, 102, 58, 63, 5, 32, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(81, 9)   True    93,93,126     1,08,84,349   3.54s       limit         No        258.75s
(107, 27) True    93,93,126     1,13,69,733   3.64s       limit         No        262.52s
(130, 82) True    93,93,126     93,81,465     0.24s       solved        Yes       262.89s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 27, 82]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 70, 102, 58, 63, 5, 32, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 3)  True    93,81,465     96,02,200     2.55s       solved        No        265.6s
(133, 103)True    93,81,465     1,28,25,456   3.58s       limit         No        269.4s
(132, 57) True    93,81,465     95,66,081     1.8s        solved        No        271.3s
(117, 116)True    93,81,465     1,02,49,216   2.14s       solved        No        273.53s
(32, 75)  True    93,81,465     93,77,542     1.77s       solved        Yes       275.43s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 27, 82, 3, 103, 57, 116, 75]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [146, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(35, 146) True    93,77,542     95,90,184     1.48s       solved        No        277.04s
(72, 25)  True    93,77,542     1,29,36,572   3.41s       limit         No        280.66s
(134, 44) True    93,77,542     93,62,313     0.22s       solved        Yes       280.98s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 27, 82, 3, 103, 57, 116, 75, 146, 25, 44]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(113, 20) True    93,62,313     94,62,898     0.36s       solved        No        281.55s
(137, 100)True    93,62,313     1,50,68,297   3.58s       limit         No        285.23s
(108, 59) True    93,62,313     1,10,68,424   3.44s       limit         No        288.83s
(6, 121)  True    93,62,313     96,65,039     1.15s       solved        No        290.08s
(28, 102) True    93,62,313     1,20,21,162   3.55s       limit         No        293.79s
(21, 58)  True    93,62,313     93,62,360     0.26s       solved        No        294.17s
(95, 16)  True    93,62,313     1,06,11,120   3.34s       limit         No        297.61s
(116, 63) True    93,62,313     1,01,46,081   3.68s       limit         No        301.54s
(34, 5)   True    93,62,313     93,81,652     0.94s       solved        No        302.58s
(142, 32) True    93,62,313     93,61,708     0.21s       solved        Yes       302.9s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 27, 82, 3, 103, 57, 116, 75, 146, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [142, 70, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(13, 142) True    93,61,708     93,60,909     0.2s        solved        Yes       303.41s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 27, 82, 3, 103, 57, 116, 75, 146, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 142]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [70, 13, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 70)  True    93,60,909     97,53,670     3.54s       solved        No        307.11s
(142, 13) True    93,60,909     93,57,499     0.17s       solved        Yes       307.39s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 27, 82, 3, 103, 57, 116, 75, 146, 25, 44, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 142, 70, 13]

**********************************************************************************************
Iteration : 9 

self.sorted_nodes: [90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(110, 90) True    93,57,499     96,74,538     0.82s       solved        No        308.37s
(22, 26)  True    93,57,499     1,38,33,903   3.63s       limit         No        312.1s
(5, 21)   True    93,57,499     93,80,603     0.24s       solved        No        312.46s
(99, 64)  True    93,57,499     97,53,983     0.7s        infeasible    No        313.27s
(45, 65)  True    93,57,499     93,63,855     0.2s        solved        No        313.57s
(112, 79) True    93,57,499     95,43,006     3.57s       solved        No        317.27s
(24, 22)  True    93,57,499     96,21,251     0.51s       infeasible    No        317.88s
(86, 2)   True    93,57,499     93,74,796     0.19s       solved        No        318.17s
(34, 52)  True    93,57,499     94,14,520     1.19s       solved        No        319.46s
(94, 42)  True    93,57,499     1,48,15,571   3.55s       limit         No        323.12s
(23, 112) True    93,57,499     94,74,707     0.37s       solved        No        323.59s
(84, 4)   True    93,57,499     93,69,930     0.18s       solved        No        323.87s
(147, 123)True    93,57,499     1,21,70,429   3.67s       limit         No        327.65s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_2,40       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_2,86       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_3,106      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_3,115      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_4,1        |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_5,85       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_6,55       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_7,1        |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_8,11       |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_9,81       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_9,141      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_9,151      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_10,54      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_11,26      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_12,100     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_13,49      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_14,112     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_15,132     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_15,150     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_16,95      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_17,10      |                   -0 |              6.5e-07 |
+-----------------+----------------------+----------------------+
| con2_18,20      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_18,111     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_19,78      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_20,7       |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_20,113     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_21,5       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_22,54      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_23,56      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_24,10      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_24,22      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_25,91      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_26,22      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_26,54      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_27,107     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_28,20      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_29,75      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_30,98      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_31,53      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_32,142     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_33,122     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_34,5       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_34,52      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_35,93      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_36,100     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_37,105     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_38,16      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_39,16      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_39,121     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_40,34      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_41,79      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_42,94      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_43,79      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_44,49      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_44,134     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_45,7       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_46,109     |                   -0 |              2e-08   |
+-----------------+----------------------+----------------------+
| con2_47,63      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_48,44      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_49,140     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_50,123     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_50,129     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_51,37      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_52,2       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_52,14      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_53,85      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_54,42      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_55,102     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_56,86      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_57,127     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_57,132     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_58,5       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_58,21      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_58,146     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_59,25      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_59,108     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_60,103     |                   -0 |              3e-08   |
+-----------------+----------------------+----------------------+
| con2_61,106     |                   -0 |              1.2e-07 |
+-----------------+----------------------+----------------------+
| con2_62,128     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_63,76      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_64,42      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_64,136     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_65,40      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_65,45      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_66,102     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_67,80      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_68,12      |                   -0 |              5e-08   |
+-----------------+----------------------+----------------------+
| con2_69,31      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_70,38      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_70,58      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_71,155     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_72,25      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_72,91      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_73,24      |                   -0 |              1e-08   |
+-----------------+----------------------+----------------------+
| con2_74,134     |                   -0 |              7e-08   |
+-----------------+----------------------+----------------------+
| con2_75,13      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_75,32      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_76,36      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_77,37      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_78,18      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_79,23      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_79,112     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_80,8       |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_80,12      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_81,47      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_82,27      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_82,51      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_82,89      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_83,145     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_84,4       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_85,40      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_86,4       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_87,98      |                   -0 |              2.4e-07 |
+-----------------+----------------------+----------------------+
| con2_88,149     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_88,154     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_89,27      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_90,41      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_90,110     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_91,118     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_92,108     |                   -0 |              7e-08   |
+-----------------+----------------------+----------------------+
| con2_93,43      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_94,136     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_95,69      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_96,114     |                   -0 |              8e-08   |
+-----------------+----------------------+----------------------+
| con2_97,55      |                   -0 |              3.4e-07 |
+-----------------+----------------------+----------------------+
| con2_98,33      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_99,64      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_99,136     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_100,137    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_101,11     |                   -0 |              2.6e-07 |
+-----------------+----------------------+----------------------+
| con2_102,28     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_103,19     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_103,133    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_104,99     |                   -0 |              9.1e-07 |
+-----------------+----------------------+----------------------+
| con2_105,70     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_106,48     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_107,77     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_108,25     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_109,103    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_110,146    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_111,66     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_111,102    |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_112,23     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_112,52     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_113,30     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_114,73     |                   -0 |              1e-08   |
+-----------------+----------------------+----------------------+
| con2_115,106    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_116,63     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_116,76     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_116,117    |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_117,59     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_118,90     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_119,86     |                   -0 |              8.5e-07 |
+-----------------+----------------------+----------------------+
| con2_120,143    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_121,6      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_122,7      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_122,84     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_123,125    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_123,147    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_124,51     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_124,130    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_125,109    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_126,3      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_127,120    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_128,3      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_129,71     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_129,123    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_130,82     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_131,125    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_132,117    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_133,19     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_134,32     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_135,67     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_135,154    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_136,41     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_137,8      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_138,62     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_139,152    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_140,121    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_141,83     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_141,145    |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_142,13     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_143,124    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_144,126    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_144,148    |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_145,80     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_146,21     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_146,35     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_147,19     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_148,27     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_148,126    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_149,9      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_150,57     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_151,154    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_152,149    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_153,109    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_153,135    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_154,141    |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_155,29     |                   -0 |              0       |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1770703930161146e-10
Total relative constraint violation: 3.7109530190762318e-06
*******************************************************************************

Final best objective: 9357498.981906323
Number of nlp problem solved: 79
Total number of iteration: 9
Solver_time: 319.88 seconds
Heuristic elapsed time: 327.67 seconds

