Water Network: d12 

Testing bound_push=0.00034601086288082745, bound_frac=0.004934833110950872
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00034601086288082745
bound_frac: 0.004934833110950872
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034601086288082745
bound_frac = 0.004934833110950872
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3389252.705888015
Testing bound_push=0.00012448035346482902, bound_frac=0.00896039760471392
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00012448035346482902
bound_frac: 0.00896039760471392
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00012448035346482902
bound_frac = 0.00896039760471392
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3388908.589650149
Testing bound_push=0.00012118895403458818, bound_frac=0.0011687566109239316
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00012118895403458818
bound_frac: 0.0011687566109239316
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00012118895403458818
bound_frac = 0.0011687566109239316
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446189.2663996634
Testing bound_push=0.0006249863221086329, bound_frac=0.005591943481495279
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006249863221086329
bound_frac: 0.005591943481495279
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006249863221086329
bound_frac = 0.005591943481495279
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425690.099442944
Testing bound_push=0.0005993304624102256, bound_frac=0.009376664360561539
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005993304624102256
bound_frac: 0.009376664360561539
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005993304624102256
bound_frac = 0.009376664360561539
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3383356.491380296
Testing bound_push=0.0004330157631982146, bound_frac=0.008473819843590316
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004330157631982146
bound_frac: 0.008473819843590316
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004330157631982146
bound_frac = 0.008473819843590316
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404387.0671652523
Testing bound_push=0.0005522782149330119, bound_frac=0.006069121928675017
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005522782149330119
bound_frac: 0.006069121928675017
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005522782149330119
bound_frac = 0.006069121928675017
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3441130.222220871
Testing bound_push=0.0007964131738927062, bound_frac=0.002350273089650904
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007964131738927062
bound_frac: 0.002350273089650904
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007964131738927062
bound_frac = 0.002350273089650904
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3424332.1655201246
Testing bound_push=0.001, bound_frac=0.005980940973400142
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.005980940973400142
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.005980940973400142
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450601.3253008574
Testing bound_push=0.0006732338541040611, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006732338541040611
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006732338541040611
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3410101.068590714
Testing bound_push=0.0005012910323136301, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005012910323136301
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005012910323136301
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3462162.8708450818
Testing bound_push=0.0005635103578105318, bound_frac=0.005714378833977185
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005635103578105318
bound_frac: 0.005714378833977185
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005635103578105318
bound_frac = 0.005714378833977185
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3401599.0665347916
Testing bound_push=0.001, bound_frac=0.005568964161835294
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.005568964161835294
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.005568964161835294
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450601.3253008574
Testing bound_push=0.0009112917495550898, bound_frac=0.007178943163283802
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0009112917495550898
bound_frac: 0.007178943163283802
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009112917495550898
bound_frac = 0.007178943163283802
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445428.1245633555
Testing bound_push=0.0006856757857795897, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006856757857795897
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006856757857795897
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425176.5091769444
Testing bound_push=0.000555683181655767, bound_frac=0.008892420575679807
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000555683181655767
bound_frac: 0.008892420575679807
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000555683181655767
bound_frac = 0.008892420575679807
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3424332.165520124
Testing bound_push=0.00046477273918795955, bound_frac=0.006572792057508739
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00046477273918795955
bound_frac: 0.006572792057508739
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046477273918795955
bound_frac = 0.006572792057508739
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404998.8313564654
Testing bound_push=0.001, bound_frac=0.006730333690699491
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.006730333690699491
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.006730333690699491
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450601.3253008574
Testing bound_push=0.0007252561692190472, bound_frac=0.008073907710776356
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007252561692190472
bound_frac: 0.008073907710776356
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007252561692190472
bound_frac = 0.008073907710776356
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450601.3253012155
Testing bound_push=0.0006266739670162716, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006266739670162716
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006266739670162716
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404387.067166502
Testing bound_push=0.0005943306745497661, bound_frac=0.007885092151343238
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005943306745497661
bound_frac: 0.007885092151343238
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005943306745497661
bound_frac = 0.007885092151343238
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450133.733823609
Testing bound_push=0.0004265499733901121, bound_frac=0.00856943702385251
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004265499733901121
bound_frac: 0.00856943702385251
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004265499733901121
bound_frac = 0.00856943702385251
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445522.7929824023
Testing bound_push=0.0008422182259933456, bound_frac=0.007169982638810189
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008422182259933456
bound_frac: 0.007169982638810189
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008422182259933456
bound_frac = 0.007169982638810189
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404669.5073553566
Testing bound_push=0.0005327663006484187, bound_frac=0.007601462897860368
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005327663006484187
bound_frac: 0.007601462897860368
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005327663006484187
bound_frac = 0.007601462897860368
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445710.6668010605
Testing bound_push=0.000584857340909317, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000584857340909317
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000584857340909317
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446132.1936650537
Testing bound_push=0.000571719197988747, bound_frac=0.007343441711111193
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000571719197988747
bound_frac: 0.007343441711111193
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000571719197988747
bound_frac = 0.007343441711111193
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3426995.1042022286
Testing bound_push=0.0004168378858053419, bound_frac=0.01
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0004168378858053419
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004168378858053419
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3408950.342515238
Testing bound_push=0.0007601006307709189, bound_frac=0.008375382922794852
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007601006307709189
bound_frac: 0.008375382922794852
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007601006307709189
bound_frac = 0.008375382922794852
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3451022.5406704927
Testing bound_push=0.00046854845915220926, bound_frac=0.006888633742604494
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00046854845915220926
bound_frac: 0.006888633742604494
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046854845915220926
bound_frac = 0.006888633742604494
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425629.5736198993
Testing bound_push=0.0005741791403087317, bound_frac=0.00969558488641501
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005741791403087317
bound_frac: 0.00969558488641501
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005741791403087317
bound_frac = 0.00969558488641501
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3437762.1246933993
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005993304624102256
bound_frac: 0.009376664360561539
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005993304624102256
bound_frac = 0.009376664360561539
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3383356.491380296
Solve_result:  solved
Solve_time: 1.324469999999998 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(60, 71)  True    33,83,356     35,57,024     0.24s       solved        No        34.03s
(25, 69)  True    33,83,356     34,62,760     0.17s       solved        No        34.25s
(35, 68)  True    33,83,356     46,61,440     0.99s       limit         No        35.27s
(2, 66)   True    33,83,356     33,88,222     0.14s       solved        No        35.44s
(69, 60)  True    33,83,356     33,83,106     0.04s       solved        Yes       35.53s

visited_nodes: [71, 69, 68, 66, 60]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [56, 32, 33, 16, 35, 39, 25, 12, 52, 11, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 56)  True    33,83,106     36,15,187     0.91s       solved        No        36.48s
(20, 32)  True    33,83,106     33,93,056     0.27s       solved        No        36.77s
(4, 33)   True    33,83,106     55,49,195     0.76s       solved        No        37.56s
(32, 16)  True    33,83,106     33,81,887     0.12s       solved        Yes       37.7s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [35, 39, 25, 12, 40, 52, 45, 14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(15, 35)  True    33,81,887     40,83,872     0.87s       limit         No        38.61s
(54, 39)  True    33,81,887     33,72,532     0.04s       solved        Yes       38.68s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [25, 12, 40, 52, 45, 14, 54, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(55, 25)  True    33,72,532     33,79,093     0.05s       solved        No        38.77s
(16, 12)  True    33,72,532     33,93,038     0.11s       solved        No        38.91s
(11, 40)  True    33,72,532     33,71,073     0.08s       solved        Yes       39.01s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [52, 11, 45, 14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(44, 52)  True    33,71,073     34,27,636     0.39s       solved        No        39.45s
(40, 11)  True    33,71,073     33,69,135     0.07s       solved        Yes       39.54s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 11]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [45, 14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(47, 45)  True    33,69,135     33,78,294     0.14s       solved        No        39.72s
(52, 14)  True    33,69,135     33,86,418     0.05s       solved        No        39.8s
(53, 6)   True    33,69,135     35,15,971     0.29s       solved        No        40.13s
(48, 36)  True    33,69,135     33,76,389     0.04s       solved        No        40.2s
(10, 13)  True    33,69,135     33,78,889     0.07s       solved        No        40.32s
(8, 53)   True    33,69,135     34,59,264     0.23s       solved        No        40.59s
(45, 44)  True    33,69,135     34,67,384     0.2s        solved        No        40.83s
(13, 47)  True    33,69,135     33,68,206     0.15s       solved        Yes       41.03s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 11, 45, 14, 6, 36, 13, 53, 44, 47]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(37, 57)  True    33,68,206     35,44,691     0.26s       solved        No        41.32s

**********************************Final best results******************************************

Water Network: d12
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,31       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,51       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,18       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,39       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_4,64       |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,68       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,27       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,40       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,50       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,36       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,53       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,49       |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,28      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,45      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_11,6       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,16      |                2e-08 |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_12,32      |                1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_13,10      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,52      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,66      |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,11      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_16,20      |                1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_16,56      |               -2e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_17,7       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_18,41      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_19,14      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_20,21      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_21,9       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_22,49      |                1e-08 |          -0.00185004 |
+-----------------+----------------------+----------------------+
| con2_23,56      |                4e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_23,62      |               -2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_24,34      |                0     |          -0.00448428 |
+-----------------+----------------------+----------------------+
| con2_25,39      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_25,55      |                2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_26,44      |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_27,19      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_28,50      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_29,17      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_30,13      |               -1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_30,36      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_31,28      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_32,16      |               -2e-08 |          -1.4e-07    |
+-----------------+----------------------+----------------------+
| con2_32,20      |                2e-08 |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_32,21      |                2e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_33,4       |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_33,64      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_34,26      |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_35,11      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,15      |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,48      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_37,57      |               -1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_38,30      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_38,31      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_39,54      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_39,69      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_40,11      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_40,35      |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_41,66      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,40      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_43,72      |                4e-08 |          -1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_44,19      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,45      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_45,47      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_46,61      |                2e-08 |          -0.00019726 |
+-----------------+----------------------+----------------------+
| con2_47,10      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_47,13      |               -0     |          -0.188822   |
+-----------------+----------------------+----------------------+
| con2_48,13      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,34      |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_49,28      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,45      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_50,52      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_51,14      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_52,44      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_53,6       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_53,19      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_54,3       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,54      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_56,12      |                1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_57,33      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_58,43      |                2e-08 |          -1.9e-07    |
+-----------------+----------------------+----------------------+
| con2_59,5       |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,55      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,71      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_61,23      |                3e-08 |          -1.79e-06   |
+-----------------+----------------------+----------------------+
| con2_62,37      |               -0     |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_62,57      |               -1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_63,62      |                1e-08 |          -1.104e-05  |
+-----------------+----------------------+----------------------+
| con2_64,38      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,73      |                9e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_66,2       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_66,52      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_67,58      |                5e-08 |          -3.8e-07    |
+-----------------+----------------------+----------------------+
| con2_68,35      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,42      |                2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_69,25      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_69,60      |               -6e-08 |          -4.47e-06   |
+-----------------+----------------------+----------------------+
| con2_70,69      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,5       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,59      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_72,33      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_73,29      |                0     |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 7.650452891585618e-07
Total relative constraint violation: 0.19537260761701236
*******************************************************************************

Final best objective: 3368206.2205568044
Number of nlp problem solved: 56
Total number of iteration: 7
Solver_time: 40.24 seconds
Heuristic elapsed time: 41.33 seconds

