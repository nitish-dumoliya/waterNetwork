Water Network: d12 

Testing bound_push=0.000765464464871714, bound_frac=0.00833956159468574
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000765464464871714
bound_frac: 0.00833956159468574
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000765464464871714
bound_frac = 0.00833956159468574
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425599.319403666
Testing bound_push=0.0005209782647957571, bound_frac=0.007740497858060421
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005209782647957571
bound_frac: 0.007740497858060421
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005209782647957571
bound_frac = 0.007740497858060421
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3409962.4753660555
Testing bound_push=0.0002517996819613113, bound_frac=0.0054383236768468755
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0002517996819613113
bound_frac: 0.0054383236768468755
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002517996819613113
bound_frac = 0.0054383236768468755
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425280.5521654612
Testing bound_push=0.0008099941342781603, bound_frac=0.0016945113040594713
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008099941342781603
bound_frac: 0.0016945113040594713
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008099941342781603
bound_frac = 0.0016945113040594713
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3409207.1030352884
Testing bound_push=0.0008326802122707299, bound_frac=0.002200080038437171
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008326802122707299
bound_frac: 0.002200080038437171
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008326802122707299
bound_frac = 0.002200080038437171
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3451022.5374207455
Testing bound_push=0.0007258975288559202, bound_frac=0.003375964546164418
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007258975288559202
bound_frac: 0.003375964546164418
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007258975288559202
bound_frac = 0.003375964546164418
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425599.319400954
Testing bound_push=0.00013441840613122053, bound_frac=0.0028833628231313265
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00013441840613122053
bound_frac: 0.0028833628231313265
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00013441840613122053
bound_frac = 0.0028833628231313265
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404799.3355750614
Testing bound_push=0.00022607762733743302, bound_frac=0.005752341994345096
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00022607762733743302
bound_frac: 0.005752341994345096
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00022607762733743302
bound_frac = 0.005752341994345096
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3462162.867620574
Testing bound_push=0.001, bound_frac=0.005989342526588107
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.005989342526588107
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.005989342526588107
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3444828.175481857
Testing bound_push=0.0001762218389114202, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0001762218389114202
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001762218389114202
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429813.3640372073
Testing bound_push=0.0005129531554058536, bound_frac=0.0006742191106005398
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005129531554058536
bound_frac: 0.0006742191106005398
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005129531554058536
bound_frac = 0.0006742191106005398
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445710.663351388
Testing bound_push=1e-06, bound_frac=0.00045479530566677924
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.00045479530566677924
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.00045479530566677924
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3452863.51993092
Testing bound_push=0.00021381964511943844, bound_frac=0.004885269701260656
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00021381964511943844
bound_frac: 0.004885269701260656
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00021381964511943844
bound_frac = 0.004885269701260656
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3410101.065366761
Testing bound_push=0.0009935333504913512, bound_frac=0.007160849554654215
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0009935333504913512
bound_frac: 0.007160849554654215
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009935333504913512
bound_frac = 0.007160849554654215
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3458031.8815510776
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3452863.51993092
Testing bound_push=0.0003419485516501288, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0003419485516501288
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003419485516501288
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429813.364039038
Testing bound_push=1e-06, bound_frac=0.00016613571796829808
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 0.00016613571796829808
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.00016613571796829808
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3452863.51993092
Testing bound_push=0.0002024366336577296, bound_frac=0.003959032987211147
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0002024366336577296
bound_frac: 0.003959032987211147
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002024366336577296
bound_frac = 0.003959032987211147
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3461740.4504672196
Testing bound_push=0.0005814284783258524, bound_frac=0.004922187332721555
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005814284783258524
bound_frac: 0.004922187332721555
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005814284783258524
bound_frac = 0.004922187332721555
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425183.8635479216
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3452863.51993092
Testing bound_push=0.0003852642937853145, bound_frac=0.0015007778199776355
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0003852642937853145
bound_frac: 0.0015007778199776355
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003852642937853145
bound_frac = 0.0015007778199776355
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3453793.4413905484
Testing bound_push=0.00010604481817940738, bound_frac=0.0021034850984819717
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00010604481817940738
bound_frac: 0.0021034850984819717
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010604481817940738
bound_frac = 0.0021034850984819717
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3438416.5904759495
Testing bound_push=0.00016607529210357867, bound_frac=0.0033591793150927274
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00016607529210357867
bound_frac: 0.0033591793150927274
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00016607529210357867
bound_frac = 0.0033591793150927274
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425188.4602611717
Testing bound_push=0.0003929263734174031, bound_frac=0.002720151741850648
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0003929263734174031
bound_frac: 0.002720151741850648
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003929263734174031
bound_frac = 0.002720151741850648
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3440584.443031944
Testing bound_push=8.358738844178197e-05, bound_frac=0.0008780904205471785
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 8.358738844178197e-05
bound_frac: 0.0008780904205471785
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 8.358738844178197e-05
bound_frac = 0.0008780904205471785
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3408840.5245754523
Testing bound_push=0.00038349740263075003, bound_frac=0.0032961550271415636
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00038349740263075003
bound_frac: 0.0032961550271415636
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038349740263075003
bound_frac = 0.0032961550271415636
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3388937.466241731
Testing bound_push=0.00018860713185107507, bound_frac=0.003701402023473576
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00018860713185107507
bound_frac: 0.003701402023473576
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018860713185107507
bound_frac = 0.003701402023473576
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450768.7370132054
Testing bound_push=0.00015858382249806272, bound_frac=0.0037044215280354676
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00015858382249806272
bound_frac: 0.0037044215280354676
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00015858382249806272
bound_frac = 0.0037044215280354676
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3389006.280781672
Testing bound_push=0.00046728702236547345, bound_frac=0.0014234741682076708
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00046728702236547345
bound_frac: 0.0014234741682076708
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046728702236547345
bound_frac = 0.0014234741682076708
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3409007.2996953665
Testing bound_push=0.00016155260605005235, bound_frac=0.0018235669090195161
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00016155260605005235
bound_frac: 0.0018235669090195161
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00016155260605005235
bound_frac = 0.0018235669090195161
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425176.5059429375
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00038349740263075003
bound_frac: 0.0032961550271415636
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038349740263075003
bound_frac = 0.0032961550271415636
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3388937.466241731
Solve_result:  solved
Solve_time: 1.9161909999999978 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(60, 71)  True    33,88,937     35,53,295     2.08s       limit         No        93.39s
(25, 69)  True    33,88,937     34,62,522     0.37s       solved        No        93.89s
(35, 68)  True    33,88,937     58,62,023     2.15s       limit         No        96.09s
(2, 66)   True    33,88,937     33,78,415     0.49s       solved        Yes       96.78s

visited_nodes: [71, 69, 68, 66]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 2, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(69, 60)  True    33,78,415     33,68,667     0.15s       solved        Yes       97.01s

visited_nodes: [71, 69, 68, 66, 60]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 56)  True    33,68,667     36,14,996     1.55s       solved        No        98.64s
(20, 32)  True    33,68,667     33,95,207     0.17s       solved        No        98.86s
(4, 33)   True    33,68,667     55,50,174     1.74s       solved        No        100.76s
(32, 16)  True    33,68,667     33,81,603     0.12s       solved        No        100.93s
(15, 35)  True    33,68,667     43,28,436     1.95s       limit         No        102.94s
(54, 39)  True    33,68,667     33,71,534     0.15s       solved        No        103.14s
(39, 25)  True    33,68,667     34,20,892     0.43s       solved        No        103.62s
(16, 12)  True    33,68,667     33,92,388     0.13s       solved        No        103.81s
(11, 40)  True    33,68,667     33,69,429     0.12s       solved        No        104.01s
(44, 52)  True    33,68,667     34,27,372     0.42s       solved        No        104.48s
(47, 45)  True    33,68,667     33,80,303     0.17s       solved        No        104.7s
(14, 19)  True    33,68,667     33,67,982     0.13s       solved        Yes       104.93s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(52, 14)  True    33,67,982     33,87,324     0.16s       solved        No        105.16s
(53, 6)   True    33,67,982     39,91,965     1.58s       failure       No        106.8s
(48, 36)  True    33,67,982     33,76,209     0.12s       solved        No        107.03s
(10, 13)  True    33,67,982     33,78,691     0.27s       solved        No        107.43s
(8, 53)   True    33,67,982     34,59,264     1.15s       solved        No        108.67s
(45, 44)  True    33,67,982     47,33,443     2.14s       limit         No        111.05s
(13, 47)  True    33,67,982     33,68,440     0.27s       solved        No        111.5s
(37, 57)  True    33,67,982     35,44,561     1.01s       solved        No        112.57s

**********************************Final best results******************************************

Water Network: d12
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,31       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_2,51       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_3,18       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_3,39       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_4,64       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_5,68       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_6,27       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_6,40       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_7,50       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_8,36       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_8,53       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_9,49       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_10,28      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_10,45      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_11,6       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_12,16      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_12,32      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_13,10      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_14,52      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_14,66      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_15,11      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_16,20      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_16,56      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_17,7       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_18,41      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_19,14      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_20,21      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_21,9       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_22,49      |                   -0 |              2.1e-07 |
+-----------------+----------------------+----------------------+
| con2_23,56      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_23,62      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_24,34      |                   -0 |              5.5e-07 |
+-----------------+----------------------+----------------------+
| con2_25,39      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_25,55      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_26,44      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_27,19      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_28,50      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_29,17      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_30,13      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_30,36      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_31,28      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_32,16      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_32,20      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_32,21      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_33,4       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_33,64      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_34,26      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_35,11      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_35,15      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_36,48      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_37,57      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_38,30      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_38,31      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_39,54      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_39,69      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_40,11      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_40,35      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_41,66      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_42,40      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_43,72      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_44,19      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_45,47      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_46,61      |                   -0 |              2e-08   |
+-----------------+----------------------+----------------------+
| con2_47,10      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_47,13      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_48,13      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_48,34      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_49,28      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_50,45      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_50,52      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_51,14      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_52,44      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_53,6       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_53,19      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_54,3       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_55,54      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_56,12      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_57,33      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_58,43      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_59,5       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_60,55      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_60,71      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_61,23      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_62,37      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_62,57      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_63,62      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_64,38      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_65,73      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_66,2       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_66,52      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_67,58      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_68,35      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_68,42      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_69,25      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_69,60      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_70,69      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_71,5       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_71,59      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_72,33      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_73,29      |                   -0 |              0       |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 7.75043016027401e-11
Total relative constraint violation: 7.800369508394821e-07
*******************************************************************************

Final best objective: 3367982.4943480394
Number of nlp problem solved: 56
Total number of iteration: 4
Solver_time: 109.07 seconds
Heuristic elapsed time: 112.58 seconds

