Water Network: d3_Sample_input_double_hanoi 

Testing bound_push=0.0008580934849416204, bound_frac=0.004278593287867965
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008580934849416204
bound_frac: 0.004278593287867965
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008580934849416204
bound_frac = 0.004278593287867965
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251863
Testing bound_push=0.0002844682463946186, bound_frac=0.006547021495897111
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0002844682463946186
bound_frac: 0.006547021495897111
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002844682463946186
bound_frac = 0.006547021495897111
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251902
Testing bound_push=0.00017576094541451426, bound_frac=0.005015817951112962
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00017576094541451426
bound_frac: 0.005015817951112962
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017576094541451426
bound_frac = 0.005015817951112962
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.719717689
Testing bound_push=0.0005395127501099405, bound_frac=0.000647602063476273
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005395127501099405
bound_frac: 0.000647602063476273
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005395127501099405
bound_frac = 0.000647602063476273
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008252023
Testing bound_push=0.0007315359546242542, bound_frac=0.003635791562322694
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007315359546242542
bound_frac: 0.003635791562322694
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007315359546242542
bound_frac = 0.003635791562322694
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251898
Testing bound_push=0.001, bound_frac=0.006159719577968714
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.006159719577968714
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.006159719577968714
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008244766
Testing bound_push=0.0001730724865218589, bound_frac=0.003986900092880272
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0001730724865218589
bound_frac: 0.003986900092880272
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001730724865218589
bound_frac = 0.003986900092880272
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12067969.13822925
Testing bound_push=0.0003966071774833109, bound_frac=0.0035560877131885827
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003966071774833109
bound_frac: 0.0035560877131885827
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003966071774833109
bound_frac = 0.0035560877131885827
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.720341882
Testing bound_push=0.0005601526465692679, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005601526465692679
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005601526465692679
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12336414.531616857
Testing bound_push=0.00046334251023472117, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00046334251023472117
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00046334251023472117
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12148219.777293079
Testing bound_push=0.001, bound_frac=0.0071002827230190885
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.0071002827230190885
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0071002827230190885
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008244766
Testing bound_push=0.00020358367744390435, bound_frac=0.003816505844748876
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00020358367744390435
bound_frac: 0.003816505844748876
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020358367744390435
bound_frac = 0.003816505844748876
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12419517.201940548
Testing bound_push=0.0005356780437098912, bound_frac=0.003593185283306663
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005356780437098912
bound_frac: 0.003593185283306663
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005356780437098912
bound_frac = 0.003593185283306663
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630214097
Testing bound_push=0.0007827706058483738, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007827706058483738
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007827706058483738
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630199242
Testing bound_push=0.0005228361478881447, bound_frac=0.0005532575487217825
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005228361478881447
bound_frac: 0.0005532575487217825
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005228361478881447
bound_frac = 0.0005532575487217825
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008255
Testing bound_push=0.001, bound_frac=0.006819365255376991
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.006819365255376991
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.006819365255376991
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008244766
Testing bound_push=0.0005897194325600474, bound_frac=0.004991713464313095
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005897194325600474
bound_frac: 0.004991713464313095
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005897194325600474
bound_frac = 0.004991713464313095
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251905
Testing bound_push=0.0006475997410872366, bound_frac=0.0037006844980848413
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006475997410872366
bound_frac: 0.0037006844980848413
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006475997410872366
bound_frac = 0.0037006844980848413
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00825139
Testing bound_push=0.0008797185137761166, bound_frac=0.0015836392514752295
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008797185137761166
bound_frac: 0.0015836392514752295
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008797185137761166
bound_frac = 0.0015836392514752295
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251915
Testing bound_push=0.0006944097437148678, bound_frac=0.0025513527206706015
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006944097437148678
bound_frac: 0.0025513527206706015
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006944097437148678
bound_frac = 0.0025513527206706015
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251375
Testing bound_push=0.001, bound_frac=0.006323338321253826
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.006323338321253826
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.006323338321253826
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008244766
Testing bound_push=0.00080204564441833, bound_frac=0.005881721306187122
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00080204564441833
bound_frac: 0.005881721306187122
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00080204564441833
bound_frac = 0.005881721306187122
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630203482
Testing bound_push=0.0008657912794637671, bound_frac=0.0038982171846337847
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008657912794637671
bound_frac: 0.0038982171846337847
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008657912794637671
bound_frac = 0.0038982171846337847
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008251373
Testing bound_push=0.0009721106525807174, bound_frac=0.002507432946412886
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009721106525807174
bound_frac: 0.002507432946412886
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009721106525807174
bound_frac = 0.002507432946412886
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008254077
Testing bound_push=0.0008766881908054454, bound_frac=0.003700461116262122
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008766881908054454
bound_frac: 0.003700461116262122
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008766881908054454
bound_frac = 0.003700461116262122
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082519
Testing bound_push=0.001, bound_frac=0.006013712130239241
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.006013712130239241
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.006013712130239241
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008244766
Testing bound_push=0.0009662835756226286, bound_frac=0.006634234945252262
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009662835756226286
bound_frac: 0.006634234945252262
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009662835756226286
bound_frac = 0.006634234945252262
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630213283
Testing bound_push=0.001, bound_frac=0.004745968638166024
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.004745968638166024
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.004745968638166024
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008244766
Testing bound_push=0.0009938612557215288, bound_frac=0.004377211279260605
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009938612557215288
bound_frac: 0.004377211279260605
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009938612557215288
bound_frac = 0.004377211279260605
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008174736
Testing bound_push=0.0009370865760558806, bound_frac=0.004177602064523488
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009370865760558806
bound_frac: 0.004177602064523488
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009370865760558806
bound_frac = 0.004177602064523488
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082519
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009938612557215288
bound_frac: 0.004377211279260605
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009938612557215288
bound_frac = 0.004377211279260605
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  12064445.008174736
Solve_result:  solved
Solve_time: 0.620001000000002 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 29, 59, 16, 46] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,20,64,445   1,21,14,709   0.03s       solved        No        21.15s
(56, 57)  True    1,20,64,445   1,21,14,386   0.03s       solved        No        21.2s
(28, 29)  True    1,20,64,445   1,23,41,023   0.04s       solved        No        21.25s
(58, 59)  True    1,20,64,445   1,23,41,023   0.05s       solved        No        21.31s
(15, 16)  True    1,20,64,445   1,20,69,256   0.03s       solved        No        21.36s
(45, 46)  True    1,20,64,445   1,20,69,256   0.03s       solved        No        21.4s

**********************************Final best results******************************************

Water Network: d3_Sample_input_double_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 8.439161036655207e-10
Total relative constraint violation: 9.848253488551822e-10
*******************************************************************************

Final best objective: 12064445.008174736
Number of nlp problem solved: 37
Total number of iteration: 1
Solver_time: 21.16 seconds
Heuristic elapsed time: 21.40 seconds

