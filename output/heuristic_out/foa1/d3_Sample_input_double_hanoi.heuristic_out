Water Network: d3_Sample_input_double_hanoi 

Testing bound_push=0.00017145665852944363, bound_frac=0.005830352101450301
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00017145665852944363
bound_frac: 0.005830352101450301
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017145665852944363
bound_frac = 0.005830352101450301
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12398423.828625375
Testing bound_push=0.00048115754224207585, bound_frac=0.0017957153796793303
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00048115754224207585
bound_frac: 0.0017957153796793303
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00048115754224207585
bound_frac = 0.0017957153796793303
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856338
Testing bound_push=0.0006252596457578051, bound_frac=0.00543075463343012
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006252596457578051
bound_frac: 0.00543075463343012
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006252596457578051
bound_frac = 0.00543075463343012
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.63093662
Testing bound_push=0.0003568860361882249, bound_frac=0.0007217932957427006
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003568860361882249
bound_frac: 0.0007217932957427006
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003568860361882249
bound_frac = 0.0007217932957427006
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12306251.274389002
Testing bound_push=0.0007120405597037797, bound_frac=0.002214288964458734
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007120405597037797
bound_frac: 0.002214288964458734
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007120405597037797
bound_frac = 0.002214288964458734
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.014305597
Testing bound_push=0.000199562513710929, bound_frac=0.006227628295605982
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.000199562513710929
bound_frac: 0.006227628295605982
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000199562513710929
bound_frac = 0.006227628295605982
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00985634
Testing bound_push=0.00039608423201599376, bound_frac=0.004499916495245127
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00039608423201599376
bound_frac: 0.004499916495245127
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039608423201599376
bound_frac = 0.004499916495245127
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12300699.498089802
Testing bound_push=0.0005013348538108554, bound_frac=0.0006933217174588573
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005013348538108554
bound_frac: 0.0006933217174588573
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005013348538108554
bound_frac = 0.0006933217174588573
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856263
Testing bound_push=6.6344579604128554e-06, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 6.6344579604128554e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.6344579604128554e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630935209
Testing bound_push=0.0004514395307638515, bound_frac=0.003985098556892396
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0004514395307638515
bound_frac: 0.003985098556892396
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004514395307638515
bound_frac = 0.003985098556892396
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856371
Testing bound_push=0.0003506277381565416, bound_frac=0.004208495604145601
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003506277381565416
bound_frac: 0.004208495604145601
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003506277381565416
bound_frac = 0.004208495604145601
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009882951
Testing bound_push=0.00039494511104139836, bound_frac=0.0036625306699915776
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00039494511104139836
bound_frac: 0.0036625306699915776
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039494511104139836
bound_frac = 0.0036625306699915776
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856327
Testing bound_push=0.00043937245783738063, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00043937245783738063
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043937245783738063
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00985583
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12272219.452662792
Testing bound_push=0.0003171414566181597, bound_frac=0.0029898848580966774
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003171414566181597
bound_frac: 0.0029898848580966774
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003171414566181597
bound_frac = 0.0029898848580966774
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856343
Testing bound_push=0.0003545048726241448, bound_frac=0.002313025033494434
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003545048726241448
bound_frac: 0.002313025033494434
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003545048726241448
bound_frac = 0.002313025033494434
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009858446
Testing bound_push=0.0003953069643876863, bound_frac=0.0023912562447738323
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003953069643876863
bound_frac: 0.0023912562447738323
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003953069643876863
bound_frac = 0.0023912562447738323
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009842874
Testing bound_push=0.0003914690652555999, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003914690652555999
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003914690652555999
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856494
Testing bound_push=5.849492199467158e-06, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 5.849492199467158e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.849492199467158e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12238187.630936144
Testing bound_push=0.0002761036009801643, bound_frac=0.002378717614576892
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0002761036009801643
bound_frac: 0.002378717614576892
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002761036009801643
bound_frac = 0.002378717614576892
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12067969.139868362
Testing bound_push=0.0002885585370844432, bound_frac=0.002815650392263509
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0002885585370844432
bound_frac: 0.002815650392263509
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002885585370844432
bound_frac = 0.002815650392263509
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.883213114
Testing bound_push=0.0003954878910608303, bound_frac=0.0017556190321649596
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003954878910608303
bound_frac: 0.0017556190321649596
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003954878910608303
bound_frac = 0.0017556190321649596
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856347
Testing bound_push=0.00039030638607606905, bound_frac=0.0005773786786525695
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00039030638607606905
bound_frac: 0.0005773786786525695
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039030638607606905
bound_frac = 0.0005773786786525695
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12306251.274388958
Testing bound_push=0.00015550670425158397, bound_frac=0.000817478089549922
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00015550670425158397
bound_frac: 0.000817478089549922
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00015550670425158397
bound_frac = 0.000817478089549922
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.883213297
Testing bound_push=0.00030197203355306307, bound_frac=0.0023006645139769808
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00030197203355306307
bound_frac: 0.0023006645139769808
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00030197203355306307
bound_frac = 0.0023006645139769808
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.883213082
Testing bound_push=0.00024024312083583207, bound_frac=0.0037114813919570423
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00024024312083583207
bound_frac: 0.0037114813919570423
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00024024312083583207
bound_frac = 0.0037114813919570423
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12068983.883201797
Testing bound_push=0.00039551847555753, bound_frac=0.0016791752914461198
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00039551847555753
bound_frac: 0.0016791752914461198
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039551847555753
bound_frac = 0.0016791752914461198
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.721796576
Testing bound_push=0.00040514471350513293, bound_frac=0.0009421325875409682
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00040514471350513293
bound_frac: 0.0009421325875409682
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00040514471350513293
bound_frac = 0.0009421325875409682
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009860393
Testing bound_push=0.00026354760403253974, bound_frac=0.0019132166445647112
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00026354760403253974
bound_frac: 0.0019132166445647112
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026354760403253974
bound_frac = 0.0019132166445647112
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856332
Testing bound_push=0.0003305126308093358, bound_frac=0.0024154791322646718
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003305126308093358
bound_frac: 0.0024154791322646718
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003305126308093358
bound_frac = 0.0024154791322646718
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009856338
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003953069643876863
bound_frac: 0.0023912562447738323
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003953069643876863
bound_frac = 0.0023912562447738323
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  12064445.009842874
Solve_result:  solved
Solve_time: 1.1607500000000002 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 29, 59, 16, 46] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,20,64,445   1,21,14,386   0.1s        solved        No        35.97s
(56, 57)  True    1,20,64,445   1,21,14,386   0.09s       solved        No        36.1s
(28, 29)  True    1,20,64,445   1,23,41,023   0.11s       solved        No        36.23s
(58, 59)  True    1,20,64,445   1,23,41,023   0.13s       solved        No        36.43s
(15, 16)  True    1,20,64,445   1,20,69,256   0.08s       solved        No        36.57s
(45, 46)  True    1,20,64,445   1,20,69,256   0.09s       solved        No        36.78s

**********************************Final best results******************************************

Water Network: d3_Sample_input_double_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_2,3        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_2,33       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_3,4        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_3,19       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_3,20       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_4,5        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_5,6        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_6,7        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_7,8        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_8,9        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_9,10       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_10,11      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_10,14      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_11,12      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_12,13      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_14,15      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_15,16      |                1e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_16,27      |                1e-08 |                3e-08 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                3e-08 |                1e-08 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_19,18      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_20,21      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_20,23      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_21,22      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_23,24      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_23,28      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_24,25      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_25,32      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_26,25      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_27,26      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_28,29      |                2e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_29,30      |               -2e-08 |                8e-08 |
+-----------------+----------------------+----------------------+
| con2_30,31      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_32,31      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_33,34      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_33,49      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_33,50      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_34,35      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_35,36      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_36,37      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_37,38      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_38,39      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_39,40      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_40,41      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_40,44      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_41,42      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_42,43      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_44,45      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_45,46      |                1e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_46,57      |                1e-08 |                3e-08 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                3e-08 |                1e-08 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_49,48      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_50,51      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_50,53      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_51,52      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_53,54      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_53,58      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_54,55      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_55,62      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_56,55      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_57,56      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_58,59      |                2e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_59,60      |               -2e-08 |                8e-08 |
+-----------------+----------------------+----------------------+
| con2_60,61      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_62,61      |                0     |                0     |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 2.3453311931431742e-07
Total relative constraint violation: 2.7358948621301004e-07
*******************************************************************************

Final best objective: 12064445.009842874
Number of nlp problem solved: 37
Total number of iteration: 1
Solver_time: 35.04 seconds
Heuristic elapsed time: 36.79 seconds

