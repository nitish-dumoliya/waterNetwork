Water Network: d4_Sample_input_triple_hanoi 

Testing bound_push=0.0005960517175699892, bound_frac=0.00898826473773206
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005960517175699892
bound_frac: 0.00898826473773206
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005960517175699892
bound_frac = 0.00898826473773206
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18732474.884058006
Testing bound_push=0.00040315283891779736, bound_frac=0.006753244929574625
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00040315283891779736
bound_frac: 0.006753244929574625
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00040315283891779736
bound_frac = 0.006753244929574625
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891367
Testing bound_push=0.0007746697680211221, bound_frac=0.007073685854713578
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007746697680211221
bound_frac: 0.007073685854713578
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007746697680211221
bound_frac = 0.007073685854713578
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942892067
Testing bound_push=0.0005922327358058409, bound_frac=0.0006028193141672645
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005922327358058409
bound_frac: 0.0006028193141672645
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005922327358058409
bound_frac = 0.0006028193141672645
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942890167
Testing bound_push=3.2995368719721434e-05, bound_frac=0.008798254758136205
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 3.2995368719721434e-05
bound_frac: 0.008798254758136205
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 3.2995368719721434e-05
bound_frac = 0.008798254758136205
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.521498565
Testing bound_push=0.0007091606246505994, bound_frac=0.01
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007091606246505994
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007091606246505994
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18376564.098065317
Testing bound_push=0.00010549550943583357, bound_frac=0.004293162846809261
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010549550943583357
bound_frac: 0.004293162846809261
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010549550943583357
bound_frac = 0.004293162846809261
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937362023
Testing bound_push=0.0005324059193028195, bound_frac=0.0060737494580731174
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005324059193028195
bound_frac: 0.0060737494580731174
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005324059193028195
bound_frac = 0.0060737494580731174
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891102
Testing bound_push=0.0001031766208085186, bound_frac=0.002502113636541484
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0001031766208085186
bound_frac: 0.002502113636541484
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001031766208085186
bound_frac = 0.002502113636541484
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52090601
Testing bound_push=1e-06, bound_frac=0.006532434357334249
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.006532434357334249
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.006532434357334249
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52149844
Testing bound_push=0.0006285722733632632, bound_frac=0.008521690029444981
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0006285722733632632
bound_frac: 0.008521690029444981
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006285722733632632
bound_frac = 0.008521690029444981
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942821458
Testing bound_push=1e-06, bound_frac=0.003063121805426579
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.003063121805426579
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.003063121805426579
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52149844
Testing bound_push=0.00020273411652374962, bound_frac=0.004787819556954089
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00020273411652374962
bound_frac: 0.004787819556954089
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020273411652374962
bound_frac = 0.004787819556954089
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891892
Testing bound_push=9.991544280669121e-05, bound_frac=0.0036907629510520333
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 9.991544280669121e-05
bound_frac: 0.0036907629510520333
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.991544280669121e-05
bound_frac = 0.0036907629510520333
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.035376776
Testing bound_push=1e-06, bound_frac=0.005224971889166713
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.005224971889166713
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.005224971889166713
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52149844
Testing bound_push=0.00053953703005176, bound_frac=0.005912618196138647
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00053953703005176
bound_frac: 0.005912618196138647
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00053953703005176
bound_frac = 0.005912618196138647
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891926
Testing bound_push=4.272697824584438e-06, bound_frac=0.0030518744244240155
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 4.272697824584438e-06
bound_frac: 0.0030518744244240155
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.272697824584438e-06
bound_frac = 0.0030518744244240155
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18627208.625912085
Testing bound_push=0.00014988870209014794, bound_frac=0.004477472900264948
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00014988870209014794
bound_frac: 0.004477472900264948
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00014988870209014794
bound_frac = 0.004477472900264948
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.0352414
Testing bound_push=0.000334922810647384, bound_frac=0.0034672524180662293
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.000334922810647384
bound_frac: 0.0034672524180662293
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000334922810647384
bound_frac = 0.0034672524180662293
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942821648
Testing bound_push=1e-06, bound_frac=0.004934779439855732
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.004934779439855732
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.004934779439855732
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52149844
Testing bound_push=0.0004834926245200919, bound_frac=0.004854051419208956
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0004834926245200919
bound_frac: 0.004854051419208956
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004834926245200919
bound_frac = 0.004854051419208956
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942892406
Testing bound_push=4.524367857084556e-05, bound_frac=0.0034562526811409582
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 4.524367857084556e-05
bound_frac: 0.0034562526811409582
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.524367857084556e-05
bound_frac = 0.0034562526811409582
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Error in step computation.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.605076667
Testing bound_push=0.00020582802237515473, bound_frac=0.004285410301509292
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00020582802237515473
bound_frac: 0.004285410301509292
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020582802237515473
bound_frac = 0.004285410301509292
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94289191
Testing bound_push=0.0003390451182952718, bound_frac=0.003629138827343311
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0003390451182952718
bound_frac: 0.003629138827343311
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003390451182952718
bound_frac = 0.003629138827343311
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94289154
Testing bound_push=1e-06, bound_frac=0.005328226781914489
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.005328226781914489
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.005328226781914489
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52149844
Testing bound_push=0.0003667731319251827, bound_frac=0.004266621015982408
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0003667731319251827
bound_frac: 0.004266621015982408
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003667731319251827
bound_frac = 0.004266621015982408
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.9428919
Testing bound_push=0.00010512534597683901, bound_frac=0.004172240491123839
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010512534597683901
bound_frac: 0.004172240491123839
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010512534597683901
bound_frac = 0.004172240491123839
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937362026
Testing bound_push=0.00019256735051319682, bound_frac=0.004549337603826999
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00019256735051319682
bound_frac: 0.004549337603826999
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00019256735051319682
bound_frac = 0.004549337603826999
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942891583
Testing bound_push=0.00029757645487484783, bound_frac=0.003951887113349886
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00029757645487484783
bound_frac: 0.003951887113349886
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029757645487484783
bound_frac = 0.003951887113349886
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.94289109
Testing bound_push=4.1894695213559195e-05, bound_frac=0.005832973116737318
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 4.1894695213559195e-05
bound_frac: 0.005832973116737318
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.1894695213559195e-05
bound_frac = 0.005832973116737318
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.52149861
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010549550943583357
bound_frac: 0.004293162846809261
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010549550943583357
bound_frac = 0.004293162846809261
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  18369652.937362023
Solve_result:  solved
Solve_time: 2.166375000000002 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 87, 29, 59, 89, 16, 46, 76] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,83,69,653   1,84,19,582   0.12s       solved        No        72.17s
(56, 57)  True    1,83,69,653   1,84,19,582   0.11s       solved        No        72.33s
(86, 87)  True    1,83,69,653   1,84,19,582   0.09s       solved        No        72.46s
(28, 29)  True    1,83,69,653   1,86,46,183   0.12s       solved        No        72.65s
(58, 59)  True    1,83,69,653   1,86,46,181   0.13s       solved        No        72.85s
(88, 89)  True    1,83,69,653   1,86,46,181   0.13s       solved        No        73.02s
(15, 16)  True    1,83,69,653   1,83,74,515   0.08s       solved        No        73.13s
(45, 46)  True    1,83,69,653   1,83,74,517   0.08s       solved        No        73.25s
(75, 76)  True    1,83,69,653   1,83,74,517   0.08s       solved        No        73.37s

**********************************Final best results******************************************

Water Network: d4_Sample_input_triple_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,63       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,64      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,79      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,80      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_64,65      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_65,66      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_66,67      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_67,68      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_68,69      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_69,70      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_70,71      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_70,74      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_71,72      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_72,73      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_74,75      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_75,76      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_76,87      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_77,76      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_78,77      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_79,78      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,81      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,83      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_81,82      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_83,84      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_83,88      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_84,85      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_85,92      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_86,85      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_87,86      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_88,89      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_89,90      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_90,91      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_92,91      |                    0 |                    0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.389999226830696e-13
Total relative constraint violation: 1.4919509741376096e-13
*******************************************************************************

Final best objective: 18369652.937362023
Number of nlp problem solved: 40
Total number of iteration: 1
Solver_time: 71.74 seconds
Heuristic elapsed time: 73.38 seconds

