Water Network: d9_HG_SP_4_2 

Testing bound_push=0.0004575241889659968, bound_frac=0.0063438388770324025
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004575241889659968
bound_frac: 0.0063438388770324025
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004575241889659968
bound_frac = 0.0063438388770324025
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8978440.12061924
Testing bound_push=4.70852636541076e-05, bound_frac=0.0028554086708877826
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 4.70852636541076e-05
bound_frac: 0.0028554086708877826
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.70852636541076e-05
bound_frac = 0.0028554086708877826
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8978320.81997956
Testing bound_push=0.0007724839236021028, bound_frac=0.007480963916371066
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007724839236021028
bound_frac: 0.007480963916371066
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007724839236021028
bound_frac = 0.007480963916371066
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8972641.207829474
Testing bound_push=0.000685414856560819, bound_frac=0.0009962127471096142
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.000685414856560819
bound_frac: 0.0009962127471096142
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000685414856560819
bound_frac = 0.0009962127471096142
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8989302.795808226
Testing bound_push=2.3853137920083933e-05, bound_frac=0.00592551818911926
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 2.3853137920083933e-05
bound_frac: 0.00592551818911926
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.3853137920083933e-05
bound_frac = 0.00592551818911926
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9020657.376453863
Testing bound_push=0.0007953835979374187, bound_frac=0.006506878313783087
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007953835979374187
bound_frac: 0.006506878313783087
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007953835979374187
bound_frac = 0.006506878313783087
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8990712.188481504
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8994264.232849326
Testing bound_push=0.00036816612335468444, bound_frac=0.008099644517376218
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00036816612335468444
bound_frac: 0.008099644517376218
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00036816612335468444
bound_frac = 0.008099644517376218
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9025396.509967215
Testing bound_push=0.0005516862829524768, bound_frac=0.0016428987171882693
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005516862829524768
bound_frac: 0.0016428987171882693
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005516862829524768
bound_frac = 0.0016428987171882693
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980644.532836575
Testing bound_push=1.5533286358804912e-05, bound_frac=0.006130552471761725
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1.5533286358804912e-05
bound_frac: 0.006130552471761725
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.5533286358804912e-05
bound_frac = 0.006130552471761725
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059774.288776657
Testing bound_push=0.0009145385000520793, bound_frac=0.006858583700859323
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0009145385000520793
bound_frac: 0.006858583700859323
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009145385000520793
bound_frac = 0.006858583700859323
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9010897.063365843
Testing bound_push=0.0002307395074552325, bound_frac=0.000387507833078711
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002307395074552325
bound_frac: 0.000387507833078711
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002307395074552325
bound_frac = 0.000387507833078711
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9024788.674863277
Testing bound_push=0.00041501432403916617, bound_frac=0.008072774648935828
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00041501432403916617
bound_frac: 0.008072774648935828
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00041501432403916617
bound_frac = 0.008072774648935828
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8975470.378363734
Testing bound_push=0.0005639114337554982, bound_frac=0.0019912296389885953
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005639114337554982
bound_frac: 0.0019912296389885953
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005639114337554982
bound_frac = 0.0019912296389885953
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8950524.910628963
Testing bound_push=4.5350389163238274e-05, bound_frac=0.005010263043680945
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 4.5350389163238274e-05
bound_frac: 0.005010263043680945
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.5350389163238274e-05
bound_frac = 0.005010263043680945
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8998968.223272428
Testing bound_push=0.0008293673190030257, bound_frac=0.006201368783454221
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0008293673190030257
bound_frac: 0.006201368783454221
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008293673190030257
bound_frac = 0.006201368783454221
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9021969.170726718
Testing bound_push=0.0004316857214293618, bound_frac=0.0017970928961815163
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004316857214293618
bound_frac: 0.0017970928961815163
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004316857214293618
bound_frac = 0.0017970928961815163
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8956966.187307468
Testing bound_push=0.0005619930317395238, bound_frac=0.006081231048063424
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005619930317395238
bound_frac: 0.006081231048063424
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005619930317395238
bound_frac = 0.006081231048063424
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9007925.670154018
Testing bound_push=0.0005700240091570088, bound_frac=0.0021653950998887584
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005700240091570088
bound_frac: 0.0021653950998887584
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005700240091570088
bound_frac = 0.0021653950998887584
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8993021.6822555
Testing bound_push=0.00017946887997160078, bound_frac=0.0042835135655342
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00017946887997160078
bound_frac: 0.0042835135655342
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017946887997160078
bound_frac = 0.0042835135655342
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9027929.544896517
Testing bound_push=0.000556422618543767, bound_frac=0.004966642576863436
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.000556422618543767
bound_frac: 0.004966642576863436
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000556422618543767
bound_frac = 0.004966642576863436
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8979619.223142853
Testing bound_push=0.0005698297307649466, bound_frac=0.002511030830129917
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005698297307649466
bound_frac: 0.002511030830129917
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005698297307649466
bound_frac = 0.002511030830129917
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8983139.479996026
Testing bound_push=0.0007399105736732264, bound_frac=0.004433005888061713
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007399105736732264
bound_frac: 0.004433005888061713
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007399105736732264
bound_frac = 0.004433005888061713
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9020020.746654723
Testing bound_push=0.0005713241905755974, bound_frac=0.0021016114997754656
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005713241905755974
bound_frac: 0.0021016114997754656
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005713241905755974
bound_frac = 0.0021016114997754656
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8981859.063235445
Testing bound_push=0.0002723382562751286, bound_frac=0.004051324757662243
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002723382562751286
bound_frac: 0.004051324757662243
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002723382562751286
bound_frac = 0.004051324757662243
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980893.914297214
Testing bound_push=0.000412534391634362, bound_frac=0.0037376630035299624
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.000412534391634362
bound_frac: 0.0037376630035299624
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000412534391634362
bound_frac = 0.0037376630035299624
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8989805.026890304
Testing bound_push=0.0006122292424323349, bound_frac=0.002604723543683158
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0006122292424323349
bound_frac: 0.002604723543683158
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006122292424323349
bound_frac = 0.002604723543683158
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984250.620903313
Testing bound_push=0.0008005556530994433, bound_frac=0.004699021841593418
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0008005556530994433
bound_frac: 0.004699021841593418
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008005556530994433
bound_frac = 0.004699021841593418
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984270.24160558
Testing bound_push=0.000566957346506964, bound_frac=0.002042502714891397
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.000566957346506964
bound_frac: 0.002042502714891397
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000566957346506964
bound_frac = 0.002042502714891397
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9057910.53406456
Testing bound_push=0.00043807850952802714, bound_frac=0.003085736283310962
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00043807850952802714
bound_frac: 0.003085736283310962
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043807850952802714
bound_frac = 0.003085736283310962
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9021455.544233233
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005639114337554982
bound_frac: 0.0019912296389885953
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005639114337554982
bound_frac = 0.0019912296389885953
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  8950524.910628963
Solve_result:  solved
Solve_time: 9.940645000000018 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 84, 42, 74, 111, 58, 50, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 138)True    89,50,525     90,58,288     1.19s       solved        No        318.21s
(117, 143)True    89,50,525     91,32,670     0.8s        infeasible    No        319.11s
(141, 134)True    89,50,525     89,23,379     1.24s       solved        Yes       320.44s

visited_nodes: [138, 143, 134]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [141, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 84, 42, 74, 111, 58, 50, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(134, 141)True    89,23,379     88,74,193     1.97s       solved        Yes       322.58s

visited_nodes: [138, 143, 134, 141]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 19, 42, 74, 111, 28, 58, 50, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(11, 126) True    88,74,193     88,82,642     1.62s       solved        No        324.37s
(59, 135) True    88,74,193     90,31,394     2.5s        solved        No        326.97s
(41, 17)  True    88,74,193     89,15,363     0.83s       solved        No        327.92s
(56, 54)  True    88,74,193     1,06,24,858   3.49s       limit         No        331.52s
(105, 112)True    88,74,193     96,33,120     3.36s       limit         No        334.98s
(29, 9)   True    88,74,193     89,95,278     1.8s        solved        No        336.88s
(39, 83)  True    88,74,193     90,74,185     1.1s        solved        No        338.09s
(44, 35)  True    88,74,193     89,06,734     0.46s       infeasible    No        338.64s
(126, 59) True    88,74,193     89,36,767     1.31s       solved        No        340.04s
(61, 93)  True    88,74,193     89,02,398     1.0s        solved        No        341.14s
(103, 105)True    88,74,193     88,58,276     1.39s       solved        Yes       342.63s

visited_nodes: [138, 143, 134, 141, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [123, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 123) True    88,58,276     88,73,918     3.52s       limit         No        346.28s
(82, 109) True    88,58,276     88,64,107     0.57s       solved        No        346.95s
(6, 85)   True    88,58,276     94,09,540     2.7s        solved        No        349.75s
(5, 76)   True    88,58,276     94,49,500     3.31s       solved        No        353.16s
(109, 89) True    88,58,276     88,61,170     1.74s       solved        No        355.0s
(40, 43)  True    88,58,276     1,22,90,972   3.62s       limit         No        358.72s
(101, 104)True    88,58,276     89,11,127     0.54s       solved        No        359.37s
(48, 2)   True    88,58,276     88,69,781     2.2s        solved        No        361.68s
(51, 103) True    88,58,276     1,06,76,070   3.34s       limit         No        365.13s
(92, 114) True    88,58,276     88,65,053     1.98s       solved        No        367.2s
(28, 51)  True    88,58,276     88,96,776     0.72s       solved        No        368.01s
(114, 5)  True    88,58,276     88,57,121     0.53s       solved        Yes       368.65s

visited_nodes: [138, 143, 134, 141, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 123, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [60, 49, 42, 74, 28, 58, 18, 68, 73, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(74, 60)  True    88,57,121     1,36,60,679   3.66s       limit         No        372.46s
(25, 49)  True    88,57,121     1,33,32,443   3.51s       limit         No        376.07s
(36, 42)  True    88,57,121     1,09,30,478   3.68s       limit         No        379.86s
(26, 74)  True    88,57,121     1,39,19,341   3.69s       limit         No        383.67s
(111, 28) True    88,57,121     88,48,883     0.59s       solved        Yes       384.35s

visited_nodes: [138, 143, 134, 141, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 123, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 28]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [111, 58, 18, 68, 65, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(28, 111) True    88,48,883     88,48,263     0.89s       solved        Yes       385.39s

visited_nodes: [138, 143, 134, 141, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 123, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 28, 111]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [58, 18, 68, 65, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(60, 58)  True    88,48,263     90,96,857     3.51s       limit         No        389.05s
(4, 18)   True    88,48,263     88,51,683     0.48s       solved        No        389.63s
(21, 68)  True    88,48,263     88,64,991     1.85s       solved        No        391.58s
(23, 65)  True    88,48,263     88,50,429     0.53s       solved        No        392.21s
(77, 57)  True    88,48,263     92,05,163     3.03s       limit         No        395.34s
(18, 23)  True    88,48,263     88,51,765     0.37s       solved        No        395.83s
(31, 37)  True    88,48,263     88,74,802     0.99s       solved        No        396.91s
(70, 101) True    88,48,263     99,49,668     3.41s       limit         No        400.4s
(80, 6)   True    88,48,263     88,55,480     2.52s       solved        No        403.01s
(99, 24)  True    88,48,263     95,01,007     3.45s       failure       No        406.55s
(75, 36)  True    88,48,263     88,50,494     0.42s       solved        No        407.07s
(96, 47)  True    88,48,263     89,88,796     0.71s       solved        No        407.88s
(47, 53)  True    88,48,263     88,52,597     0.43s       solved        No        408.41s
(55, 100) True    88,48,263     88,46,851     0.96s       solved        Yes       409.46s

visited_nodes: [138, 143, 134, 141, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 123, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 28, 111, 58, 18, 68, 65, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [55, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(100, 55) True    88,46,851     88,49,609     0.49s       solved        No        410.1s
(53, 78)  True    88,46,851     88,50,438     0.42s       solved        No        410.62s
(91, 87)  True    88,46,851     89,36,965     1.6s        solved        No        412.32s
(48, 11)  True    88,46,851     88,50,693     0.4s        solved        No        412.82s
(87, 63)  True    88,46,851     88,84,135     1.44s       solved        No        414.37s
(119, 115)True    88,46,851     89,44,919     2.87s       solved        No        417.34s

**********************************Final best results******************************************

Water Network: d9_HG_SP_4_2
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,48       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,89       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,109      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,12       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_4,18       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_5,58       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,114      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_6,10       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,34       |                   -0 |           5.6e-07    |
+-----------------+----------------------+----------------------+
| con2_8,78       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,22       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,29       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,59       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_10,72      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_11,48      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_11,52      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_12,22      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_13,45      |                   -0 |           1e-06      |
+-----------------+----------------------+----------------------+
| con2_14,97      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_15,128     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_16,110     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_17,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_17,83      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_18,23      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_19,84      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,18      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,50      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_21,68      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_21,130     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_22,135     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_23,65      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,8       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,36      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,99      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_25,49      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_26,16      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_27,14      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_27,65      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_27,94      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_28,111     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_29,103     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_30,38      |                   -0 |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_31,37      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_31,104     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,58      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,67      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_33,45      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_34,78      |                   -0 |           9e-08      |
+-----------------+----------------------+----------------------+
| con2_35,44      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_35,85      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_36,75      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,76      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_38,130     |                   -0 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_39,17      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_40,43      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_41,17      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_41,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_42,36      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_42,69      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_43,10      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_44,66      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_45,125     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_46,64      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_47,53      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_47,91      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_48,52      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_49,33      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,4       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_51,28      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,81      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_53,63      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_53,91      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_54,93      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_55,77      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_55,97      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_55,100     |                   -0 |          -0.00057181 |
+-----------------+----------------------+----------------------+
| con2_56,54      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_56,90      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_57,31      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,60      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_59,126     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,32      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,57      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,74      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_61,93      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_62,42      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_63,87      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_64,91      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_65,96      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_66,85      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_67,16      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,20      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_68,94      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_69,106     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_70,87      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_71,9       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_71,119     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,62      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_73,28      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_73,32      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_74,26      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_74,67      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_75,42      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_75,101     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_76,5       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,59      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_76,126     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_77,57      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_78,47      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_78,53      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_79,71      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,6       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_80,10      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_81,104     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_82,80      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_83,39      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_83,40      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_84,123     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_85,6       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_85,43      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_86,28      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_86,58      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_87,77      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_88,114     |                   -0 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_89,80      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_89,109     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_90,1       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_91,87      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_92,111     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_93,19      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_94,129     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_95,51      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_95,73      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_96,47      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_97,100     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_98,118     |                   -0 |           3.3e-07    |
+-----------------+----------------------+----------------------+
| con2_99,63      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_100,46     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_101,24     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_101,70     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_102,35     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,134    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,51     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,95     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_104,101    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_105,103    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_105,108    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_106,75     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_107,116    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_108,95     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_109,52     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_109,82     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_110,14     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_110,49     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,86     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_111,114    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,29     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,105    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,108    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_113,2      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_114,92     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_115,22     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_115,138    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,142    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_117,79     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_119,115    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_120,39     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_121,128    |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,107    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_123,50     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_124,121    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_125,1      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_125,49     |                   -0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_126,11     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_126,104    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_127,136    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_128,112    |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,21     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_130,61     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_130,93     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_131,102    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_132,133    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_133,41     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_134,141    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,59     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,113    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_136,141    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_137,143    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_138,3      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_139,134    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_140,121    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_141,102    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_142,15     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_143,79     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_143,117    |                   -0 |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.0889506469057228e-10
Total relative constraint violation: 0.0005739302578234684
*******************************************************************************

Final best objective: 8846850.523243435
Number of nlp problem solved: 84
Total number of iteration: 8
Solver_time: 410.23 seconds
Heuristic elapsed time: 417.36 seconds

