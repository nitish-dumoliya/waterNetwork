Water Network: d9_HG_SP_4_2 

Testing bound_push=0.0007699691760957199, bound_frac=0.004184415370998549
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007699691760957199
bound_frac: 0.004184415370998549
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007699691760957199
bound_frac = 0.004184415370998549
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9040185.333989682
Testing bound_push=0.0004073489102844837, bound_frac=0.0016755834885424886
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004073489102844837
bound_frac: 0.0016755834885424886
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004073489102844837
bound_frac = 0.0016755834885424886
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9033255.174037792
Testing bound_push=0.0009180400597538362, bound_frac=0.006957103137716464
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0009180400597538362
bound_frac: 0.006957103137716464
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009180400597538362
bound_frac = 0.006957103137716464
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8988620.00635221
Testing bound_push=0.0002565393114276315, bound_frac=0.0040026248203647585
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002565393114276315
bound_frac: 0.0040026248203647585
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002565393114276315
bound_frac = 0.0040026248203647585
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019926.398246173
Testing bound_push=9.748464500745712e-06, bound_frac=0.0011254075399988722
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 9.748464500745712e-06
bound_frac: 0.0011254075399988722
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.748464500745712e-06
bound_frac = 0.0011254075399988722
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8978493.024761587
Testing bound_push=0.000124239253811392, bound_frac=0.003301170111071951
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.000124239253811392
bound_frac: 0.003301170111071951
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000124239253811392
bound_frac = 0.003301170111071951
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9032266.511847187
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=0.00018638850162464807, bound_frac=0.0038614993602363794
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00018638850162464807
bound_frac: 0.0038614993602363794
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018638850162464807
bound_frac = 0.0038614993602363794
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9021047.391513614
Testing bound_push=1e-06, bound_frac=0.006670015125240029
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.006670015125240029
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.006670015125240029
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=0.00019887190193217558, bound_frac=0.005861143865625666
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00019887190193217558
bound_frac: 0.005861143865625666
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00019887190193217558
bound_frac = 0.005861143865625666
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9014641.97658164
Testing bound_push=1e-06, bound_frac=0.0020947108640709576
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0020947108640709576
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0020947108640709576
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=1e-06, bound_frac=0.0021616200073775503
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0021616200073775503
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0021616200073775503
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=1e-06, bound_frac=0.005978928367997103
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.005978928367997103
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.005978928367997103
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=0.00015852180120692316, bound_frac=0.004337718185698648
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00015852180120692316
bound_frac: 0.004337718185698648
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00015852180120692316
bound_frac = 0.004337718185698648
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9973028.11106039
Testing bound_push=1e-06, bound_frac=0.001304742042811453
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.001304742042811453
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.001304742042811453
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=1e-06, bound_frac=0.0005235092312825517
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0005235092312825517
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0005235092312825517
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=1e-06, bound_frac=0.0023410107355656307
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0023410107355656307
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0023410107355656307
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=1e-06, bound_frac=0.002501300256620926
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.002501300256620926
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.002501300256620926
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=9.199646139806978e-05, bound_frac=0.0020252427417493295
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 9.199646139806978e-05
bound_frac: 0.0020252427417493295
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.199646139806978e-05
bound_frac = 0.0020252427417493295
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9007881.01589067
Testing bound_push=1e-06, bound_frac=0.0012801522449358638
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0012801522449358638
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0012801522449358638
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Testing bound_push=0.00014567432392717178, bound_frac=0.001301494741950947
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00014567432392717178
bound_frac: 0.001301494741950947
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00014567432392717178
bound_frac = 0.001301494741950947
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9024470.446925363
Testing bound_push=2.191559413999978e-05, bound_frac=0.0036503808256701537
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 2.191559413999978e-05
bound_frac: 0.0036503808256701537
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.191559413999978e-05
bound_frac = 0.0036503808256701537
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8978493.024720887
Testing bound_push=4.8480475838507204e-05, bound_frac=0.0012565666275967955
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 4.8480475838507204e-05
bound_frac: 0.0012565666275967955
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.8480475838507204e-05
bound_frac = 0.0012565666275967955
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8978320.821472064
Testing bound_push=6.9563614833071606e-06, bound_frac=0.0006662259567442313
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 6.9563614833071606e-06
bound_frac: 0.0006662259567442313
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.9563614833071606e-06
bound_frac = 0.0006662259567442313
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8951544.722531477
Testing bound_push=2.262088931597109e-05, bound_frac=0.0014435811782174282
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 2.262088931597109e-05
bound_frac: 0.0014435811782174282
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.262088931597109e-05
bound_frac = 0.0014435811782174282
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8994264.234077087
Testing bound_push=0.00018920446378816434, bound_frac=0.0016782418185220267
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00018920446378816434
bound_frac: 0.0016782418185220267
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018920446378816434
bound_frac = 0.0016782418185220267
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059774.290270971
Testing bound_push=3.110777424709212e-05, bound_frac=0.003841460492131647
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 3.110777424709212e-05
bound_frac: 0.003841460492131647
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 3.110777424709212e-05
bound_frac = 0.003841460492131647
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8959842.549251873
Testing bound_push=7.144462806515993e-05, bound_frac=0.0005010897320465869
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 7.144462806515993e-05
bound_frac: 0.0005010897320465869
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 7.144462806515993e-05
bound_frac = 0.0005010897320465869
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980893.915427351
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9059731.900515206
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 6.9563614833071606e-06
bound_frac: 0.0006662259567442313
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.9563614833071606e-06
bound_frac = 0.0006662259567442313
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  8951544.722531477
Solve_result:  limit
Solve_time: 6.9108870000000024 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 84, 42, 74, 111, 58, 50, 68, 65, 57, 23, 101, 6, 86, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 138)True    89,51,545     91,71,717     0.46s       solved        No        156.06s
(117, 143)True    89,51,545     92,66,912     0.41s       infeasible    No        156.55s
(141, 134)True    89,51,545     89,74,878     0.12s       solved        No        156.75s
(11, 126) True    89,51,545     89,56,327     0.18s       solved        No        157.01s
(59, 135) True    89,51,545     91,86,558     1.53s       limit         No        158.61s
(41, 17)  True    89,51,545     90,37,296     0.17s       solved        No        158.85s
(56, 54)  True    89,51,545     1,06,27,024   1.52s       limit         No        160.45s
(105, 112)True    89,51,545     94,61,854     1.5s        limit         No        162.02s
(29, 9)   True    89,51,545     90,31,390     1.0s        solved        No        163.1s
(39, 83)  True    89,51,545     91,97,142     0.22s       solved        No        163.39s
(44, 35)  True    89,51,545     90,70,770     0.21s       infeasible    No        163.68s
(126, 59) True    89,51,545     90,36,189     0.24s       solved        No        163.99s
(61, 93)  True    89,51,545     89,53,447     0.21s       solved        No        164.25s
(103, 105)True    89,51,545     88,66,867     0.26s       solved        Yes       164.59s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 84, 42, 74, 111, 28, 58, 50, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(82, 109) True    88,66,867     88,64,027     0.25s       solved        Yes       164.94s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [123, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 82, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 123) True    88,64,027     88,50,545     0.22s       solved        Yes       165.27s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 123]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 50, 18, 68, 65, 57, 23, 101, 6, 24, 36, 53, 91, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(6, 85)   True    88,50,545     93,91,303     0.84s       solved        No        166.2s
(5, 76)   True    88,50,545     94,63,190     1.29s       solved        No        167.56s
(109, 89) True    88,50,545     88,50,438     0.15s       solved        Yes       167.79s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 123, 85, 76, 89]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(40, 43)  True    88,50,438     1,15,00,392   1.59s       limit         No        169.48s
(101, 104)True    88,50,438     88,80,252     0.49s       solved        No        170.05s
(109, 2)  True    88,50,438     88,64,201     0.22s       solved        No        170.35s
(51, 103) True    88,50,438     97,25,616     1.5s        limit         No        171.92s
(92, 114) True    88,50,438     88,52,482     0.17s       solved        No        172.17s
(28, 51)  True    88,50,438     88,92,104     0.19s       solved        No        172.44s
(114, 5)  True    88,50,438     88,52,416     0.14s       solved        No        172.65s
(74, 60)  True    88,50,438     1,46,98,747   1.55s       limit         No        174.28s
(25, 49)  True    88,50,438     1,41,21,361   1.54s       limit         No        175.89s
(36, 42)  True    88,50,438     1,11,49,010   1.16s       infeasible    No        177.13s
(26, 74)  True    88,50,438     1,24,09,250   1.53s       limit         No        178.73s
(28, 111) True    88,50,438     88,48,803     0.16s       solved        Yes       178.97s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 123, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [28, 58, 18, 68, 65, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(73, 28)  True    88,48,803     88,50,935     0.13s       solved        No        179.21s
(60, 58)  True    88,48,803     94,91,733     1.56s       limit         No        180.82s
(4, 18)   True    88,48,803     88,47,560     0.13s       solved        Yes       181.03s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 123, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [68, 65, 77, 57, 23, 37, 101, 6, 24, 4, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(21, 68)  True    88,47,560     88,49,967     0.12s       solved        No        181.26s
(23, 65)  True    88,47,560     88,52,402     0.14s       solved        No        181.47s
(87, 77)  True    88,47,560     88,47,200     0.14s       solved        Yes       181.68s

visited_nodes: [138, 143, 134, 126, 135, 17, 54, 112, 9, 83, 35, 59, 93, 105, 109, 123, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(77, 57)  True    88,47,200     89,26,898     0.2s        solved        No        181.99s
(18, 23)  True    88,47,200     88,50,014     0.13s       solved        No        182.17s
(31, 37)  True    88,47,200     88,66,811     0.15s       solved        No        182.4s
(70, 101) True    88,47,200     89,62,917     1.39s       solved        No        183.88s
(80, 6)   True    88,47,200     88,51,041     0.14s       solved        No        184.09s
(99, 24)  True    88,47,200     95,72,535     1.48s       limit         No        185.65s
(75, 36)  True    88,47,200     88,50,107     0.15s       solved        No        185.88s
(96, 47)  True    88,47,200     89,76,251     0.4s        solved        No        186.35s
(47, 53)  True    88,47,200     88,51,342     0.13s       solved        No        186.56s
(55, 100) True    88,47,200     88,47,589     0.14s       solved        No        186.77s
(53, 78)  True    88,47,200     88,48,017     0.13s       solved        No        186.95s
(91, 87)  True    88,47,200     89,60,881     0.94s       solved        No        187.97s
(48, 11)  True    88,47,200     88,47,968     0.27s       solved        No        188.32s
(87, 63)  True    88,47,200     88,67,098     0.95s       solved        No        189.34s
(119, 115)True    88,47,200     89,26,969     0.17s       solved        No        189.59s

**********************************Final best results******************************************

Water Network: d9_HG_SP_4_2
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,48       |                1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_2,89       |                1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_2,109      |                0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_3,12       |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_4,18       |               -1e-08 |          -0.00010518 |
+-----------------+----------------------+----------------------+
| con2_5,58       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,114      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_6,10       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_7,34       |                0     |          -0.00458211 |
+-----------------+----------------------+----------------------+
| con2_8,78       |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_9,22       |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_9,29       |                2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,59       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,72      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_11,48      |                0     |          -8.5e-07    |
+-----------------+----------------------+----------------------+
| con2_11,52      |                0     |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_12,22      |                2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_13,45      |                0     |          -0.00769326 |
+-----------------+----------------------+----------------------+
| con2_14,97      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,128     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_16,110     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_17,54      |                3e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_17,83      |               -2e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_18,23      |               -0     |          -1.24e-06   |
+-----------------+----------------------+----------------------+
| con2_19,84      |               -1e-08 |          -2.384e-05  |
+-----------------+----------------------+----------------------+
| con2_20,18      |               -1e-08 |          -1.28e-06   |
+-----------------+----------------------+----------------------+
| con2_20,23      |               -1e-08 |          -7.8e-07    |
+-----------------+----------------------+----------------------+
| con2_20,50      |               -1e-08 |          -9.5e-07    |
+-----------------+----------------------+----------------------+
| con2_21,68      |               -0     |          -2.6e-06    |
+-----------------+----------------------+----------------------+
| con2_21,130     |               -2e-08 |          -3e-07      |
+-----------------+----------------------+----------------------+
| con2_22,135     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_23,65      |               -1e-08 |          -2.6e-07    |
+-----------------+----------------------+----------------------+
| con2_24,8       |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_24,36      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_24,99      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_25,49      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,16      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,14      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_27,65      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_27,94      |               -1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_28,111     |               -0     |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_29,103     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_30,38      |                1e-08 |          -0.00062002 |
+-----------------+----------------------+----------------------+
| con2_31,37      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_31,104     |               -1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_32,58      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_32,67      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_33,45      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_34,78      |                0     |          -0.00082113 |
+-----------------+----------------------+----------------------+
| con2_35,44      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,85      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,75      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_37,5       |                0     |          -8e-07      |
+-----------------+----------------------+----------------------+
| con2_37,76      |               -1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_38,130     |                0     |          -0.00013528 |
+-----------------+----------------------+----------------------+
| con2_39,17      |                0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_40,43      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_41,17      |               -4e-08 |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_41,54      |                3e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_42,36      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,69      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_43,10      |                1e-08 |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_44,66      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_45,125     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_46,64      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_47,53      |               -0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_47,91      |                0     |          -1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_48,52      |                0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_49,33      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,4       |               -1e-08 |          -4.235e-05  |
+-----------------+----------------------+----------------------+
| con2_51,28      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_52,81      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_53,63      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_53,91      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_54,93      |                2e-08 |          -1.878e-05  |
+-----------------+----------------------+----------------------+
| con2_55,77      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,97      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,100     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_56,54      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_56,90      |                3e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_57,31      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,60      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_59,126     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,32      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_60,57      |               -1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_60,74      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_61,93      |               -1e-08 |          -7.53e-06   |
+-----------------+----------------------+----------------------+
| con2_62,42      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_63,87      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_64,91      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,96      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_66,85      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_67,16      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,20      |               -1e-08 |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_68,94      |                1e-08 |          -1.4e-07    |
+-----------------+----------------------+----------------------+
| con2_69,106     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_70,87      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,9       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_71,119     |               -3e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_72,62      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_73,28      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_73,32      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_74,26      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_74,67      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,42      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,101     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,5       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,59      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_76,126     |               -1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_77,57      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_78,47      |                0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_78,53      |                0     |          -1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_79,71      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,6       |               -0     |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_80,10      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_81,104     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_82,80      |                1e-08 |          -9e-08      |
+-----------------+----------------------+----------------------+
| con2_83,39      |                2e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_83,40      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_84,123     |               -2e-08 |          -9.681e-05  |
+-----------------+----------------------+----------------------+
| con2_85,6       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_85,43      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_86,28      |               -0     |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_86,58      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_87,77      |                0     |           0.235361   |
+-----------------+----------------------+----------------------+
| con2_88,114     |                1e-08 |          -0.00047881 |
+-----------------+----------------------+----------------------+
| con2_89,80      |                2e-08 |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_89,109     |                0     |          -5.5e-07    |
+-----------------+----------------------+----------------------+
| con2_90,1       |                2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_91,87      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_92,111     |                0     |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_93,19      |               -1e-08 |          -1.132e-05  |
+-----------------+----------------------+----------------------+
| con2_94,129     |               -0     |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_95,51      |               -1e-08 |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_95,73      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_96,47      |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_97,100     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_98,118     |                1e-08 |          -0.00282487 |
+-----------------+----------------------+----------------------+
| con2_99,63      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_100,46     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_101,24     |                0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_101,70     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,35     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,134    |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,51     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,95     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_104,101    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_105,103    |                0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_105,108    |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_106,75     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_107,116    |                1e-08 |          -1.67e-06   |
+-----------------+----------------------+----------------------+
| con2_108,95     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_109,52     |                1e-08 |          -6e-08      |
+-----------------+----------------------+----------------------+
| con2_109,82     |                1e-08 |          -1e-07      |
+-----------------+----------------------+----------------------+
| con2_110,14     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_110,49     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,86     |                0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_111,114    |               -0     |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_112,29     |                2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_112,105    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_112,108    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_113,2      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_114,92     |                0     |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_115,22     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_115,138    |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,142    |                0     |          -4.8e-07    |
+-----------------+----------------------+----------------------+
| con2_117,79     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |                3e-08 |          -2.06e-06   |
+-----------------+----------------------+----------------------+
| con2_119,115    |               -0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_120,39     |                1e-08 |          -2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_121,128    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,107    |                1e-08 |          -2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_123,50     |                1e-08 |          -1.62e-06   |
+-----------------+----------------------+----------------------+
| con2_124,121    |                3e-08 |          -5.5e-07    |
+-----------------+----------------------+----------------------+
| con2_125,1      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_125,49     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_126,11     |                0     |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_126,104    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_127,136    |                6e-08 |          -9e-08      |
+-----------------+----------------------+----------------------+
| con2_128,112    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,21     |               -0     |          -1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_130,61     |               -0     |          -5.76e-06   |
+-----------------+----------------------+----------------------+
| con2_130,93     |               -1e-08 |          -6.81e-06   |
+-----------------+----------------------+----------------------+
| con2_131,102    |                2e-08 |          -6.27e-06   |
+-----------------+----------------------+----------------------+
| con2_132,133    |                2e-08 |          -2.42e-06   |
+-----------------+----------------------+----------------------+
| con2_133,41     |                1e-08 |          -4.2e-07    |
+-----------------+----------------------+----------------------+
| con2_134,141    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_135,59     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_135,113    |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_136,141    |                1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_137,143    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_138,3      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_139,134    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_140,121    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,102    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_142,15     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_143,79     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_143,117    |                0     |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.0825134977050914e-06
Total relative constraint violation: 0.2528672404396215
*******************************************************************************

Final best objective: 8847199.826141484
Number of nlp problem solved: 83
Total number of iteration: 8
Solver_time: 184.86 seconds
Heuristic elapsed time: 189.61 seconds

