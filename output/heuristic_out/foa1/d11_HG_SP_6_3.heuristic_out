Water Network: d11_HG_SP_6_3 

Testing bound_push=0.0001466756069698534, bound_frac=0.0002792040653486875
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0001466756069698534
bound_frac: 0.0002792040653486875
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001466756069698534
bound_frac = 0.0002792040653486875
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.62187974
Testing bound_push=0.0002378634327844016, bound_frac=0.00945903044082331
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0002378634327844016
bound_frac: 0.00945903044082331
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002378634327844016
bound_frac = 0.00945903044082331
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11278068.232063375
Testing bound_push=0.0008184238545538827, bound_frac=0.006479477429975239
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008184238545538827
bound_frac: 0.006479477429975239
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008184238545538827
bound_frac = 0.006479477429975239
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10946762.566980246
Testing bound_push=0.0007077956034250699, bound_frac=0.0007316505686451702
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007077956034250699
bound_frac: 0.0007316505686451702
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007077956034250699
bound_frac = 0.0007316505686451702
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10961393.359566987
Testing bound_push=0.0007798441990209367, bound_frac=0.007300078763437758
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007798441990209367
bound_frac: 0.007300078763437758
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007798441990209367
bound_frac = 0.007300078763437758
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.37155268
Testing bound_push=0.00029171152351918053, bound_frac=0.007241706853840558
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00029171152351918053
bound_frac: 0.007241706853840558
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029171152351918053
bound_frac = 0.007241706853840558
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11268149.78420985
Testing bound_push=0.0008002722538027763, bound_frac=0.005596313060955227
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008002722538027763
bound_frac: 0.005596313060955227
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008002722538027763
bound_frac = 0.005596313060955227
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11686972.878705416
Testing bound_push=0.0006461512173640873, bound_frac=0.009094429958366332
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006461512173640873
bound_frac: 0.009094429958366332
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006461512173640873
bound_frac = 0.009094429958366332
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371552592
Testing bound_push=0.00048532414217648356, bound_frac=0.005171544062712439
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00048532414217648356
bound_frac: 0.005171544062712439
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00048532414217648356
bound_frac = 0.005171544062712439
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617806187
Testing bound_push=0.0007171991459680292, bound_frac=0.007015181546015604
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007171991459680292
bound_frac: 0.007015181546015604
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007171991459680292
bound_frac = 0.007015181546015604
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10938254.102567995
Testing bound_push=0.0005376130758118854, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005376130758118854
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005376130758118854
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.617805278
Testing bound_push=0.0008377831122618295, bound_frac=0.005077928537857692
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008377831122618295
bound_frac: 0.005077928537857692
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008377831122618295
bound_frac = 0.005077928537857692
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10928334.509613398
Testing bound_push=0.0006258355688608983, bound_frac=0.008865976448839116
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006258355688608983
bound_frac: 0.008865976448839116
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006258355688608983
bound_frac = 0.008865976448839116
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926639.851537427
Testing bound_push=0.00045609202572605037, bound_frac=0.008173749938196648
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00045609202572605037
bound_frac: 0.008173749938196648
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00045609202572605037
bound_frac = 0.008173749938196648
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.61782634
Testing bound_push=0.0007129092167508541, bound_frac=0.006978866732915153
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007129092167508541
bound_frac: 0.006978866732915153
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007129092167508541
bound_frac = 0.006978866732915153
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371552663
Testing bound_push=0.00065154949919958, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00065154949919958
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00065154949919958
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10938040.04096474
Testing bound_push=0.0007899786771098328, bound_frac=0.006414452634850168
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007899786771098328
bound_frac: 0.006414452634850168
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007899786771098328
bound_frac = 0.006414452634850168
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10778758.38911993
Testing bound_push=0.0006839171465507972, bound_frac=0.008303843079862455
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006839171465507972
bound_frac: 0.008303843079862455
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006839171465507972
bound_frac = 0.008303843079862455
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371549074
Testing bound_push=0.0006192912981573342, bound_frac=0.00885394779983357
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006192912981573342
bound_frac: 0.00885394779983357
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006192912981573342
bound_frac = 0.00885394779983357
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10927740.318431515
Testing bound_push=0.000714658920414488, bound_frac=0.006727352981832125
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000714658920414488
bound_frac: 0.006727352981832125
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000714658920414488
bound_frac = 0.006727352981832125
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371550597
Testing bound_push=0.0007650851361730368, bound_frac=0.009927080265288827
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007650851361730368
bound_frac: 0.009927080265288827
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007650851361730368
bound_frac = 0.009927080265288827
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11285399.69637458
Testing bound_push=0.0007660764595338345, bound_frac=0.007082714683346406
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007660764595338345
bound_frac: 0.007082714683346406
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007660764595338345
bound_frac = 0.007082714683346406
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11373912.259970082
Testing bound_push=0.0006925669881526032, bound_frac=0.007689135310742627
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006925669881526032
bound_frac: 0.007689135310742627
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006925669881526032
bound_frac = 0.007689135310742627
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371622862
Testing bound_push=0.0007080031131631236, bound_frac=0.00850254720792044
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007080031131631236
bound_frac: 0.00850254720792044
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007080031131631236
bound_frac = 0.00850254720792044
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371587476
Testing bound_push=0.0007488590116799262, bound_frac=0.00651316127463101
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007488590116799262
bound_frac: 0.00651316127463101
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007488590116799262
bound_frac = 0.00651316127463101
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926470.573156932
Testing bound_push=0.000821528883738192, bound_frac=0.009058859282188065
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000821528883738192
bound_frac: 0.009058859282188065
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000821528883738192
bound_frac = 0.009058859282188065
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.375648672
Testing bound_push=0.0007623577277645718, bound_frac=0.007186978477029758
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007623577277645718
bound_frac: 0.007186978477029758
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007623577277645718
bound_frac = 0.007186978477029758
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10777710.166045379
Testing bound_push=0.0006931646684697247, bound_frac=0.007564454995243195
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006931646684697247
bound_frac: 0.007564454995243195
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006931646684697247
bound_frac = 0.007564454995243195
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.371536566
Testing bound_push=0.0007334411754057076, bound_frac=0.008315305049364907
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007334411754057076
bound_frac: 0.008315305049364907
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007334411754057076
bound_frac = 0.008315305049364907
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10937817.304556523
Testing bound_push=0.0007694269546751121, bound_frac=0.006509622870470416
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007694269546751121
bound_frac: 0.006509622870470416
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007694269546751121
bound_frac = 0.006509622870470416
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926470.577257773
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007623577277645718
bound_frac: 0.007186978477029758
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007623577277645718
bound_frac = 0.007186978477029758
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  10777710.166045379
Solve_result:  solved
Solve_time: 9.283317000000011 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 124, 30, 131, 35, 65, 32, 72, 2, 93, 19, 113, 55, 100, 45, 14, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 165) True    1,07,77,710   1,42,14,682   3.45s       limit         No        238.63s
(136, 166)True    1,07,77,710   1,60,84,588   3.7s        limit         No        242.44s
(140, 136)True    1,07,77,710   1,53,67,640   3.58s       limit         No        246.13s
(141, 140)True    1,07,77,710   1,11,56,932   1.19s       solved        No        247.42s
(8, 141)  True    1,07,77,710   1,08,97,510   1.11s       solved        No        248.62s
(69, 70)  True    1,07,77,710   1,16,58,867   2.76s       infeasible    No        251.7s
(128, 115)True    1,07,77,710   1,54,85,055   3.53s       limit         No        255.59s
(119, 114)True    1,07,77,710   1,52,16,811   3.36s       limit         No        259.04s
(22, 87)  True    1,07,77,710   1,48,33,399   3.69s       limit         No        262.84s
(107, 85) True    1,07,77,710   1,18,54,002   2.35s       solved        No        265.3s
(147, 37) True    1,07,77,710   1,08,05,031   0.65s       solved        No        266.04s
(47, 124) True    1,07,77,710   1,76,68,586   3.66s       limit         No        269.86s
(105, 30) True    1,07,77,710   1,08,15,300   1.04s       solved        No        271.0s
(56, 131) True    1,07,77,710   1,11,61,783   2.11s       infeasible    No        273.41s
(48, 35)  True    1,07,77,710   1,44,78,339   3.59s       limit         No        277.14s
(75, 65)  True    1,07,77,710   1,13,53,559   1.45s       infeasible    No        278.75s
(111, 32) True    1,07,77,710   1,14,54,360   3.33s       limit         No        282.18s
(129, 72) True    1,07,77,710   1,41,76,779   3.46s       limit         No        285.8s
(18, 2)   True    1,07,77,710   1,13,31,242   1.54s       infeasible    No        287.44s
(74, 93)  True    1,07,77,710   1,07,59,111   0.49s       solved        Yes       288.07s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 124, 30, 131, 35, 65, 32, 72, 2, 93]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [19, 74, 113, 55, 100, 45, 14, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(68, 19)  True    1,07,59,111   1,08,31,778   0.72s       solved        No        289.05s
(93, 74)  True    1,07,59,111   1,07,35,695   0.44s       solved        Yes       289.69s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 124, 30, 131, 35, 65, 32, 72, 2, 93, 19, 74]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [113, 55, 100, 45, 14, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(100, 113)True    1,07,35,695   1,20,64,678   3.77s       limit         No        293.6s
(76, 55)  True    1,07,35,695   1,07,63,333   0.89s       solved        No        294.6s
(144, 100)True    1,07,35,695   1,10,17,148   1.46s       solved        No        296.17s
(6, 45)   True    1,07,35,695   1,07,83,447   1.63s       solved        No        297.9s
(62, 14)  True    1,07,35,695   1,44,28,371   3.35s       limit         No        301.36s
(116, 60) True    1,07,35,695   1,07,38,596   1.23s       solved        No        302.69s
(84, 88)  True    1,07,35,695   1,12,03,118   2.97s       limit         No        305.8s
(79, 6)   True    1,07,35,695   1,08,07,685   1.05s       solved        No        306.96s

**********************************Final best results******************************************

Water Network: d11_HG_SP_6_3
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_2,18       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_3,111      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_4,43       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_5,89       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_6,101      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_7,39       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_8,85       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_9,92       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_10,126     |                   -0 |             4e-08    |
+-----------------+----------------------+----------------------+
| con2_11,59      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_12,125     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_13,66      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_14,149     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_15,103     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_16,96      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_17,152     |                   -0 |             1.9e-07  |
+-----------------+----------------------+----------------------+
| con2_18,96      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_19,68      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_20,115     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_21,121     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_22,2       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_23,94      |                   -0 |             2.1e-07  |
+-----------------+----------------------+----------------------+
| con2_24,26      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_25,65      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_26,116     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_27,159     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_27,165     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_28,135     |                   -0 |             3e-08    |
+-----------------+----------------------+----------------------+
| con2_29,43      |                   -0 |             2e-08    |
+-----------------+----------------------+----------------------+
| con2_30,77      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_30,105     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_31,83      |                   -0 |             6e-08    |
+-----------------+----------------------+----------------------+
| con2_32,3       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_32,41      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_33,114     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_34,11      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_35,48      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_36,154     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_37,7       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_37,147     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_38,30      |                   -0 |             2.02e-06 |
+-----------------+----------------------+----------------------+
| con2_39,1       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_40,62      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_41,19      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_42,146     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_43,158     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_44,79      |                   -0 |             3.5e-07  |
+-----------------+----------------------+----------------------+
| con2_45,6       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_45,101     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_46,133     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_47,93      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_48,117     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_49,25      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_50,44      |                   -0 |             3.59e-06 |
+-----------------+----------------------+----------------------+
| con2_51,42      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_52,118     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_53,35      |                   -0 |             1.2e-07  |
+-----------------+----------------------+----------------------+
| con2_54,92      |                   -0 |             8.1e-07  |
+-----------------+----------------------+----------------------+
| con2_55,10      |                   -0 |             3.3e-07  |
+-----------------+----------------------+----------------------+
| con2_56,112     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_57,16      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_58,91      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_59,40      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_60,97      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_60,100     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_61,34      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_61,153     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_62,14      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_63,33      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_63,120     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_64,155     |                   -0 |             1e-07    |
+-----------------+----------------------+----------------------+
| con2_65,49      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_65,75      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_66,132     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_67,13      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_68,30      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_69,70      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_69,131     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_70,73      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_71,73      |                   -0 |             4.7e-07  |
+-----------------+----------------------+----------------------+
| con2_72,7       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_73,131     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_74,72      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_74,93      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_75,49      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_76,55      |                    0 |             9e-08    |
+-----------------+----------------------+----------------------+
| con2_76,108     |                   -0 |             2e-08    |
+-----------------+----------------------+----------------------+
| con2_77,35      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_78,99      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_78,141     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_79,6       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_80,106     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_81,15      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_82,83      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_82,115     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_83,123     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_84,88      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_85,87      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_86,3       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_87,22      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_87,36      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_88,145     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_89,67      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_90,88      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_91,74      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_92,113     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_93,72      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_94,15      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_94,150     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_95,121     |                   -0 |             1e-07    |
+-----------------+----------------------+----------------------+
| con2_96,2       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_96,122     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_97,81      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_97,145     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_98,29      |                   -0 |             1.2e-07  |
+-----------------+----------------------+----------------------+
| con2_99,36      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_100,144    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_101,110    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_102,65     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_103,45     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_103,52     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_104,127    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_105,77     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_106,20     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_107,37     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_107,85     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_108,116    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_109,61     |                   -0 |             7.1e-07  |
+-----------------+----------------------+----------------------+
| con2_110,5      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_111,32     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_112,4      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_113,100    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_113,101    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_114,119    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_115,83     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_115,128    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_116,60     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_117,35     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_117,92     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_118,79     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_119,77     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_120,19     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_121,104    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_122,11     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_122,14     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_123,21     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_124,47     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_124,82     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_125,124    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_126,108    |                   -0 |             3e-08    |
+-----------------+----------------------+----------------------+
| con2_127,9      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_128,46     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_129,7      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_129,72     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_130,82     |                   -0 |             2.5e-07  |
+-----------------+----------------------+----------------------+
| con2_131,56     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_131,112    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_132,102    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_133,21     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_134,142    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_135,134    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_136,8      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_136,140    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_137,51     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_138,160    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_139,114    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_140,8      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_140,141    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_141,8      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_142,70     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_142,86     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_143,78     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_143,141    |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_144,45     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_145,26     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_146,86     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_147,58     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_148,27     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_148,166    |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_149,103    |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_150,84     |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_151,80     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_152,24     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_153,1      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_154,57     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_155,75     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_156,138    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_157,161    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_158,90     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_159,12     |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_160,151    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_161,162    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_162,139    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_163,12     |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_164,138    |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_165,164    |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_166,136    |                   -0 |             0        |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.024237495860508e-10
Total relative constraint violation: 9.68163687564985e-06
*******************************************************************************

Final best objective: 10735694.860449834
Number of nlp problem solved: 61
Total number of iteration: 3
Solver_time: 301.04 seconds
Heuristic elapsed time: 306.99 seconds

