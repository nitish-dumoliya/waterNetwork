Water Network: d11_HG_SP_6_3 

Testing bound_push=0.0009097027697683035, bound_frac=0.008620705025566855
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009097027697683035
bound_frac: 0.008620705025566855
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009097027697683035
bound_frac = 0.008620705025566855
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10930556.845978605
Testing bound_push=0.0005716790359496605, bound_frac=0.0073721135338489195
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005716790359496605
bound_frac: 0.0073721135338489195
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005716790359496605
bound_frac = 0.0073721135338489195
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679014.80583787
Testing bound_push=0.0009353353715427935, bound_frac=0.006345954168056131
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009353353715427935
bound_frac: 0.006345954168056131
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009353353715427935
bound_frac = 0.006345954168056131
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11829437.143615985
Testing bound_push=0.0004006531326400978, bound_frac=0.00115668265666868
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0004006531326400978
bound_frac: 0.00115668265666868
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004006531326400978
bound_frac = 0.00115668265666868
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11837075.496775322
Testing bound_push=0.0003926288427199933, bound_frac=0.009635646983387033
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0003926288427199933
bound_frac: 0.009635646983387033
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003926288427199933
bound_frac = 0.009635646983387033
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11710708.5099553
Testing bound_push=0.0007007965816671078, bound_frac=0.008755604562538745
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007007965816671078
bound_frac: 0.008755604562538745
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007007965816671078
bound_frac = 0.008755604562538745
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10952687.904655457
Testing bound_push=0.001, bound_frac=0.004502891710938849
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.004502891710938849
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.004502891710938849
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11021000.219415324
Testing bound_push=0.0009099817785739043, bound_frac=0.006370827409843447
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009099817785739043
bound_frac: 0.006370827409843447
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009099817785739043
bound_frac = 0.006370827409843447
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11763558.473093638
Testing bound_push=0.00027921795727684103, bound_frac=1e-06
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00027921795727684103
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027921795727684103
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11686972.88111391
Testing bound_push=0.0005118435047269201, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005118435047269201
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005118435047269201
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.624345716
Testing bound_push=0.0007545735275618199, bound_frac=0.008734866184219226
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007545735275618199
bound_frac: 0.008734866184219226
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007545735275618199
bound_frac = 0.008734866184219226
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.376790216
Testing bound_push=0.001, bound_frac=0.003483384100600502
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.003483384100600502
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.003483384100600502
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11021000.219415324
Testing bound_push=0.0008973005526381075, bound_frac=0.006689245219742581
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008973005526381075
bound_frac: 0.006689245219742581
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008973005526381075
bound_frac = 0.006689245219742581
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10786728.635737095
Testing bound_push=0.0003399315256330832, bound_frac=0.0003571791443495214
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0003399315256330832
bound_frac: 0.0003571791443495214
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003399315256330832
bound_frac = 0.0003571791443495214
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679016.943397634
Testing bound_push=0.0005733982360917784, bound_frac=0.009934156017067517
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005733982360917784
bound_frac: 0.009934156017067517
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005733982360917784
bound_frac = 0.009934156017067517
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679014.809927013
Testing bound_push=0.0008955928698226863, bound_frac=0.008229940310692864
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008955928698226863
bound_frac: 0.008229940310692864
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008955928698226863
bound_frac = 0.008229940310692864
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Error in step computation.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10931172.309150241
Testing bound_push=0.001, bound_frac=0.004086966013006408
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.004086966013006408
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.004086966013006408
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11021000.219415324
Testing bound_push=0.0008909599396702091, bound_frac=0.006848454124692148
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008909599396702091
bound_frac: 0.006848454124692148
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008909599396702091
bound_frac = 0.006848454124692148
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10927576.953714103
Testing bound_push=0.0005668546186802182, bound_frac=0.0018971584562694557
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005668546186802182
bound_frac: 0.0018971584562694557
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005668546186802182
bound_frac = 0.0018971584562694557
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11829437.143651163
Testing bound_push=0.0007351378477219808, bound_frac=0.008359036485237304
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007351378477219808
bound_frac: 0.008359036485237304
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007351378477219808
bound_frac = 0.008359036485237304
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10747470.72091734
Testing bound_push=0.0009672325434642745, bound_frac=0.008068410703362382
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009672325434642745
bound_frac: 0.008068410703362382
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009672325434642745
bound_frac = 0.008068410703362382
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11682837.29928133
Testing bound_push=0.0009734881200503032, bound_frac=0.004604353975208168
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009734881200503032
bound_frac: 0.004604353975208168
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009734881200503032
bound_frac = 0.004604353975208168
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679014.805857494
Testing bound_push=0.0008482379324172605, bound_frac=0.00743934434909515
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008482379324172605
bound_frac: 0.00743934434909515
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008482379324172605
bound_frac = 0.00743934434909515
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10778758.389751337
Testing bound_push=0.0006794735846000341, bound_frac=0.0038377893520120535
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006794735846000341
bound_frac: 0.0038377893520120535
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006794735846000341
bound_frac = 0.0038377893520120535
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10902767.917563435
Testing bound_push=0.000816007653537082, bound_frac=0.007571476719322197
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000816007653537082
bound_frac: 0.007571476719322197
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000816007653537082
bound_frac = 0.007571476719322197
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10728802.148334127
Testing bound_push=0.0009737575376164956, bound_frac=0.008130094774262063
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009737575376164956
bound_frac: 0.008130094774262063
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009737575376164956
bound_frac = 0.008130094774262063
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11045495.93699039
Testing bound_push=0.0009044088222772696, bound_frac=0.00530712220964252
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009044088222772696
bound_frac: 0.00530712220964252
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009044088222772696
bound_frac = 0.00530712220964252
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10801750.795443203
Testing bound_push=0.000816318553242516, bound_frac=0.007794081044290486
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000816318553242516
bound_frac: 0.007794081044290486
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000816318553242516
bound_frac = 0.007794081044290486
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10801971.104543073
Testing bound_push=0.0008014436646189238, bound_frac=0.005354099261059448
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008014436646189238
bound_frac: 0.005354099261059448
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008014436646189238
bound_frac = 0.005354099261059448
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11710708.505815512
Testing bound_push=0.0008564425564446326, bound_frac=0.007177696836364643
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008564425564446326
bound_frac: 0.007177696836364643
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008564425564446326
bound_frac = 0.007177696836364643
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10959965.39901317
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000816007653537082
bound_frac: 0.007571476719322197
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000816007653537082
bound_frac = 0.007571476719322197
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  10728802.148334127
Solve_result:  solved
Solve_time: 3.052031999999997 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 82, 30, 131, 35, 65, 32, 72, 2, 93, 19, 113, 26, 55, 100, 45, 14, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 165) True    1,07,28,802   1,34,81,142   1.54s       limit         No        89.1s
(136, 166)True    1,07,28,802   1,50,56,087   1.48s       limit         No        90.66s
(140, 136)True    1,07,28,802   1,59,12,387   1.44s       limit         No        92.18s
(141, 140)True    1,07,28,802   1,12,68,373   0.45s       solved        No        92.71s
(8, 141)  True    1,07,28,802   1,08,64,335   0.39s       solved        No        93.18s
(69, 70)  True    1,07,28,802   1,12,67,875   1.44s       limit         No        94.7s
(128, 115)True    1,07,28,802   1,50,14,566   1.47s       limit         No        96.24s
(119, 114)True    1,07,28,802   1,55,63,232   1.18s       failure       No        97.47s
(22, 87)  True    1,07,28,802   1,41,82,352   1.43s       limit         No        98.98s
(87, 85)  True    1,07,28,802   1,08,49,141   0.36s       solved        No        99.41s
(147, 37) True    1,07,28,802   1,07,02,859   0.35s       solved        Yes       99.84s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 74, 113, 55, 100, 45, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(83, 82)  True    1,07,02,859   1,07,08,996   0.38s       solved        No        100.29s
(105, 30) True    1,07,02,859   1,07,87,185   1.05s       solved        No        101.42s
(56, 131) True    1,07,02,859   1,14,34,503   1.08s       infeasible    No        102.57s
(48, 35)  True    1,07,02,859   1,53,98,649   1.51s       limit         No        104.16s
(75, 65)  True    1,07,02,859   1,16,05,524   1.54s       limit         No        105.77s
(111, 32) True    1,07,02,859   1,09,35,339   0.62s       solved        No        106.47s
(129, 72) True    1,07,02,859   1,11,68,140   1.4s        limit         No        107.95s
(18, 2)   True    1,07,02,859   1,15,03,546   1.42s       limit         No        109.47s
(14, 122) True    1,07,02,859   1,07,12,099   0.23s       solved        No        109.78s
(74, 93)  True    1,07,02,859   1,07,19,480   0.25s       solved        No        110.11s
(68, 19)  True    1,07,02,859   1,07,87,270   0.24s       solved        No        110.43s
(72, 74)  True    1,07,02,859   1,07,28,894   0.66s       solved        No        111.17s
(100, 113)True    1,07,02,859   1,19,78,467   1.06s       solved        No        112.31s
(76, 55)  True    1,07,02,859   1,07,57,899   1.25s       limit         No        113.65s
(144, 100)True    1,07,02,859   1,10,00,729   0.57s       solved        No        114.3s
(6, 45)   True    1,07,02,859   1,07,74,251   0.25s       solved        No        114.63s
(116, 60) True    1,07,02,859   1,07,04,898   0.17s       solved        No        114.87s
(84, 88)  True    1,07,02,859   1,09,14,455   1.23s       solved        No        116.18s
(101, 6)  True    1,07,02,859   1,07,11,346   0.6s        solved        No        116.86s

**********************************Final best results******************************************

Water Network: d11_HG_SP_6_3
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_2,18       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,111      |               -1e-08 |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_4,43       |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_5,89       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_6,101      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_7,39       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,85       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,92       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_10,126     |                0     |          -0.00040266 |
+-----------------+----------------------+----------------------+
| con2_11,59      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,125     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_13,66      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_14,149     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_15,103     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_16,96      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_17,152     |                1e-08 |          -0.0016842  |
+-----------------+----------------------+----------------------+
| con2_18,96      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_19,68      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_20,115     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_21,121     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_22,2       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_23,94      |                1e-08 |          -0.00185004 |
+-----------------+----------------------+----------------------+
| con2_24,26      |                1e-08 |          -9.3e-06    |
+-----------------+----------------------+----------------------+
| con2_25,65      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_26,116     |               -0     |          -1.14e-06   |
+-----------------+----------------------+----------------------+
| con2_27,159     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,165     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_28,135     |                2e-08 |          -0.00027015 |
+-----------------+----------------------+----------------------+
| con2_29,43      |                0     |          -0.00018526 |
+-----------------+----------------------+----------------------+
| con2_30,77      |                1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_30,105     |                0     |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_31,83      |                1e-08 |          -0.00058582 |
+-----------------+----------------------+----------------------+
| con2_32,3       |                1e-08 |          -1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_32,41      |               -1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_33,114     |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_34,11      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_35,48      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,154     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_37,7       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_37,147     |               -1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_38,30      |                0     |          -0.0142647  |
+-----------------+----------------------+----------------------+
| con2_39,1       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_40,62      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_41,19      |               -0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_42,146     |                1e-08 |          -9.4e-07    |
+-----------------+----------------------+----------------------+
| con2_43,158     |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_44,79      |                0     |          -0.00294913 |
+-----------------+----------------------+----------------------+
| con2_45,6       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_45,101     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_46,133     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_47,93      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,117     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_49,25      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_50,44      |                0     |          -0.0231055  |
+-----------------+----------------------+----------------------+
| con2_51,42      |                1e-08 |          -1.23e-06   |
+-----------------+----------------------+----------------------+
| con2_52,118     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_53,35      |                1e-08 |          -0.00107417 |
+-----------------+----------------------+----------------------+
| con2_54,92      |                0     |          -0.00637287 |
+-----------------+----------------------+----------------------+
| con2_55,10      |                1e-08 |          -0.00283978 |
+-----------------+----------------------+----------------------+
| con2_56,112     |                1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_57,16      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_58,91      |               -0     |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_59,40      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_60,97      |                0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_60,100     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_61,34      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_61,153     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_62,14      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_63,33      |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_63,120     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,155     |                1e-08 |          -0.0009372  |
+-----------------+----------------------+----------------------+
| con2_65,49      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_65,75      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_66,132     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_67,13      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_68,30      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_69,70      |               -1e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_69,131     |                0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_70,73      |                1e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_71,73      |                0     |          -0.00391872 |
+-----------------+----------------------+----------------------+
| con2_72,7       |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_73,131     |                1e-08 |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_74,72      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_74,93      |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_75,49      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_76,55      |               -1e-08 |          -0.00082819 |
+-----------------+----------------------+----------------------+
| con2_76,108     |                0     |          -0.00022554 |
+-----------------+----------------------+----------------------+
| con2_77,35      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_78,99      |                4e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_78,141     |               -2e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_79,6       |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_80,106     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_81,15      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_82,83      |                0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_82,115     |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_83,123     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_84,88      |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_85,87      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_86,3       |               -1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_87,22      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_87,36      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_88,145     |                0     |          -7e-08      |
+-----------------+----------------------+----------------------+
| con2_89,67      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_90,88      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_91,74      |               -0     |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_92,113     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_93,72      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_94,15      |                1e-08 |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_94,150     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_95,121     |                1e-08 |          -0.00092811 |
+-----------------+----------------------+----------------------+
| con2_96,2       |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_96,122     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_97,81      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_97,145     |               -0     |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_98,29      |                1e-08 |          -0.00110868 |
+-----------------+----------------------+----------------------+
| con2_99,36      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_100,144    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_101,110    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_102,65     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,45     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_103,52     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_104,127    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_105,77     |                1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_106,20     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_107,37     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_107,85     |               -2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_108,116    |                0     |          -4.179e-05  |
+-----------------+----------------------+----------------------+
| con2_109,61     |                0     |          -0.00569666 |
+-----------------+----------------------+----------------------+
| con2_110,5      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_111,32     |               -0     |          -1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_112,4      |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_113,100    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_113,101    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_114,119    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_115,83     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_115,128    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_116,60     |               -0     |          -1.78e-06   |
+-----------------+----------------------+----------------------+
| con2_117,35     |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_117,92     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_118,79     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_119,77     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_120,19     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_121,104    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,11     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_122,14     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_123,21     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_124,47     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_124,82     |               -1e-08 |          -5e-08      |
+-----------------+----------------------+----------------------+
| con2_125,124    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_126,108    |                0     |          -0.00024339 |
+-----------------+----------------------+----------------------+
| con2_127,9      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_128,46     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_129,7      |                1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_129,72     |               -1e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_130,82     |                1e-08 |          -0.00218926 |
+-----------------+----------------------+----------------------+
| con2_131,56     |                1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_131,112    |                1e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_132,102    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_133,21     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_134,142    |                2e-08 |          -1.84e-06   |
+-----------------+----------------------+----------------------+
| con2_135,134    |                1e-08 |          -1.84e-06   |
+-----------------+----------------------+----------------------+
| con2_136,8      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_136,140    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_137,51     |                3e-08 |          -2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_138,160    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_139,114    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_140,8      |                2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_140,141    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_141,8      |                2e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_142,70     |                2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_142,86     |               -2e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_143,78     |                3e-08 |          -3e-08      |
+-----------------+----------------------+----------------------+
| con2_143,141    |               -5e-08 |          -5.4e-07    |
+-----------------+----------------------+----------------------+
| con2_144,45     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_145,26     |               -0     |          -5.8e-07    |
+-----------------+----------------------+----------------------+
| con2_146,86     |                1e-08 |          -1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_147,58     |               -0     |          -4e-08      |
+-----------------+----------------------+----------------------+
| con2_148,27     |                1e-08 |          -0          |
+-----------------+----------------------+----------------------+
| con2_148,166    |               -8e-08 |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_149,103    |               -0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_150,84     |               -0     |          -2e-08      |
+-----------------+----------------------+----------------------+
| con2_151,80     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_152,24     |                1e-08 |          -1.264e-05  |
+-----------------+----------------------+----------------------+
| con2_153,1      |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_154,57     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_155,75     |                0     |          -1.103e-05  |
+-----------------+----------------------+----------------------+
| con2_156,138    |                8e-08 |          -1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_157,161    |                3e-08 |          -1.74e-06   |
+-----------------+----------------------+----------------------+
| con2_158,90     |                0     |          -1e-08      |
+-----------------+----------------------+----------------------+
| con2_159,12     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_160,151    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_161,162    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_162,139    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_163,12     |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_164,138    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_165,164    |                0     |          -0          |
+-----------------+----------------------+----------------------+
| con2_166,136    |                0     |          -0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.0031041745490657e-06
Total relative constraint violation: 0.07175066897641176
*******************************************************************************

Final best objective: 10702858.61863463
Number of nlp problem solved: 61
Total number of iteration: 2
Solver_time: 113.84 seconds
Heuristic elapsed time: 116.88 seconds

