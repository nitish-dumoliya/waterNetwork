Water Network: d2_Sample_input_cycle_hanoi 

Testing bound_push=0.007823545159397413, bound_frac=0.0035367212831902465
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.007823545159397413
bound_frac = 0.0035367212831902465
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6055935.812226412
Testing bound_push=0.008396837419457726, bound_frac=0.004274495644931655
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.008396837419457726
bound_frac = 0.004274495644931655
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6055935.812225273
Testing bound_push=0.006842857355019917, bound_frac=0.008231535193746408
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.006842857355019917
bound_frac = 0.008231535193746408
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6055935.812226415
Testing bound_push=0.008023147965163999, bound_frac=0.008707845165303086
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.008023147965163999
bound_frac = 0.008707845165303086
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6055935.812226405
Testing bound_push=0.006584125134281313, bound_frac=0.008757991732641308
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.006584125134281313
bound_frac = 0.008757991732641308
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6055935.812226413
Testing bound_push=0.00813995233974293, bound_frac=0.007916291433756297
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.00813995233974293
bound_frac = 0.007916291433756297
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6055935.812226432
Stopping search: maximum iterations reached --> 2
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (12, 13), (21, 22), (2, 3), (11, 12), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 5.538865800000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.008396837419457726
bound_frac = 0.004274495644931655
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  6055935.812225273
Solve_result:  solved
Solve_time: 0.41880499999999987 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 29, 16] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    60,55,936     61,06,205     0.07s       solved        No        3.47s
(28, 29)  True    60,55,936     63,32,528     0.07s       solved        No        3.9s
(15, 16)  True    60,55,936     60,60,731     0.06s       solved        No        4.31s

**********************************Final best results******************************************

Water Network: d2_Sample_input_cycle_hanoi
*******************************************************************************

Constraint violations:


Total absolute constraint violation: 5.0417027323834684e-15
Total relative constraint violation: 3.112070901084377e-15
*******************************************************************************

Final best objective: 6055935.812225273
Number of nlp problem solved: 20
Total number of iteration: 1
Solver_time: 3.89 seconds
Heuristic elapsed time: 4.31 seconds

