Water Network: d3_Sample_input_double_hanoi 

Testing bound_push=0.005576557669158563, bound_frac=0.006338182781655803
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.005576557669158563
bound_frac = 0.006338182781655803
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.117532581
Testing bound_push=0.00324279462231398, bound_frac=0.0011277922036917907
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.00324279462231398
bound_frac = 0.0011277922036917907
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12350345.278252635
Testing bound_push=0.009213850582726613, bound_frac=0.005680083632769815
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.009213850582726613
bound_frac = 0.005680083632769815
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12337430.509015156
Testing bound_push=0.00862741664429525, bound_frac=0.004262058244507882
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.00862741664429525
bound_frac = 0.004262058244507882
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.117532674
Testing bound_push=0.0092146055445448, bound_frac=0.005810201489339313
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.0092146055445448
bound_frac = 0.005810201489339313
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12283057.95809076
Testing bound_push=0.01, bound_frac=0.005925269942149717
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.01
bound_frac = 0.005925269942149717
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12501150.44402736
Stopping search: maximum iterations reached --> 2
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

min_demand: 0.016666
max_demand: 0.375
max_flow: 10.830509600000001
eps: 1e-06 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.005576557669158563
bound_frac = 0.006338182781655803
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  12064445.117532581
Solve_result:  solved
Solve_time: 0.6684009999999994 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 29, 59, 16, 46] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,20,64,445   1,21,14,386   0.08s       solved        No        6.45s
(56, 57)  True    1,20,64,445   1,21,14,386   0.08s       solved        No        7.27s
(28, 29)  True    1,20,64,445   1,23,41,023   0.22s       solved        No        8.11s
(58, 59)  True    1,20,64,445   1,23,41,023   0.12s       solved        No        9.33s
(15, 16)  True    1,20,64,445   1,20,69,256   0.07s       solved        No        9.78s
(45, 46)  True    1,20,64,445   1,20,69,256   0.07s       solved        No        10.58s

**********************************Final best results******************************************

Water Network: d3_Sample_input_double_hanoi
*******************************************************************************

Constraint violations:


Total absolute constraint violation: 9.981707300987797e-15
Total relative constraint violation: 6.348238220434491e-15
*******************************************************************************

Final best objective: 12064445.117532581
Number of nlp problem solved: 40
Total number of iteration: 1
Solver_time: 9.11 seconds
Heuristic elapsed time: 10.58 seconds

