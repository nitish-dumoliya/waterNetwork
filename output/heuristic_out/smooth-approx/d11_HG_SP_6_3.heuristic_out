Water Network: d11_HG_SP_6_3 

Testing bound_push=0.0029556179971228, bound_frac=0.006339296800624847
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.0029556179971228
bound_frac = 0.006339296800624847
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926480.597273868
Testing bound_push=0.0008522955547620576, bound_frac=0.00115359426500255
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.0008522955547620576
bound_frac = 0.00115359426500255
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10727626.20892761
Testing bound_push=0.005219226629577911, bound_frac=0.0023772066172209998
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.005219226629577911
bound_frac = 0.0023772066172209998
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10971900.366267588
Testing bound_push=0.005360972808546856, bound_frac=0.004928192983888599
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.005360972808546856
bound_frac = 0.004928192983888599
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10987288.732656239
Testing bound_push=0.004272102318077276, bound_frac=0.0017465221377016417
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.004272102318077276
bound_frac = 0.0017465221377016417
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10809988.606740877
Testing bound_push=0.0036634751615806085, bound_frac=0.00358792383932883
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.0036634751615806085
bound_frac = 0.00358792383932883
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10778201.79542319
Stopping search: maximum iterations reached --> 2
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

min_demand: 0.0
max_demand: 0.122
max_flow: 0.985170509
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.0008522955547620576
bound_frac = 0.00115359426500255
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  10727626.20892761
Solve_result:  solved
Solve_time: 4.336566000000005 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 82, 30, 131, 35, 65, 32, 72, 2, 93, 19, 113, 55, 100, 45, 14, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 165) True    1,07,27,626   1,17,15,463   2.57s       limit         No        53.22s
(136, 166)True    1,07,27,626   1,39,58,447   2.74s       limit         No        72.75s
(140, 136)True    1,07,27,626   1,33,62,897   2.73s       limit         No        92.01s
(141, 140)True    1,07,27,626   1,12,07,728   1.97s       solved        No        105.39s
(8, 141)  True    1,07,27,626   1,08,62,223   0.95s       solved        No        112.34s
(69, 70)  True    1,07,27,626   1,18,47,315   1.63s       infeasible    No        125.97s
(128, 115)True    1,07,27,626   1,45,26,800   2.56s       limit         No        144.67s
(119, 114)True    1,07,27,626   1,48,04,457   2.71s       limit         No        163.35s
(22, 87)  True    1,07,27,626   1,09,50,910   2.33s       solved        No        181.87s
(87, 85)  True    1,07,27,626   1,08,53,957   1.03s       solved        No        194.96s
(147, 37) True    1,07,27,626   1,07,01,115   0.3s        solved        Yes       198.03s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [147, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 147) True    1,07,01,115   1,07,07,684   1.47s       solved        No        213.48s
(124, 82) True    1,07,01,115   1,07,12,185   0.23s       solved        No        217.96s
(105, 30) True    1,07,01,115   1,07,79,811   0.58s       solved        No        229.01s
(56, 131) True    1,07,01,115   1,14,55,650   1.32s       infeasible    No        243.27s
(48, 35)  True    1,07,01,115   1,45,86,151   2.56s       limit         No        261.65s
(75, 65)  True    1,07,01,115   1,13,26,798   2.37s       limit         No        277.63s
(111, 32) True    1,07,01,115   1,09,35,140   1.17s       solved        No        286.15s
(129, 72) True    1,07,01,115   1,40,42,718   2.4s        limit         No        304.21s
(18, 2)   True    1,07,01,115   1,13,15,870   1.79s       solved        No        318.95s
(14, 122) True    1,07,01,115   1,07,04,257   0.17s       solved        No        323.85s
(74, 93)  True    1,07,01,115   1,07,23,029   0.7s        solved        No        330.88s
(68, 19)  True    1,07,01,115   1,07,85,419   1.63s       solved        No        343.04s
(100, 113)True    1,07,01,115   1,19,28,612   2.35s       solved        No        360.87s
(76, 55)  True    1,07,01,115   1,07,12,784   0.33s       solved        No        366.98s
(144, 100)True    1,07,01,115   1,09,84,741   0.86s       solved        No        376.33s
(6, 45)   True    1,07,01,115   1,07,66,259   0.82s       solved        No        388.25s
(26, 116) True    1,07,01,115   1,07,04,474   1.74s       solved        No        400.85s
(84, 88)  True    1,07,01,115   1,09,31,101   1.45s       solved        No        413.95s
(101, 6)  True    1,07,01,115   1,07,03,946   0.19s       solved        No        417.97s

**********************************Final best results******************************************

Water Network: d11_HG_SP_6_3
*******************************************************************************

Constraint violations:


Total absolute constraint violation: 6.213571804210491e-16
Total relative constraint violation: 2.47347029555748e-10
*******************************************************************************

Final best objective: 10701114.687650535
Number of nlp problem solved: 217
Total number of iteration: 2
Solver_time: 386.81 seconds
Heuristic elapsed time: 417.98 seconds

