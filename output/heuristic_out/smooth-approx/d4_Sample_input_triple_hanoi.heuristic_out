Water Network: d4_Sample_input_triple_hanoi 

Testing bound_push=0.00825912122043049, bound_frac=0.008523174267803569
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

min_demand: 0.0
max_demand: 0.375
max_flow: 15.886042400000008
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.00825912122043049
bound_frac = 0.008523174267803569
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369653.18480558
Testing bound_push=0.008589778606065588, bound_frac=0.008294457714594302
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

min_demand: 0.0
max_demand: 0.375
max_flow: 15.886042400000008
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.008589778606065588
bound_frac = 0.008294457714594302
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18617798.043520223
Testing bound_push=0.008231450308962156, bound_frac=0.0037944891603151646
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

min_demand: 0.0
max_demand: 0.375
max_flow: 15.886042400000008
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.008231450308962156
bound_frac = 0.0037944891603151646
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369653.18480561
Testing bound_push=0.006107924660219234, bound_frac=0.004479052057808684
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

min_demand: 0.0
max_demand: 0.375
max_flow: 15.886042400000008
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.006107924660219234
bound_frac = 0.004479052057808684
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369653.184804156
Testing bound_push=0.007941384964315151, bound_frac=0.0028329772104645915
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

min_demand: 0.0
max_demand: 0.375
max_flow: 15.886042400000008
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.007941384964315151
bound_frac = 0.0028329772104645915
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369653.18480415
Stopping search: Swarm best objective change less than 1e-08
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

min_demand: 0.0
max_demand: 0.375
max_flow: 15.886042400000008
eps: 1e-08 

Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
tol=1e-9
bound_relax_factor=0
bound_push = 0.007941384964315151
bound_frac = 0.0028329772104645915
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  18369653.18480415
Solve_result:  solved
Solve_time: 1.1902860000000004 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 87, 29, 59, 89, 16, 46, 76] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,83,69,653   1,84,19,582   0.09s       solved        No        7.73s
(56, 57)  True    1,83,69,653   1,84,19,582   0.1s        solved        No        8.36s
(86, 87)  True    1,83,69,653   1,84,19,582   0.16s       solved        No        9.41s
(28, 29)  True    1,83,69,653   1,86,46,183   0.2s        solved        No        10.31s
(58, 59)  True    1,83,69,653   1,86,46,181   0.16s       solved        No        11.59s
(88, 89)  True    1,83,69,653   1,86,46,181   0.12s       solved        No        12.28s
(15, 16)  True    1,83,69,653   1,83,74,516   0.16s       solved        No        13.41s
(45, 46)  True    1,83,69,653   1,83,74,517   0.09s       solved        No        13.99s
(75, 76)  True    1,83,69,653   1,83,74,517   0.09s       solved        No        14.56s

**********************************Final best results******************************************

Water Network: d4_Sample_input_triple_hanoi
*******************************************************************************

Constraint violations:


Total absolute constraint violation: 4.6133724011104826e-14
Total relative constraint violation: 1.0804277839934157e-14
*******************************************************************************

Final best objective: 18369653.18480415
Number of nlp problem solved: 49
Total number of iteration: 1
Solver_time: 12.10 seconds
Heuristic elapsed time: 14.56 seconds

