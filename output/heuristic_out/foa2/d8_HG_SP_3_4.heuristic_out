Water Network: d8_HG_SP_3_4 

Testing bound_push=0.0006798386862647944, bound_frac=0.00934120752267414
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0006798386862647944
bound_frac: 0.00934120752267414
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006798386862647944
bound_frac = 0.00934120752267414
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.704806386
Testing bound_push=0.0007554248556964282, bound_frac=0.005674113101752183
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0007554248556964282
bound_frac: 0.005674113101752183
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007554248556964282
bound_frac = 0.005674113101752183
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972533.810801112
Testing bound_push=0.0007713884256052826, bound_frac=0.0038747397278994272
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0007713884256052826
bound_frac: 0.0038747397278994272
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007713884256052826
bound_frac = 0.0038747397278994272
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6973410.906780205
Testing bound_push=0.00045390149990863114, bound_frac=0.005762599273407983
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00045390149990863114
bound_frac: 0.005762599273407983
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00045390149990863114
bound_frac = 0.005762599273407983
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6970414.405877519
Testing bound_push=0.0006064527649757918, bound_frac=0.009834362613724192
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0006064527649757918
bound_frac: 0.009834362613724192
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006064527649757918
bound_frac = 0.009834362613724192
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.7027514735
Testing bound_push=0.00045839078287302474, bound_frac=0.01
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00045839078287302474
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00045839078287302474
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.702642892
Testing bound_push=0.00055078284270893, bound_frac=0.004989964487714799
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00055078284270893
bound_frac: 0.004989964487714799
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00055078284270893
bound_frac = 0.004989964487714799
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6974464.02448014
Testing bound_push=0.00023861194796862028, bound_frac=0.007009425001774325
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00023861194796862028
bound_frac: 0.007009425001774325
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023861194796862028
bound_frac = 0.007009425001774325
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968570.301984088
Testing bound_push=0.0002371328030490739, bound_frac=0.007752490018635672
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0002371328030490739
bound_frac: 0.007752490018635672
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002371328030490739
bound_frac = 0.007752490018635672
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.703498131
Testing bound_push=0.0005990078081318331, bound_frac=0.01
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0005990078081318331
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005990078081318331
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6976032.9137763
Testing bound_push=0.00034766683117713987, bound_frac=0.01
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00034766683117713987
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034766683117713987
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6974407.7249319935
Testing bound_push=0.000447848384653807, bound_frac=0.006019148952796012
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000447848384653807
bound_frac: 0.006019148952796012
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000447848384653807
bound_frac = 0.006019148952796012
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6963281.576248356
Testing bound_push=3.6787670209683526e-05, bound_frac=0.008495995888598432
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 3.6787670209683526e-05
bound_frac: 0.008495995888598432
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 3.6787670209683526e-05
bound_frac = 0.008495995888598432
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6992954.815527493
Testing bound_push=0.0001850585715471785, bound_frac=0.008225908704430426
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0001850585715471785
bound_frac: 0.008225908704430426
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001850585715471785
bound_frac = 0.008225908704430426
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972533.811574944
Testing bound_push=0.000585745051008334, bound_frac=0.009774115752764247
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000585745051008334
bound_frac: 0.009774115752764247
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000585745051008334
bound_frac = 0.009774115752764247
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6986098.108026681
Testing bound_push=0.00038311807329021374, bound_frac=0.009926342493730221
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00038311807329021374
bound_frac: 0.009926342493730221
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038311807329021374
bound_frac = 0.009926342493730221
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6973970.991917867
Testing bound_push=0.0003963811556262455, bound_frac=0.006533741185336619
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0003963811556262455
bound_frac: 0.006533741185336619
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003963811556262455
bound_frac = 0.006533741185336619
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.702762881
Testing bound_push=0.00013879115722349597, bound_frac=0.008397017441140483
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00013879115722349597
bound_frac: 0.008397017441140483
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00013879115722349597
bound_frac = 0.008397017441140483
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6965489.753841488
Testing bound_push=0.00021190190706103483, bound_frac=0.00732603211692016
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00021190190706103483
bound_frac: 0.00732603211692016
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00021190190706103483
bound_frac = 0.00732603211692016
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6961709.562063103
Testing bound_push=0.0004993109813537944, bound_frac=0.009000355103581088
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004993109813537944
bound_frac: 0.009000355103581088
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004993109813537944
bound_frac = 0.009000355103581088
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6975443.756529121
Testing bound_push=0.0004071045594789205, bound_frac=0.008615059845782437
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004071045594789205
bound_frac: 0.008615059845782437
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004071045594789205
bound_frac = 0.008615059845782437
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6985157.962315522
Testing bound_push=0.0003530193387951768, bound_frac=0.007046384087978267
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0003530193387951768
bound_frac: 0.007046384087978267
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003530193387951768
bound_frac = 0.007046384087978267
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6971333.772286388
Testing bound_push=0.0001995150281059273, bound_frac=0.007848057254833073
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0001995150281059273
bound_frac: 0.007848057254833073
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001995150281059273
bound_frac = 0.007848057254833073
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6971066.565014477
Testing bound_push=0.000225323574817963, bound_frac=0.006876093823165027
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.000225323574817963
bound_frac: 0.006876093823165027
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000225323574817963
bound_frac = 0.006876093823165027
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6968349.703828063
Testing bound_push=0.0004583133268081062, bound_frac=0.008040169317526945
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0004583133268081062
bound_frac: 0.008040169317526945
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004583133268081062
bound_frac = 0.008040169317526945
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6974407.725037266
Testing bound_push=0.00042003071388549293, bound_frac=0.007781505438547293
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00042003071388549293
bound_frac: 0.007781505438547293
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00042003071388549293
bound_frac = 0.007781505438547293
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6972238.039601793
Testing bound_push=0.00033557797143385663, bound_frac=0.006949151337854548
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00033557797143385663
bound_frac: 0.006949151337854548
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00033557797143385663
bound_frac = 0.006949151337854548
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6990995.346179917
Testing bound_push=0.0002170186773451161, bound_frac=0.007753487057044424
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0002170186773451161
bound_frac: 0.007753487057044424
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002170186773451161
bound_frac = 0.007753487057044424
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6971066.580326273
Testing bound_push=0.0002193872279251429, bound_frac=0.006899731329251335
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.0002193872279251429
bound_frac: 0.006899731329251335
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002193872279251429
bound_frac = 0.006899731329251335
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6971066.580372801
Testing bound_push=0.00038182868644146516, bound_frac=0.007666979716443273
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00038182868644146516
bound_frac: 0.007666979716443273
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038182868644146516
bound_frac = 0.007666979716443273
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 6961709.561967971
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(82, 81), (70, 12), (83, 70), (6, 36), (74, 67), (15, 57), (67, 46), (12, 49), (71, 68), (79, 69), (20, 50), (36, 43), (47, 55), (22, 62), (80, 67), (37, 5), (49, 31), (53, 25), (25, 43), (43, 14), (46, 21), (31, 58), (10, 81), (14, 45), (68, 80), (61, 50), (8, 47), (11, 37), (1, 62), (81, 3), (5, 20), (50, 22), (28, 31), (9, 82), (73, 57), (29, 11)}
super_source_out_arc: [(1, 62), (62, 22), (62, 55), (62, 17)] 

bound_push: 0.00038182868644146516
bound_frac: 0.007666979716443273
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038182868644146516
bound_frac = 0.007666979716443273
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  6961709.561967971
Solve_result:  solved
Solve_time: 2.3624829999999974 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [78, 76, 24, 3, 51, 21, 66, 41, 64, 56, 42, 32, 17, 39] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(44, 78)  True    69,61,710     75,38,821     0.77s       solved        No        95.83s
(38, 76)  True    69,61,710     83,63,252     0.94s       infeasible    No        96.84s
(78, 24)  True    69,61,710     80,15,248     1.74s       limit         No        98.71s
(2, 3)    True    69,61,710     1,11,06,329   1.84s       limit         No        100.61s
(41, 51)  True    69,61,710     82,74,384     1.28s       infeasible    No        102.0s
(27, 21)  True    69,61,710     74,99,995     0.45s       infeasible    No        102.51s
(58, 66)  True    69,61,710     73,14,154     0.6s        solved        No        103.18s
(60, 41)  True    69,61,710     69,78,961     0.8s        solved        No        104.04s
(19, 64)  True    69,61,710     80,08,782     0.77s       infeasible    No        104.85s
(30, 56)  True    69,61,710     77,89,664     0.72s       infeasible    No        105.6s
(77, 42)  True    69,61,710     76,16,771     1.02s       infeasible    No        106.65s
(42, 32)  True    69,61,710     71,33,821     0.62s       infeasible    No        107.3s
(45, 17)  True    69,61,710     60,44,898     0.26s       infeasible    No        107.6s
(35, 39)  True    69,61,710     69,72,369     0.48s       solved        No        108.11s

**********************************Final best results******************************************

Water Network: d8_HG_SP_3_4
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,62       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_2,63       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_3,2        |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_4,65       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_4,66       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_5,20       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_6,36       |                   -0 |             5.6e-07  |
+-----------------+----------------------+----------------------+
| con2_7,48       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_8,47       |                   -0 |             3.5e-07  |
+-----------------+----------------------+----------------------+
| con2_9,82       |                   -0 |             1e-07    |
+-----------------+----------------------+----------------------+
| con2_10,81      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_11,37      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_12,49      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_13,76      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_14,45      |                   -0 |             1e-08    |
+-----------------+----------------------+----------------------+
| con2_15,57      |                   -0 |             3e-08    |
+-----------------+----------------------+----------------------+
| con2_16,18      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_17,45      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_18,75      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_19,64      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_20,50      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_21,7       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_21,27      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_21,48      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_22,62      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_23,34      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_24,3       |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_24,69      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_24,78      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_25,43      |                   -0 |             1.3e-07  |
+-----------------+----------------------+----------------------+
| con2_26,59      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_26,63      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_27,66      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_28,31      |                   -0 |             1.5e-07  |
+-----------------+----------------------+----------------------+
| con2_29,11      |                   -0 |             3e-08    |
+-----------------+----------------------+----------------------+
| con2_30,52      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_31,58      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_32,77      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_33,40      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_34,32      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_35,16      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_36,43      |                   -0 |             9e-08    |
+-----------------+----------------------+----------------------+
| con2_37,5       |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_38,60      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_39,16      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_39,35      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_40,13      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_41,35      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_41,60      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_42,32      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_42,77      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_43,14      |                   -0 |             2e-08    |
+-----------------+----------------------+----------------------+
| con2_44,26      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_45,55      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_46,21      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_47,55      |                   -0 |             4e-08    |
+-----------------+----------------------+----------------------+
| con2_48,66      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_49,31      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_50,22      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_51,41      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_51,76      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_52,39      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_52,56      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_53,25      |                   -0 |             1.05e-06 |
+-----------------+----------------------+----------------------+
| con2_54,64      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_55,62      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_56,30      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_56,41      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_57,51      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_57,72      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_58,4       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_59,19      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_59,64      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_60,16      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_61,50      |                   -0 |             8e-08    |
+-----------------+----------------------+----------------------+
| con2_62,17      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_63,40      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_64,42      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_65,23      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_66,58      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_67,46      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_68,80      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_69,54      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_70,12      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_71,68      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_72,51      |                    0 |             0        |
+-----------------+----------------------+----------------------+
| con2_72,56      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_73,57      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_74,67      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_75,17      |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_76,38      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_77,33      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_78,26      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_78,44      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_79,69      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_80,67      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_81,3       |                    0 |            -0        |
+-----------------+----------------------+----------------------+
| con2_82,81      |                   -0 |             0        |
+-----------------+----------------------+----------------------+
| con2_83,70      |                   -0 |             0        |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 6.077000039662565e-11
Total relative constraint violation: 2.6362243983297114e-06
*******************************************************************************

Final best objective: 6961709.561967971
Number of nlp problem solved: 45
Total number of iteration: 1
Solver_time: 105.90 seconds
Heuristic elapsed time: 108.12 seconds

