Water Network: d6_HG_SP_1_4 

Testing bound_push=0.0005916481440690051, bound_frac=0.001901118025529073
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0005916481440690051
bound_frac: 0.001901118025529073
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005916481440690051
bound_frac = 0.001901118025529073
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3587647.6714247577
Testing bound_push=0.00028196143930261014, bound_frac=0.0022294773552344756
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00028196143930261014
bound_frac: 0.0022294773552344756
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00028196143930261014
bound_frac = 0.0022294773552344756
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3585663.710718726
Testing bound_push=0.000437434005504286, bound_frac=0.005379700006765905
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.000437434005504286
bound_frac: 0.005379700006765905
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000437434005504286
bound_frac = 0.005379700006765905
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3813963.746791753
Testing bound_push=0.0008230927900194705, bound_frac=0.0058304936378199895
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0008230927900194705
bound_frac: 0.0058304936378199895
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008230927900194705
bound_frac = 0.0058304936378199895
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3639430.3943815473
Testing bound_push=0.0008035275450029817, bound_frac=0.009701713408197043
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0008035275450029817
bound_frac: 0.009701713408197043
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008035275450029817
bound_frac = 0.009701713408197043
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3649887.1474639764
Testing bound_push=0.00020983605804474227, bound_frac=0.006555849799632482
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00020983605804474227
bound_frac: 0.006555849799632482
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020983605804474227
bound_frac = 0.006555849799632482
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3640315.3758462714
Testing bound_push=0.00024867325811330426, bound_frac=0.001271995688823299
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00024867325811330426
bound_frac: 0.001271995688823299
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00024867325811330426
bound_frac = 0.001271995688823299
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3647176.2059199163
Testing bound_push=0.00020282543745262378, bound_frac=0.005581362530474124
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00020282543745262378
bound_frac: 0.005581362530474124
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020282543745262378
bound_frac = 0.005581362530474124
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3640315.3758461317
Testing bound_push=0.0006202275470356768, bound_frac=0.0005164993486696783
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0006202275470356768
bound_frac: 0.0005164993486696783
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006202275470356768
bound_frac = 0.0005164993486696783
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3649001.841900277
Testing bound_push=0.00013204447035444322, bound_frac=0.005502131130637574
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00013204447035444322
bound_frac: 0.005502131130637574
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00013204447035444322
bound_frac = 0.005502131130637574
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3807759.5621706694
Testing bound_push=0.00023324621226403474, bound_frac=0.007368375527286457
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00023324621226403474
bound_frac: 0.007368375527286457
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023324621226403474
bound_frac = 0.007368375527286457
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3657898.7994511207
Testing bound_push=0.00024629722492105815, bound_frac=0.0010970420959549758
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00024629722492105815
bound_frac: 0.0010970420959549758
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00024629722492105815
bound_frac = 0.0010970420959549758
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3861757.279132069
Testing bound_push=9.74714998116566e-05, bound_frac=0.0055013716212416125
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 9.74714998116566e-05
bound_frac: 0.0055013716212416125
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.74714998116566e-05
bound_frac = 0.0055013716212416125
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3808037.6046023336
Testing bound_push=0.00044765331808216033, bound_frac=1e-06
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00044765331808216033
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00044765331808216033
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3586548.526638661
Testing bound_push=0.0001204938127862175, bound_frac=0.003951195390763167
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0001204938127862175
bound_frac: 0.003951195390763167
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001204938127862175
bound_frac = 0.003951195390763167
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3592661.7203436694
Testing bound_push=0.00027215490727870804, bound_frac=0.0066976111307239985
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00027215490727870804
bound_frac: 0.0066976111307239985
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027215490727870804
bound_frac = 0.0066976111307239985
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3649887.147463979
Testing bound_push=0.00027095232094371413, bound_frac=0.0014626738710279766
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00027095232094371413
bound_frac: 0.0014626738710279766
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027095232094371413
bound_frac = 0.0014626738710279766
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3591434.1755885174
Testing bound_push=0.0001761074531262276, bound_frac=0.0051773828556276125
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0001761074531262276
bound_frac: 0.0051773828556276125
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001761074531262276
bound_frac = 0.0051773828556276125
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3805555.818663539
Testing bound_push=0.0002861177278064217, bound_frac=1e-06
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0002861177278064217
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002861177278064217
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3595225.9017532403
Testing bound_push=0.00019371994426318768, bound_frac=0.0025626945660743596
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00019371994426318768
bound_frac: 0.0025626945660743596
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00019371994426318768
bound_frac = 0.0025626945660743596
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3780085.1513313083
Testing bound_push=0.0003500996853427195, bound_frac=0.004639111590456699
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0003500996853427195
bound_frac: 0.004639111590456699
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003500996853427195
bound_frac = 0.004639111590456699
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3589816.1537120896
Testing bound_push=0.00028979007487378307, bound_frac=0.001854706409501129
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00028979007487378307
bound_frac: 0.001854706409501129
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00028979007487378307
bound_frac = 0.001854706409501129
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3639529.461561681
Testing bound_push=0.000258839746580638, bound_frac=0.004034042532360332
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.000258839746580638
bound_frac: 0.004034042532360332
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000258839746580638
bound_frac = 0.004034042532360332
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3586548.5266468846
Testing bound_push=0.0002485721029750619, bound_frac=1e-06
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0002485721029750619
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002485721029750619
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3587647.6693517677
Testing bound_push=0.00023910222786413532, bound_frac=0.0017673824495348725
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00023910222786413532
bound_frac: 0.0017673824495348725
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023910222786413532
bound_frac = 0.0017673824495348725
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3651335.7976557487
Testing bound_push=0.0004406562765425864, bound_frac=0.0017173959405703352
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0004406562765425864
bound_frac: 0.0017173959405703352
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004406562765425864
bound_frac = 0.0017173959405703352
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3796928.1284723436
Testing bound_push=0.0002975909770479085, bound_frac=0.0022458751405517005
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0002975909770479085
bound_frac: 0.0022458751405517005
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002975909770479085
bound_frac = 0.0022458751405517005
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3648172.2850227538
Testing bound_push=0.0003012781658359013, bound_frac=0.0032813456115075522
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0003012781658359013
bound_frac: 0.0032813456115075522
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003012781658359013
bound_frac = 0.0032813456115075522
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3649001.841900272
Testing bound_push=0.0003338465827748265, bound_frac=0.0005212584105530291
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.0003338465827748265
bound_frac: 0.0005212584105530291
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003338465827748265
bound_frac = 0.0005212584105530291
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3640315.375854419
Testing bound_push=0.000269249977061953, bound_frac=0.0018931216336947152
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.000269249977061953
bound_frac: 0.0018931216336947152
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000269249977061953
bound_frac = 0.0018931216336947152
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3803828.2683970286
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(48, 66), (21, 26), (72, 34), (71, 75), (66, 77), (65, 75), (6, 1), (25, 52), (67, 71), (27, 69), (69, 61), (46, 28), (75, 27), (9, 46), (13, 5)}
super_source_out_arc: [(1, 6), (1, 22), (1, 30)] 

bound_push: 0.00028196143930261014
bound_frac: 0.0022294773552344756
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00028196143930261014
bound_frac = 0.0022294773552344756
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3585663.710718726
Solve_result:  solved
Solve_time: 1.326831999999996 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [76, 78, 70, 73, 64, 54, 7, 43, 14, 3, 59, 16, 61, 49, 37, 5, 17, 24, 32, 26, 30] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(38, 76)  True    35,85,664     46,16,904     0.84s       limit         No        42.5s
(54, 78)  True    35,85,664     39,00,126     0.49s       solved        No        43.03s
(58, 70)  True    35,85,664     35,86,261     0.05s       solved        No        43.11s
(44, 73)  True    35,85,664     38,01,171     0.57s       solved        No        43.71s
(78, 64)  True    35,85,664     35,82,405     0.08s       solved        Yes       43.81s

visited_nodes: [76, 78, 70, 73, 64]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [54, 7, 43, 14, 3, 59, 16, 61, 49, 37, 5, 17, 24, 32, 26, 30] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(18, 54)  True    35,82,405     52,93,089     0.86s       limit         No        44.71s
(40, 7)   True    35,82,405     36,39,692     0.06s       solved        No        44.8s
(7, 43)   True    35,82,405     36,14,164     0.06s       solved        No        44.89s
(3, 14)   True    35,82,405     37,86,948     0.2s        solved        No        45.11s
(53, 3)   True    35,82,405     43,86,912     0.41s       solved        No        45.55s
(33, 59)  True    35,82,405     36,17,176     0.07s       solved        No        45.67s
(60, 16)  True    35,82,405     35,83,619     0.05s       solved        No        45.77s
(10, 61)  True    35,82,405     41,94,110     0.43s       infeasible    No        46.25s
(28, 49)  True    35,82,405     35,84,969     0.12s       solved        No        46.39s
(15, 37)  True    35,82,405     64,68,736     0.93s       limit         No        47.35s
(42, 5)   True    35,82,405     36,51,468     0.15s       infeasible    No        47.55s
(8, 17)   True    35,82,405     35,81,035     0.13s       solved        Yes       47.71s

visited_nodes: [76, 78, 70, 73, 64, 54, 7, 43, 14, 3, 59, 16, 61, 49, 37, 5, 17]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [24, 32, 8, 26, 30] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(19, 24)  True    35,81,035     40,51,894     0.92s       limit         No        48.66s
(47, 32)  True    35,81,035     40,62,614     0.41s       infeasible    No        49.1s
(17, 8)   True    35,81,035     35,80,133     0.05s       solved        Yes       49.18s

visited_nodes: [76, 78, 70, 73, 64, 54, 7, 43, 14, 3, 59, 16, 61, 49, 37, 5, 17, 24, 32, 8]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [26, 30] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 26)  True    35,80,133     40,92,011     0.35s       infeasible    No        49.56s
(56, 30)  True    35,80,133     35,85,902     0.08s       solved        No        49.67s

**********************************Final best results******************************************

Water Network: d6_HG_SP_1_4
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,30       |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_2,7        |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,14       |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,11       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_3,53       |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_4,11       |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_5,41       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_5,42       |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_6,1        |               -0     |           0.0115147  |
+-----------------+----------------------+----------------------+
| con2_7,40       |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_7,60       |               -2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_8,17       |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_8,29       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_9,46       |               -0     |           0.00403693 |
+-----------------+----------------------+----------------------+
| con2_10,32      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_10,61      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_11,8       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_12,24      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_13,5       |               -0     |           0.00875281 |
+-----------------+----------------------+----------------------+
| con2_14,3       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_15,33      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_16,59      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_16,60      |               -2e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_17,29      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_18,43      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_19,22      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_20,30      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_21,26      |               -1e-08 |           0.00125459 |
+-----------------+----------------------+----------------------+
| con2_22,1       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_23,36      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_24,19      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_25,52      |               -2e-08 |           0.00024282 |
+-----------------+----------------------+----------------------+
| con2_26,12      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_27,69      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_28,49      |                1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_29,60      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_30,56      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_31,28      |                0     |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_31,58      |               -1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_32,47      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_33,55      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_34,54      |               -3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_34,62      |                1e-08 |           4.922e-05  |
+-----------------+----------------------+----------------------+
| con2_34,76      |                3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_35,51      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_36,20      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_37,15      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_37,33      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_38,3       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_39,24      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_40,16      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_40,43      |                3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_41,17      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_42,41      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_43,7       |               -2e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_44,77      |               -1e-08 |           1.12e-06   |
+-----------------+----------------------+----------------------+
| con2_45,24      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_45,32      |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_45,74      |                0     |           1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_46,28      |               -1e-08 |           0.00017347 |
+-----------------+----------------------+----------------------+
| con2_47,26      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_48,66      |               -2e-08 |           0.00015739 |
+-----------------+----------------------+----------------------+
| con2_49,59      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_50,22      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_50,39      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_51,5       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_52,35      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_53,4       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_54,14      |               -2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_54,18      |               -3e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_55,36      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_56,22      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_57,23      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_58,49      |                1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_58,57      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_59,33      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_59,37      |                1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_60,37      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_61,70      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_62,64      |                1e-08 |           4.922e-05  |
+-----------------+----------------------+----------------------+
| con2_63,73      |                1e-08 |           3.062e-05  |
+-----------------+----------------------+----------------------+
| con2_64,78      |               -1e-08 |           3.44e-06   |
+-----------------+----------------------+----------------------+
| con2_65,75      |               -2e-08 |           2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_66,77      |               -2e-08 |           1.75e-06   |
+-----------------+----------------------+----------------------+
| con2_67,71      |               -2e-08 |           1.58e-06   |
+-----------------+----------------------+----------------------+
| con2_68,52      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_69,61      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_70,36      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_70,58      |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_71,75      |               -2e-08 |           3.1e-07    |
+-----------------+----------------------+----------------------+
| con2_72,34      |               -2e-08 |           5.25e-06   |
+-----------------+----------------------+----------------------+
| con2_73,44      |               -3e-08 |           1.66e-06   |
+-----------------+----------------------+----------------------+
| con2_74,26      |                0     |           1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_75,27      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_76,38      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_77,63      |                3e-08 |           1.36e-06   |
+-----------------+----------------------+----------------------+
| con2_77,68      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_78,14      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_78,38      |               -2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_78,54      |               -2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 6.697942700017579e-07
Total relative constraint violation: 0.026281076772399926
*******************************************************************************

Final best objective: 3580133.1248691124
Number of nlp problem solved: 53
Total number of iteration: 4
Solver_time: 48.63 seconds
Heuristic elapsed time: 49.67 seconds

