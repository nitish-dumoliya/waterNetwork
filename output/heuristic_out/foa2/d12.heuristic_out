Water Network: d12 

Testing bound_push=0.005329871425843212, bound_frac=0.048583388345754284
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005329871425843212
bound_frac: 0.048583388345754284
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005329871425843212
bound_frac = 0.048583388345754284
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3407114.123169799
Testing bound_push=0.006681350206425707, bound_frac=0.016310637853978856
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.006681350206425707
bound_frac: 0.016310637853978856
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.006681350206425707
bound_frac = 0.016310637853978856
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3424839.5139306737
Testing bound_push=0.008644763901336488, bound_frac=0.09813612817902118
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.008644763901336488
bound_frac: 0.09813612817902118
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008644763901336488
bound_frac = 0.09813612817902118
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3402129.8541204855
Testing bound_push=0.0033632008512153367, bound_frac=0.09601708108459495
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0033632008512153367
bound_frac: 0.09601708108459495
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0033632008512153367
bound_frac = 0.09601708108459495
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3438508.671394171
Testing bound_push=0.009270870648333904, bound_frac=0.031928167890230216
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.009270870648333904
bound_frac: 0.031928167890230216
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009270870648333904
bound_frac = 0.031928167890230216
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3413830.4755996815
Testing bound_push=0.0025912072268344587, bound_frac=0.0320088917851471
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0025912072268344587
bound_frac: 0.0320088917851471
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0025912072268344587
bound_frac = 0.0320088917851471
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3403354.694500928
Testing bound_push=0.005159993103233744, bound_frac=0.0011801934328254451
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005159993103233744
bound_frac: 0.0011801934328254451
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005159993103233744
bound_frac = 0.0011801934328254451
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3395616.4854810117
Testing bound_push=0.004988703667271887, bound_frac=0.1
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004988703667271887
bound_frac: 0.1
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004988703667271887
bound_frac = 0.1
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404691.320518819
Testing bound_push=0.007333307349325415, bound_frac=0.040285701832965815
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.007333307349325415
bound_frac: 0.040285701832965815
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.007333307349325415
bound_frac = 0.040285701832965815
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3436291.3188637164
Testing bound_push=0.01, bound_frac=0.032509138608941446
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.01
bound_frac: 0.032509138608941446
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.032509138608941446
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3401520.4463408473
Testing bound_push=0.0015836376873786303, bound_frac=0.014690627326966361
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0015836376873786303
bound_frac: 0.014690627326966361
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0015836376873786303
bound_frac = 0.014690627326966361
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3427799.8706866507
Testing bound_push=0.004399314551637763, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004399314551637763
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004399314551637763
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404497.6221585996
Testing bound_push=0.004148845442618998, bound_frac=0.08404584659120415
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004148845442618998
bound_frac: 0.08404584659120415
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004148845442618998
bound_frac = 0.08404584659120415
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3451140.21747292
Testing bound_push=0.008479593321412664, bound_frac=0.01181630763599761
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.008479593321412664
bound_frac: 0.01181630763599761
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008479593321412664
bound_frac = 0.01181630763599761
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3399063.493244722
Testing bound_push=0.009933773770616735, bound_frac=0.027105495203128643
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.009933773770616735
bound_frac: 0.027105495203128643
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009933773770616735
bound_frac = 0.027105495203128643
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3407897.2023279215
Testing bound_push=0.0019496110080381229, bound_frac=0.008211553205518429
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0019496110080381229
bound_frac: 0.008211553205518429
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0019496110080381229
bound_frac = 0.008211553205518429
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3407584.4670001897
Testing bound_push=0.004347192721411703, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004347192721411703
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004347192721411703
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3384809.3201837963
Testing bound_push=0.005492348275131408, bound_frac=0.06398386127606762
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005492348275131408
bound_frac: 0.06398386127606762
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005492348275131408
bound_frac = 0.06398386127606762
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3392875.07016414
Testing bound_push=0.007061763435422811, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.007061763435422811
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.007061763435422811
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3415735.60265404
Testing bound_push=0.00819450811536803, bound_frac=0.018523312799115826
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00819450811536803
bound_frac: 0.018523312799115826
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00819450811536803
bound_frac = 0.018523312799115826
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3418846.496023977
Testing bound_push=0.0033559712659236565, bound_frac=0.01186063941828329
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0033559712659236565
bound_frac: 0.01186063941828329
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0033559712659236565
bound_frac = 0.01186063941828329
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3421071.458332196
Testing bound_push=0.0043211318062986726, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0043211318062986726
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0043211318062986726
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3417082.280738827
Testing bound_push=0.005649617061255812, bound_frac=0.026191753453639957
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005649617061255812
bound_frac: 0.026191753453639957
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005649617061255812
bound_frac = 0.026191753453639957
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3436733.830334528
Testing bound_push=0.006030114982253649, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.006030114982253649
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.006030114982253649
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3392875.07016706
Testing bound_push=0.007451864511160141, bound_frac=0.014661470813991564
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.007451864511160141
bound_frac: 0.014661470813991564
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.007451864511160141
bound_frac = 0.014661470813991564
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3440144.821714375
Testing bound_push=0.004335560491021446, bound_frac=0.017120711427525984
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004335560491021446
bound_frac: 0.017120711427525984
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004335560491021446
bound_frac = 0.017120711427525984
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3433008.288001207
Testing bound_push=0.00432476842526751, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00432476842526751
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00432476842526751
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429317.962827086
Testing bound_push=0.005415239757760379, bound_frac=0.014851073605290031
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005415239757760379
bound_frac: 0.014851073605290031
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005415239757760379
bound_frac = 0.014851073605290031
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3387232.177051845
Testing bound_push=0.005254728402778272, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005254728402778272
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005254728402778272
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3386258.79717966
Testing bound_push=0.006169510876860747, bound_frac=0.01213898683377266
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.006169510876860747
bound_frac: 0.01213898683377266
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.006169510876860747
bound_frac = 0.01213898683377266
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3436291.3188662245
Testing bound_push=0.004618312599315873, bound_frac=0.020228155270911985
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004618312599315873
bound_frac: 0.020228155270911985
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004618312599315873
bound_frac = 0.020228155270911985
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3415780.3931681323
Testing bound_push=0.004337400780032905, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004337400780032905
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004337400780032905
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3466653.274225795
Testing bound_push=0.005078139657430244, bound_frac=0.008782429776425873
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005078139657430244
bound_frac: 0.008782429776425873
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005078139657430244
bound_frac = 0.008782429776425873
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3399063.4932445115
Testing bound_push=0.004621912835388246, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004621912835388246
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004621912835388246
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3415107.645423301
Testing bound_push=0.0058814770686320735, bound_frac=0.016426427453065794
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0058814770686320735
bound_frac: 0.016426427453065794
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0058814770686320735
bound_frac = 0.016426427453065794
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3385990.7965584276
Testing bound_push=0.004049141971400183, bound_frac=0.014361487527572825
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004049141971400183
bound_frac: 0.014361487527572825
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004049141971400183
bound_frac = 0.014361487527572825
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3459871.5727694794
Testing bound_push=0.00434415408847705, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00434415408847705
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00434415408847705
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3384390.224510046
Testing bound_push=0.004817454907084156, bound_frac=0.0063079386834037545
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004817454907084156
bound_frac: 0.0063079386834037545
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004817454907084156
bound_frac = 0.0063079386834037545
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3387431.40750237
Testing bound_push=0.004452289635421045, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004452289635421045
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004452289635421045
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3403298.3446975043
Testing bound_push=0.005363146479817522, bound_frac=0.011164696274571118
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005363146479817522
bound_frac: 0.011164696274571118
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005363146479817522
bound_frac = 0.011164696274571118
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3399839.837933809
Testing bound_push=0.0036184839419714484, bound_frac=0.009124983923589923
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0036184839419714484
bound_frac: 0.009124983923589923
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0036184839419714484
bound_frac = 0.009124983923589923
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425030.467996308
Testing bound_push=0.004347530742699122, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004347530742699122
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004347530742699122
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3429717.8810324343
Testing bound_push=0.004852795270324498, bound_frac=0.006988594145862805
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004852795270324498
bound_frac: 0.006988594145862805
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004852795270324498
bound_frac = 0.006988594145862805
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3385933.8723477754
Testing bound_push=0.004531103990580495, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004531103990580495
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004531103990580495
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3404497.622158756
Testing bound_push=0.004913796771297276, bound_frac=0.005804370461581875
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004913796771297276
bound_frac: 0.005804370461581875
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004913796771297276
bound_frac = 0.005804370461581875
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3426816.7736551273
Testing bound_push=0.0031768624161903464, bound_frac=0.015426071165506585
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0031768624161903464
bound_frac: 0.015426071165506585
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0031768624161903464
bound_frac = 0.015426071165506585
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425938.1378947594
Testing bound_push=0.00434618716679417, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00434618716679417
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00434618716679417
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3465359.579047227
Testing bound_push=0.004835051096678671, bound_frac=0.005198090334106018
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004835051096678671
bound_frac: 0.005198090334106018
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004835051096678671
bound_frac = 0.005198090334106018
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3415468.0665381243
Testing bound_push=0.004751516237908596, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004751516237908596
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004751516237908596
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3398025.7367547345
Testing bound_push=0.004775966834716587, bound_frac=0.005375118703012796
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004775966834716587
bound_frac: 0.005375118703012796
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004775966834716587
bound_frac = 0.005375118703012796
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3399816.835642661
Testing bound_push=0.0029483387077570166, bound_frac=0.024028499844431492
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0029483387077570166
bound_frac: 0.024028499844431492
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0029483387077570166
bound_frac = 0.024028499844431492
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3434259.7158072246
Testing bound_push=0.004343684430265991, bound_frac=1e-06
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.004343684430265991
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004343684430265991
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3465781.9961978425
Testing bound_push=0.0046789244641119564, bound_frac=0.004682455773961558
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0046789244641119564
bound_frac: 0.004682455773961558
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0046789244641119564
bound_frac = 0.004682455773961558
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3383971.920580663
Testing bound_push=0.005045052404632077, bound_frac=0.0010853015151165363
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005045052404632077
bound_frac: 0.0010853015151165363
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005045052404632077
bound_frac = 0.0010853015151165363
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3383552.168661605
Testing bound_push=0.005235480128676201, bound_frac=0.006486628339087037
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005235480128676201
bound_frac: 0.006486628339087037
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005235480128676201
bound_frac = 0.006486628339087037
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3386338.712283867
Stopping search: maximum iterations reached --> 10
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.005045052404632077
bound_frac: 0.0010853015151165363
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005045052404632077
bound_frac = 0.0010853015151165363
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3383552.168661605
Solve_result:  solved
Solve_time: 0.7384789999999981 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(59, 71)  True    33,83,552     60,29,984     0.99s       limit         No        66.58s
(25, 69)  True    33,83,552     34,65,529     0.3s        solved        No        66.97s
(35, 68)  True    33,83,552     50,14,684     1.17s       limit         No        68.22s
(2, 66)   True    33,83,552     33,78,415     0.52s       solved        Yes       68.83s

visited_nodes: [71, 69, 68, 66]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 2, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(69, 60)  True    33,78,415     33,68,667     0.18s       solved        Yes       69.14s

visited_nodes: [71, 69, 68, 66, 60]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 56)  True    33,68,667     37,92,831     1.58s       limit         No        70.84s
(20, 32)  True    33,68,667     33,93,056     0.43s       solved        No        71.36s
(4, 33)   True    33,68,667     70,77,821     1.15s       limit         No        72.6s
(32, 16)  True    33,68,667     33,81,603     0.18s       solved        No        72.87s
(15, 35)  True    33,68,667     38,65,483     1.05s       limit         No        74.01s
(54, 39)  True    33,68,667     33,71,534     0.33s       solved        No        74.42s
(39, 25)  True    33,68,667     34,31,148     0.23s       solved        No        74.75s
(16, 12)  True    33,68,667     33,94,296     0.21s       solved        No        75.04s
(11, 40)  True    33,68,667     33,69,429     0.19s       solved        No        75.32s
(44, 52)  True    33,68,667     33,99,652     0.35s       solved        No        75.76s
(47, 45)  True    33,68,667     33,80,303     0.2s        solved        No        76.04s
(14, 19)  True    33,68,667     33,68,553     0.23s       solved        Yes       76.36s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(52, 14)  True    33,68,553     33,88,971     0.18s       solved        No        76.68s
(53, 6)   True    33,68,553     35,15,971     0.49s       solved        No        77.26s
(48, 36)  True    33,68,553     33,74,746     0.18s       solved        No        77.53s
(10, 13)  True    33,68,553     33,81,403     0.21s       solved        No        77.84s
(8, 53)   True    33,68,553     34,59,264     0.85s       solved        No        78.78s
(45, 44)  True    33,68,553     34,58,353     0.61s       solved        No        79.48s
(13, 47)  True    33,68,553     33,68,206     0.18s       solved        Yes       79.75s

visited_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 14, 6, 36, 13, 53, 44, 47]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(37, 57)  True    33,68,206     41,21,870     0.48s       failure       No        80.36s

**********************************Final best results******************************************

Water Network: d12
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,31       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,51       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,18       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_3,39       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_4,64       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_5,68       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_6,27       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_6,40       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_7,50       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_8,36       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_8,53       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,49       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_10,28      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_10,45      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_11,6       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_12,16      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_12,32      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_13,10      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_14,52      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_14,66      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_15,11      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_16,20      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_16,56      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_17,7       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_18,41      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_19,14      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,21      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_21,9       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_22,49      |                   -0 |           2.1e-07    |
+-----------------+----------------------+----------------------+
| con2_23,56      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_23,62      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,34      |                   -0 |           5.5e-07    |
+-----------------+----------------------+----------------------+
| con2_25,39      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_25,55      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_26,44      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_27,19      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_28,50      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_29,17      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_30,13      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_30,36      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_31,28      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,16      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,20      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,21      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_33,4       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_33,64      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_34,26      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_35,11      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_35,15      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_36,48      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,57      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_38,30      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_38,31      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_39,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_39,69      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_40,11      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_40,35      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_41,66      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,40      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_43,72      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_44,19      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_45,47      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_46,61      |                   -0 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_47,10      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_47,13      |                    0 |           0.00067888 |
+-----------------+----------------------+----------------------+
| con2_48,13      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_48,34      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_49,28      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,45      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,52      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_51,14      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,44      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_53,6       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_53,19      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_54,3       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_55,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_56,12      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_57,33      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,43      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_59,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,55      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,71      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_61,23      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_62,37      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_62,57      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_63,62      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_64,38      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_65,73      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_66,2       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_66,52      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_67,58      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_68,35      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_68,42      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_69,25      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_69,60      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_70,69      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_71,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_71,59      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,33      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_73,29      |                   -0 |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 7.693363931474423e-11
Total relative constraint violation: 0.0006796603219780561
*******************************************************************************

Final best objective: 3368206.217653041
Number of nlp problem solved: 81
Total number of iteration: 5
Solver_time: 76.59 seconds
Heuristic elapsed time: 80.39 seconds

