Water Network: d12 

Testing bound_push=0.00044473410126116234, bound_frac=0.008303298549668391
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00044473410126116234
bound_frac: 0.008303298549668391
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00044473410126116234
bound_frac = 0.008303298549668391
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450303.374812378
Testing bound_push=0.0005275086814189939, bound_frac=0.003862581233620193
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005275086814189939
bound_frac: 0.003862581233620193
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005275086814189939
bound_frac = 0.003862581233620193
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3426917.880392277
Testing bound_push=0.0007454105361027843, bound_frac=0.0027924936446591503
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007454105361027843
bound_frac: 0.0027924936446591503
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007454105361027843
bound_frac = 0.0027924936446591503
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3438336.1893226784
Testing bound_push=0.000786907923458194, bound_frac=0.0017769904999310137
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000786907923458194
bound_frac: 0.0017769904999310137
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000786907923458194
bound_frac = 0.0017769904999310137
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3439333.77189906
Testing bound_push=0.0006118471770962608, bound_frac=0.00686049107479982
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006118471770962608
bound_frac: 0.00686049107479982
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006118471770962608
bound_frac = 0.00686049107479982
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450347.5214523193
Testing bound_push=4.346936901015476e-05, bound_frac=0.007956031910637379
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 4.346936901015476e-05
bound_frac: 0.007956031910637379
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.346936901015476e-05
bound_frac = 0.007956031910637379
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425114.9900133675
Testing bound_push=0.000919921633816573, bound_frac=0.0013839889034417954
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000919921633816573
bound_frac: 0.0013839889034417954
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000919921633816573
bound_frac = 0.0013839889034417954
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3407798.1815116177
Testing bound_push=0.001, bound_frac=0.0033898494106557433
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.0033898494106557433
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0033898494106557433
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450568.753629547
Testing bound_push=0.001, bound_frac=0.001085892704105502
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.001085892704105502
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.001085892704105502
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450568.753629547
Testing bound_push=0.0008861654672591059, bound_frac=0.008065043815530233
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008861654672591059
bound_frac: 0.008065043815530233
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008861654672591059
bound_frac = 0.008065043815530233
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3424658.0259969044
Testing bound_push=2.3791011356572776e-05, bound_frac=0.00583723923198436
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 2.3791011356572776e-05
bound_frac: 0.00583723923198436
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.3791011356572776e-05
bound_frac = 0.00583723923198436
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3416698.247857978
Testing bound_push=0.001, bound_frac=0.0001446927383525966
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.0001446927383525966
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0001446927383525966
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450568.753629547
Testing bound_push=0.001, bound_frac=0.0028062016269384113
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.0028062016269384113
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0028062016269384113
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450568.753629547
Testing bound_push=0.001, bound_frac=0.000997040111014314
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.000997040111014314
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.000997040111014314
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450568.753629547
Testing bound_push=0.001, bound_frac=0.007738618479848098
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.001
bound_frac: 0.007738618479848098
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.007738618479848098
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3450568.753629547
Testing bound_push=0.00026477495819868474, bound_frac=0.004678122795284185
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00026477495819868474
bound_frac: 0.004678122795284185
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026477495819868474
bound_frac = 0.004678122795284185
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3388088.1916335854
Testing bound_push=0.0007955937176001927, bound_frac=0.0009624425064462348
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007955937176001927
bound_frac: 0.0009624425064462348
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007955937176001927
bound_frac = 0.0009624425064462348
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3425183.863548997
Testing bound_push=0.0009253081451364295, bound_frac=0.002663119289653976
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0009253081451364295
bound_frac: 0.002663119289653976
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009253081451364295
bound_frac = 0.002663119289653976
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3409362.9553412464
Testing bound_push=0.0007369058464310359, bound_frac=0.0012302651420869628
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0007369058464310359
bound_frac: 0.0012302651420869628
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007369058464310359
bound_frac = 0.0012302651420869628
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3447046.04655091
Testing bound_push=0.0008484203089946769, bound_frac=0.006943856014396932
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008484203089946769
bound_frac: 0.006943856014396932
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008484203089946769
bound_frac = 0.006943856014396932
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3417552.2251738356
Testing bound_push=0.00038526693161974076, bound_frac=0.004098564576934097
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00038526693161974076
bound_frac: 0.004098564576934097
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038526693161974076
bound_frac = 0.004098564576934097
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3441207.6046269285
Testing bound_push=0.0006038225867243524, bound_frac=0.002382807517675641
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0006038225867243524
bound_frac: 0.002382807517675641
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006038225867243524
bound_frac = 0.002382807517675641
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445710.663349796
Testing bound_push=0.0008243963659608843, bound_frac=0.003565575872898451
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0008243963659608843
bound_frac: 0.003565575872898451
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008243963659608843
bound_frac = 0.003565575872898451
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3427501.2315116962
Testing bound_push=0.00039942502780057013, bound_frac=0.0030016730394195946
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00039942502780057013
bound_frac: 0.0030016730394195946
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039942502780057013
bound_frac = 0.0030016730394195946
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3472550.4793872354
Testing bound_push=0.000626844568341584, bound_frac=0.005761085948964906
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.000626844568341584
bound_frac: 0.005761085948964906
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000626844568341584
bound_frac = 0.005761085948964906
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3446131.878915465
Testing bound_push=0.0003750375342800663, bound_frac=0.004118541539286322
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0003750375342800663
bound_frac: 0.004118541539286322
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003750375342800663
bound_frac = 0.004118541539286322
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445736.1261836356
Testing bound_push=0.00047985861206406837, bound_frac=0.0029967616206453902
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00047985861206406837
bound_frac: 0.0029967616206453902
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00047985861206406837
bound_frac = 0.0029967616206453902
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3472955.447313929
Testing bound_push=0.0005347395475938073, bound_frac=0.00420846080780909
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.0005347395475938073
bound_frac: 0.00420846080780909
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005347395475938073
bound_frac = 0.00420846080780909
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3436854.492459532
Testing bound_push=0.00033138505252418163, bound_frac=0.003980856802143578
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00033138505252418163
bound_frac: 0.003980856802143578
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00033138505252418163
bound_frac = 0.003980856802143578
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445522.7897364204
Testing bound_push=0.00044624576042020554, bound_frac=0.005269007330608982
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00044624576042020554
bound_frac: 0.005269007330608982
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00044624576042020554
bound_frac = 0.005269007330608982
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 3445522.7897364227
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(61, 23), (1, 31), (29, 17), (58, 43), (67, 58), (43, 72), (17, 7), (22, 49), (46, 61), (73, 29), (72, 33), (70, 69), (63, 62), (7, 50), (24, 34), (65, 73)}
super_source_out_arc: [(1, 31), (31, 28), (31, 38)] 

bound_push: 0.00026477495819868474
bound_frac: 0.004678122795284185
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00026477495819868474
bound_frac = 0.004678122795284185
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  3388088.1916335854
Solve_result:  solved
Solve_time: 2.261511999999996 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [71, 69, 68, 66, 60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(59, 71)  True    33,88,088     66,78,660     2.15s       limit         No        53.67s
(25, 69)  True    33,88,088     34,63,068     0.58s       solved        No        54.33s
(35, 68)  True    33,88,088     53,34,503     2.02s       limit         No        56.4s
(2, 66)   True    33,88,088     33,79,343     0.42s       solved        Yes       56.9s

visited_nodes: [71, 69, 68, 66]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [60, 56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 19, 6, 36, 13, 53, 44, 47, 2, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(69, 60)  True    33,79,343     33,68,019     0.17s       solved        Yes       57.27s

visited_nodes: [71, 69, 68, 66, 60]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [56, 32, 33, 16, 35, 39, 25, 12, 40, 52, 45, 14, 6, 36, 13, 53, 44, 47, 57] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(12, 56)  True    33,68,019     37,10,841     2.02s       limit         No        59.45s
(20, 32)  True    33,68,019     33,94,714     0.19s       solved        No        59.7s
(4, 33)   True    33,68,019     55,74,925     1.99s       limit         No        61.75s
(32, 16)  True    33,68,019     33,80,783     0.16s       solved        No        61.97s
(15, 35)  True    33,68,019     42,04,341     1.98s       limit         No        64.01s
(54, 39)  True    33,68,019     33,71,906     0.26s       solved        No        64.43s
(39, 25)  True    33,68,019     34,28,393     0.32s       solved        No        64.8s
(16, 12)  True    33,68,019     33,91,895     0.13s       solved        No        65.0s
(11, 40)  True    33,68,019     33,69,232     0.21s       solved        No        65.28s
(44, 52)  True    33,68,019     33,98,173     0.52s       solved        No        65.86s
(47, 45)  True    33,68,019     33,78,309     0.14s       solved        No        66.2s
(52, 14)  True    33,68,019     33,87,324     0.27s       solved        No        66.61s
(53, 6)   True    33,68,019     35,86,183     1.26s       solved        No        67.99s
(48, 36)  True    33,68,019     33,74,356     0.18s       solved        No        68.29s
(10, 13)  True    33,68,019     33,78,686     0.78s       solved        No        69.46s
(8, 53)   True    33,68,019     34,52,753     0.6s        solved        No        70.19s
(45, 44)  True    33,68,019     34,59,472     0.86s       solved        No        71.11s
(13, 47)  True    33,68,019     33,68,440     0.22s       solved        No        71.44s
(37, 57)  True    33,68,019     35,44,405     1.26s       solved        No        72.86s

**********************************Final best results******************************************

Water Network: d12
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,31       |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_2,51       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_3,18       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_3,39       |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_4,64       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_5,68       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_6,27       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_6,40       |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_7,50       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_8,36       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_8,53       |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_9,49       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_10,28      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_10,45      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_11,6       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_12,16      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_12,32      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_13,10      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_14,52      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_14,66      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_15,11      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_16,20      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_16,56      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_17,7       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_18,41      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_19,14      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_20,21      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_21,9       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_22,49      |                   -0 |            2.1e-07   |
+-----------------+----------------------+----------------------+
| con2_23,56      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_23,62      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_24,34      |                   -0 |            5.5e-07   |
+-----------------+----------------------+----------------------+
| con2_25,39      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_25,55      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_26,44      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_27,19      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_28,50      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_29,17      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_30,13      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_30,36      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_31,28      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_32,16      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_32,20      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_32,21      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_33,4       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_33,64      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_34,26      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_35,11      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_35,15      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_36,48      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_37,57      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_38,30      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_38,31      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_39,54      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_39,69      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_40,11      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_40,35      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_41,66      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_42,40      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_43,72      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_44,19      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_44,45      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_45,47      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_46,61      |                   -0 |            2e-08     |
+-----------------+----------------------+----------------------+
| con2_47,10      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_47,13      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_48,13      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_48,34      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_49,28      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_50,45      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_50,52      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_51,14      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_52,44      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_53,6       |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_53,19      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_54,3       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_55,54      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_56,12      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_57,33      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_58,43      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_59,5       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_60,55      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_60,71      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_61,23      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_62,37      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_62,57      |                    0 |            0         |
+-----------------+----------------------+----------------------+
| con2_63,62      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_64,38      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_65,73      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_66,2       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_66,52      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_67,58      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_68,35      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_68,42      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_69,25      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_69,60      |                   -0 |           -0.0109604 |
+-----------------+----------------------+----------------------+
| con2_70,69      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_71,5       |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_71,59      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_72,33      |                   -0 |            0         |
+-----------------+----------------------+----------------------+
| con2_73,29      |                   -0 |            0         |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 7.217100938372096e-11
Total relative constraint violation: 0.010961190993572588
*******************************************************************************

Final best objective: 3368018.616113626
Number of nlp problem solved: 55
Total number of iteration: 3
Solver_time: 68.98 seconds
Heuristic elapsed time: 72.87 seconds

