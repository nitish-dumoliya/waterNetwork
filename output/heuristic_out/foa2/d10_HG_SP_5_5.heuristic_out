Water Network: d10_HG_SP_5_5 

Testing bound_push=0.00912293055184713, bound_frac=0.04366656196517585
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00912293055184713
bound_frac: 0.04366656196517585
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00912293055184713
bound_frac = 0.04366656196517585
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9448166.264811074
Testing bound_push=0.0025822495609832143, bound_frac=0.027203701283826175
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0025822495609832143
bound_frac: 0.027203701283826175
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0025822495609832143
bound_frac = 0.027203701283826175
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9645246.77658337
Testing bound_push=0.0004817811118465949, bound_frac=0.047989913656281684
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004817811118465949
bound_frac: 0.047989913656281684
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004817811118465949
bound_frac = 0.047989913656281684
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9655751.682217382
Testing bound_push=0.0036471699465947132, bound_frac=0.009487896878203205
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0036471699465947132
bound_frac: 0.009487896878203205
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0036471699465947132
bound_frac = 0.009487896878203205
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9620387.537573723
Testing bound_push=0.008534514606717468, bound_frac=0.09672174355462389
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008534514606717468
bound_frac: 0.09672174355462389
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008534514606717468
bound_frac = 0.09672174355462389
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9464287.182798339
Testing bound_push=0.01, bound_frac=0.01156210293543318
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.01156210293543318
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.01156210293543318
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.007351034175567246, bound_frac=0.038049901568123455
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.007351034175567246
bound_frac: 0.038049901568123455
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.007351034175567246
bound_frac = 0.038049901568123455
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9654240.85996116
Testing bound_push=0.006918835870698422, bound_frac=0.07775366664230551
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.006918835870698422
bound_frac: 0.07775366664230551
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.006918835870698422
bound_frac = 0.07775366664230551
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9673241.64837562
Testing bound_push=0.009640489438703739, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009640489438703739
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009640489438703739
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9473930.380611558
Testing bound_push=0.008816369957362546, bound_frac=0.09686495158144721
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008816369957362546
bound_frac: 0.09686495158144721
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008816369957362546
bound_frac = 0.09686495158144721
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9464293.80635431
Testing bound_push=0.01, bound_frac=0.017042101951450957
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.017042101951450957
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.017042101951450957
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.008267869951407622, bound_frac=0.04092808767835643
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008267869951407622
bound_frac: 0.04092808767835643
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008267869951407622
bound_frac = 0.04092808767835643
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9770072.474541636
Testing bound_push=0.01, bound_frac=0.07378573562193867
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.07378573562193867
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.07378573562193867
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.01, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9698492.249620691
Testing bound_push=0.009004457883869993, bound_frac=0.08759285874486843
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009004457883869993
bound_frac: 0.08759285874486843
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009004457883869993
bound_frac = 0.08759285874486843
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9462759.340948217
Testing bound_push=0.01, bound_frac=0.023058384840865195
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.023058384840865195
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.023058384840865195
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.008814833490028175, bound_frac=0.037352966588852204
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008814833490028175
bound_frac: 0.037352966588852204
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008814833490028175
bound_frac = 0.037352966588852204
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9402830.451695878
Testing bound_push=0.01, bound_frac=0.057403278538084725
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.057403278538084725
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.057403278538084725
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.01, bound_frac=0.0045249973076150534
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.0045249973076150534
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.0045249973076150534
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.009017820336269685, bound_frac=0.059263934817410845
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009017820336269685
bound_frac: 0.059263934817410845
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009017820336269685
bound_frac = 0.059263934817410845
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9390715.574972177
Testing bound_push=0.009752871903378587, bound_frac=0.03589271378901181
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009752871903378587
bound_frac: 0.03589271378901181
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009752871903378587
bound_frac = 0.03589271378901181
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9699102.884176929
Testing bound_push=0.009189442146432462, bound_frac=0.04484895592297979
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009189442146432462
bound_frac: 0.04484895592297979
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009189442146432462
bound_frac = 0.04484895592297979
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9693775.840043359
Testing bound_push=0.009133732813719484, bound_frac=0.04590276615316963
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009133732813719484
bound_frac: 0.04590276615316963
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009133732813719484
bound_frac = 0.04590276615316963
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9462759.340945382
Testing bound_push=0.01, bound_frac=0.0230705987129031
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.01
bound_frac: 0.0230705987129031
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.0230705987129031
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711107.451843016
Testing bound_push=0.009024501562469532, bound_frac=0.04509947285368206
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009024501562469532
bound_frac: 0.04509947285368206
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009024501562469532
bound_frac = 0.04509947285368206
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9417609.70761333
Testing bound_push=0.009270902537204554, bound_frac=0.04583522462053621
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009270902537204554
bound_frac: 0.04583522462053621
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009270902537204554
bound_frac = 0.04583522462053621
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9709147.084284047
Testing bound_push=0.009358415627173843, bound_frac=0.05013237177127615
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009358415627173843
bound_frac: 0.05013237177127615
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009358415627173843
bound_frac = 0.05013237177127615
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9643620.300382497
Testing bound_push=0.008667223173850458, bound_frac=0.04365421296115301
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008667223173850458
bound_frac: 0.04365421296115301
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008667223173850458
bound_frac = 0.04365421296115301
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9396070.001418257
Testing bound_push=0.009438262717787176, bound_frac=0.02887099706697006
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009438262717787176
bound_frac: 0.02887099706697006
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009438262717787176
bound_frac = 0.02887099706697006
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9643517.803674445
Testing bound_push=0.009022820166912915, bound_frac=0.045425554454287455
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009022820166912915
bound_frac: 0.045425554454287455
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009022820166912915
bound_frac = 0.045425554454287455
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9451235.2542678
Testing bound_push=0.008973865031975189, bound_frac=0.05675720649216209
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008973865031975189
bound_frac: 0.05675720649216209
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008973865031975189
bound_frac = 0.05675720649216209
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9448938.790839354
Testing bound_push=0.009265927193903938, bound_frac=0.05036375496659702
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009265927193903938
bound_frac: 0.05036375496659702
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009265927193903938
bound_frac = 0.05036375496659702
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9700519.742582677
Testing bound_push=0.008563213184360284, bound_frac=0.0428430562911582
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008563213184360284
bound_frac: 0.0428430562911582
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008563213184360284
bound_frac = 0.0428430562911582
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9450331.818040043
Testing bound_push=0.00913682451115345, bound_frac=0.03051940177559155
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00913682451115345
bound_frac: 0.03051940177559155
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00913682451115345
bound_frac = 0.03051940177559155
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9451845.90438607
Testing bound_push=0.009019680019034484, bound_frac=0.051850172146720656
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009019680019034484
bound_frac: 0.051850172146720656
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009019680019034484
bound_frac = 0.051850172146720656
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9464120.919822723
Testing bound_push=0.008850740337602208, bound_frac=0.05672692972175646
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008850740337602208
bound_frac: 0.05672692972175646
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008850740337602208
bound_frac = 0.05672692972175646
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9448938.790842991
Testing bound_push=0.009041643299760205, bound_frac=0.048712248047146564
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009041643299760205
bound_frac: 0.048712248047146564
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009041643299760205
bound_frac = 0.048712248047146564
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9449613.863599895
Testing bound_push=0.008752640034178655, bound_frac=0.04737896078189372
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008752640034178655
bound_frac: 0.04737896078189372
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008752640034178655
bound_frac = 0.04737896078189372
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9464120.919789117
Testing bound_push=0.008969137332777197, bound_frac=0.04373438887976004
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008969137332777197
bound_frac: 0.04373438887976004
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008969137332777197
bound_frac = 0.04373438887976004
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9449865.216971945
Testing bound_push=0.009017522194203943, bound_frac=0.058492499188970724
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009017522194203943
bound_frac: 0.058492499188970724
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009017522194203943
bound_frac = 0.058492499188970724
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9466244.785518533
Testing bound_push=0.008863564042179882, bound_frac=0.05372892474231841
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008863564042179882
bound_frac: 0.05372892474231841
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008863564042179882
bound_frac = 0.05372892474231841
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9464866.408443553
Testing bound_push=0.008846253722960109, bound_frac=0.04730133286949754
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008846253722960109
bound_frac: 0.04730133286949754
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008846253722960109
bound_frac = 0.04730133286949754
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9462090.44250752
Testing bound_push=0.008928312536237467, bound_frac=0.05367174220190004
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008928312536237467
bound_frac: 0.05367174220190004
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008928312536237467
bound_frac = 0.05367174220190004
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9369761.249125438
Testing bound_push=0.008872366270847365, bound_frac=0.05418154475915895
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008872366270847365
bound_frac: 0.05418154475915895
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008872366270847365
bound_frac = 0.05418154475915895
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9466966.570423426
Testing bound_push=0.008987630842536835, bound_frac=0.06048665975826403
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008987630842536835
bound_frac: 0.06048665975826403
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008987630842536835
bound_frac = 0.06048665975826403
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9466186.853636991
Testing bound_push=0.008974519699104124, bound_frac=0.049320260118249665
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008974519699104124
bound_frac: 0.049320260118249665
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008974519699104124
bound_frac = 0.049320260118249665
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9449613.863607801
Testing bound_push=0.008741457635708327, bound_frac=0.04916487614309129
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008741457635708327
bound_frac: 0.04916487614309129
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008741457635708327
bound_frac = 0.04916487614309129
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9464120.919822296
Testing bound_push=0.009016148787266871, bound_frac=0.0568181329119032
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009016148787266871
bound_frac: 0.0568181329119032
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009016148787266871
bound_frac = 0.0568181329119032
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9374611.904644262
Testing bound_push=0.008849903047193753, bound_frac=0.05862621983377949
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008849903047193753
bound_frac: 0.05862621983377949
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008849903047193753
bound_frac = 0.05862621983377949
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9375935.481132532
Testing bound_push=0.008960287477118979, bound_frac=0.05853054716257919
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008960287477118979
bound_frac: 0.05853054716257919
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008960287477118979
bound_frac = 0.05853054716257919
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9374674.657411814
Testing bound_push=0.009026578368500663, bound_frac=0.04705149436581895
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009026578368500663
bound_frac: 0.04705149436581895
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009026578368500663
bound_frac = 0.04705149436581895
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9450017.115840826
Testing bound_push=0.00874118011218782, bound_frac=0.05131357315938385
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00874118011218782
bound_frac: 0.05131357315938385
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00874118011218782
bound_frac = 0.05131357315938385
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9403486.579124594
Testing bound_push=0.009008860593912772, bound_frac=0.05649692201848096
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.009008860593912772
bound_frac: 0.05649692201848096
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009008860593912772
bound_frac = 0.05649692201848096
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9461753.059413226
Testing bound_push=0.00886775893843572, bound_frac=0.059380007248641696
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00886775893843572
bound_frac: 0.059380007248641696
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00886775893843572
bound_frac = 0.059380007248641696
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9374637.128970267
Testing bound_push=0.008938117087372483, bound_frac=0.05683845172773975
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008938117087372483
bound_frac: 0.05683845172773975
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008938117087372483
bound_frac = 0.05683845172773975
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9405397.753837178
Stopping search: maximum iterations reached --> 10
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.008928312536237467
bound_frac: 0.05367174220190004
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008928312536237467
bound_frac = 0.05367174220190004
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9369761.249125438
Solve_result:  solved
Solve_time: 2.902590000000032 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    93,69,761     1,29,14,247   1.18s       limit         No        286.4s
(9, 149)  True    93,69,761     1,27,17,635   1.15s       limit         No        287.71s
(15, 150) True    93,69,761     1,18,94,586   1.04s       limit         No        288.9s
(154, 151)True    93,69,761     98,51,367     1.36s       solved        No        290.43s
(109, 153)True    93,69,761     1,14,15,190   1.9s        limit         No        292.49s
(29, 155) True    93,69,761     1,04,24,266   1.95s       limit         No        294.61s
(67, 135) True    93,69,761     1,29,48,155   1.96s       limit         No        296.74s
(83, 141) True    93,69,761     1,33,23,903   1.96s       limit         No        298.86s
(130, 124)True    93,69,761     93,77,289     1.17s       solved        No        300.2s
(50, 129) True    93,69,761     95,93,104     1.42s       solved        No        301.78s
(81, 9)   True    93,69,761     1,26,11,550   2.07s       limit         No        304.02s
(35, 146) True    93,69,761     1,01,88,875   1.96s       limit         No        306.14s
(107, 27) True    93,69,761     1,19,16,894   2.07s       limit         No        308.37s
(115, 3)  True    93,69,761     96,82,908     1.82s       limit         No        310.36s
(133, 103)True    93,69,761     1,30,18,470   1.99s       limit         No        312.52s
(132, 57) True    93,69,761     95,77,065     1.27s       solved        No        313.95s
(117, 116)True    93,69,761     1,03,01,188   1.86s       limit         No        315.98s
(32, 75)  True    93,69,761     93,82,553     1.92s       limit         No        318.07s
(72, 25)  True    93,69,761     1,32,89,613   1.99s       limit         No        320.22s
(113, 20) True    93,69,761     94,84,265     1.02s       solved        No        321.4s
(137, 100)True    93,69,761     1,23,54,213   2.02s       limit         No        323.59s
(108, 59) True    93,69,761     1,29,80,770   1.98s       limit         No        325.73s
(6, 121)  True    93,69,761     96,85,370     1.98s       limit         No        327.88s
(28, 102) True    93,69,761     1,03,46,334   2.02s       limit         No        330.07s
(21, 58)  True    93,69,761     93,83,790     1.03s       solved        No        331.26s
(95, 16)  True    93,69,761     1,11,69,262   1.9s        limit         No        333.33s
(116, 63) True    93,69,761     1,14,14,076   1.94s       limit         No        335.43s
(34, 5)   True    93,69,761     1,06,56,398   2.05s       limit         No        337.65s
(142, 32) True    93,69,761     93,66,078     0.63s       solved        Yes       338.45s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [142, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(13, 142) True    93,66,078     93,84,883     1.68s       solved        No        340.38s
(110, 90) True    93,66,078     96,74,416     1.89s       solved        No        342.44s
(22, 26)  True    93,66,078     1,36,58,593   2.03s       limit         No        344.63s
(99, 64)  True    93,66,078     99,57,507     1.03s       infeasible    No        345.83s
(45, 65)  True    93,66,078     93,81,250     1.55s       solved        No        347.55s
(112, 79) True    93,66,078     97,13,078     2.02s       limit         No        349.73s
(24, 22)  True    93,66,078     97,36,413     1.37s       infeasible    No        351.27s
(86, 2)   True    93,66,078     93,84,706     1.45s       solved        No        352.89s
(34, 52)  True    93,66,078     94,13,715     1.64s       solved        No        354.69s
(94, 42)  True    93,66,078     1,30,44,250   1.9s        limit         No        356.75s
(23, 112) True    93,66,078     94,74,845     1.3s        solved        No        358.23s
(84, 4)   True    93,66,078     93,94,736     0.87s       solved        No        359.26s
(147, 123)True    93,66,078     1,09,98,546   1.94s       limit         No        361.36s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,40       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,86       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,106      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,115      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_4,1        |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_5,85       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_6,55       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_7,1        |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_8,11       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,81       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,141      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,151      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_10,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_11,26      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,100     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_13,49      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_14,112     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_15,132     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_15,150     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_16,95      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_17,10      |                   -0 |           6.5e-07    |
+-----------------+----------------------+----------------------+
| con2_18,20      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_18,111     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_19,78      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,7       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_20,113     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_21,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_22,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_23,56      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_24,10      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,22      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_25,91      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_26,22      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_26,54      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_27,107     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_28,20      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_29,75      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_30,98      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_31,53      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,142     |                    0 |           0.00059212 |
+-----------------+----------------------+----------------------+
| con2_33,122     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_34,5       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_34,52      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_35,93      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_36,100     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,105     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_38,16      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_39,16      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_39,121     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_40,34      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_41,79      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,94      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_43,79      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_44,49      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_44,134     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_45,7       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_46,109     |                   -0 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_47,63      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_48,44      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_49,140     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,123     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,129     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_51,37      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,2       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,14      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_53,85      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_54,42      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_55,102     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_56,86      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_57,127     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_57,132     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,21      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,146     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_59,25      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_59,108     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,103     |                   -0 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_61,106     |                   -0 |           1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_62,128     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_63,76      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_64,42      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_64,136     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_65,40      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_65,45      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_66,102     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_67,80      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_68,12      |                   -0 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_69,31      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_70,38      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_70,58      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_71,155     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,25      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,91      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_73,24      |                   -0 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_74,134     |                   -0 |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_75,13      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_75,32      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_76,36      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_77,37      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_78,18      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_79,23      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_79,112     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,8       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_80,12      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_81,47      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_82,27      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_82,51      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_82,89      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_83,145     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_84,4       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_85,40      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_86,4       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_87,98      |                   -0 |           2.4e-07    |
+-----------------+----------------------+----------------------+
| con2_88,149     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_88,154     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_89,27      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_90,41      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_90,110     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_91,118     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_92,108     |                   -0 |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_93,43      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_94,136     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_95,69      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_96,114     |                   -0 |           8e-08      |
+-----------------+----------------------+----------------------+
| con2_97,55      |                   -0 |           3.4e-07    |
+-----------------+----------------------+----------------------+
| con2_98,33      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_99,64      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_99,136     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_100,137    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_101,11     |                   -0 |           2.6e-07    |
+-----------------+----------------------+----------------------+
| con2_102,28     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,19     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,133    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_104,99     |                   -0 |           9.1e-07    |
+-----------------+----------------------+----------------------+
| con2_105,70     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_106,48     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_107,77     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_108,25     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_109,103    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_110,146    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_111,66     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_111,102    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,23     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,52     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_113,30     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_114,73     |                   -0 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_115,106    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,63     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,76     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,117    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_117,59     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_119,86     |                   -0 |           8.5e-07    |
+-----------------+----------------------+----------------------+
| con2_120,143    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_121,6      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_122,7      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_122,84     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_123,125    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_123,147    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_124,51     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_124,130    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_125,109    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_126,3      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_127,120    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_128,3      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_129,71     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_129,123    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_130,82     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_131,125    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_132,117    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_133,19     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_134,32     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,67     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,154    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_136,41     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_137,8      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_138,62     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_139,152    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_140,121    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_141,83     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_141,145    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_142,13     |                   -0 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_143,124    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_144,126    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_144,148    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_145,80     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_146,21     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_146,35     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_147,19     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_148,27     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_148,126    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_149,9      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_150,57     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_151,154    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_152,149    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_153,109    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_153,135    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_154,141    |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_155,29     |                   -0 |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1852759422256225e-10
Total relative constraint violation: 0.0005958332409602711
*******************************************************************************

Final best objective: 9366078.14258409
Number of nlp problem solved: 98
Total number of iteration: 2
Solver_time: 351.85 seconds
Heuristic elapsed time: 361.40 seconds

