Water Network: d10_HG_SP_5_5 

Testing bound_push=0.0007397652747786803, bound_frac=0.008215781068619695
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007397652747786803
bound_frac: 0.008215781068619695
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007397652747786803
bound_frac = 0.008215781068619695
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9657177.813192714
Testing bound_push=0.0003001614462089282, bound_frac=0.008405209569316632
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003001614462089282
bound_frac: 0.008405209569316632
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003001614462089282
bound_frac = 0.008405209569316632
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9730162.162113752
Testing bound_push=0.0009119571195383511, bound_frac=0.000571921479509163
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009119571195383511
bound_frac: 0.000571921479509163
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009119571195383511
bound_frac = 0.000571921479509163
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9659428.074848121
Testing bound_push=0.00010235466890451883, bound_frac=0.008562957038789818
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00010235466890451883
bound_frac: 0.008562957038789818
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010235466890451883
bound_frac = 0.008562957038789818
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9502017.316355592
Testing bound_push=0.0002507883767853707, bound_frac=0.003933331255602498
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002507883767853707
bound_frac: 0.003933331255602498
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002507883767853707
bound_frac = 0.003933331255602498
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9488095.953106316
Testing bound_push=0.00034561315637124125, bound_frac=0.006502198014585124
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00034561315637124125
bound_frac: 0.006502198014585124
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034561315637124125
bound_frac = 0.006502198014585124
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9675191.6196346
Testing bound_push=1e-06, bound_frac=0.004475707119132297
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.004475707119132297
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.004475707119132297
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9695908.458197188
Testing bound_push=0.001, bound_frac=0.0016782478798909857
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.001
bound_frac: 0.0016782478798909857
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0016782478798909857
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9646132.31368717
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9695908.458197188
Testing bound_push=1e-06, bound_frac=0.003395135871492201
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.003395135871492201
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.003395135871492201
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9695908.458197188
Testing bound_push=0.00017044326844890438, bound_frac=0.00563517727938201
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00017044326844890438
bound_frac: 0.00563517727938201
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017044326844890438
bound_frac = 0.00563517727938201
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9637322.997768873
Testing bound_push=1e-06, bound_frac=0.0024780727968143623
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.0024780727968143623
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0024780727968143623
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9695908.458197188
Testing bound_push=0.0009052597618085794, bound_frac=0.002967132568169023
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009052597618085794
bound_frac: 0.002967132568169023
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009052597618085794
bound_frac = 0.002967132568169023
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9657524.310086217
Testing bound_push=5.466541305026133e-06, bound_frac=0.008678285074200345
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 5.466541305026133e-06
bound_frac: 0.008678285074200345
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.466541305026133e-06
bound_frac = 0.008678285074200345
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9709105.361438721
Testing bound_push=1e-06, bound_frac=0.0032697736063424573
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1e-06
bound_frac: 0.0032697736063424573
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0032697736063424573
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9695908.458197188
Testing bound_push=0.00010275444116892869, bound_frac=0.004474930354336104
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00010275444116892869
bound_frac: 0.004474930354336104
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010275444116892869
bound_frac = 0.004474930354336104
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9572770.33701773
Testing bound_push=2.892853156111852e-05, bound_frac=0.0024765559448516345
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 2.892853156111852e-05
bound_frac: 0.0024765559448516345
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.892853156111852e-05
bound_frac = 0.0024765559448516345
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9419550.859349264
Testing bound_push=0.000657832380699507, bound_frac=0.0034833137310424315
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.000657832380699507
bound_frac: 0.0034833137310424315
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000657832380699507
bound_frac = 0.0034833137310424315
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9645246.772449605
Testing bound_push=2.9799907186331702e-05, bound_frac=0.005432400318360059
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 2.9799907186331702e-05
bound_frac: 0.005432400318360059
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.9799907186331702e-05
bound_frac = 0.005432400318360059
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9485134.357770454
Testing bound_push=1.1245722359717867e-05, bound_frac=0.0032315028985221263
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1.1245722359717867e-05
bound_frac: 0.0032315028985221263
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.1245722359717867e-05
bound_frac = 0.0032315028985221263
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9474342.992730638
Testing bound_push=6.442216729878901e-05, bound_frac=0.00333767942899838
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 6.442216729878901e-05
bound_frac: 0.00333767942899838
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.442216729878901e-05
bound_frac = 0.00333767942899838
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9414455.572801786
Testing bound_push=4.5830679996372646e-05, bound_frac=0.002851589884338125
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.5830679996372646e-05
bound_frac: 0.002851589884338125
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.5830679996372646e-05
bound_frac = 0.002851589884338125
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9422442.950544925
Testing bound_push=0.0004856226187986664, bound_frac=0.0036919780497542054
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0004856226187986664
bound_frac: 0.0036919780497542054
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004856226187986664
bound_frac = 0.0036919780497542054
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9741988.132307362
Testing bound_push=5.441389881281566e-05, bound_frac=0.002763449190683593
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 5.441389881281566e-05
bound_frac: 0.002763449190683593
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.441389881281566e-05
bound_frac = 0.002763449190683593
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9434869.225733045
Testing bound_push=2.6295254848881525e-05, bound_frac=0.0032439254152789496
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 2.6295254848881525e-05
bound_frac: 0.0032439254152789496
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.6295254848881525e-05
bound_frac = 0.0032439254152789496
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9613072.983835703
Testing bound_push=4.525603036371918e-05, bound_frac=0.0027690539663295178
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.525603036371918e-05
bound_frac: 0.0027690539663295178
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.525603036371918e-05
bound_frac = 0.0027690539663295178
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9610608.127913268
Testing bound_push=5.8929997983335095e-05, bound_frac=0.0031206278554454913
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 5.8929997983335095e-05
bound_frac: 0.0031206278554454913
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 5.8929997983335095e-05
bound_frac = 0.0031206278554454913
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9606350.087970044
Testing bound_push=0.00044794001047751976, bound_frac=0.0037112133712363417
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00044794001047751976
bound_frac: 0.0037112133712363417
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00044794001047751976
bound_frac = 0.0037112133712363417
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9728112.097403955
Testing bound_push=7.086496924846226e-05, bound_frac=0.0014307962299354873
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 7.086496924846226e-05
bound_frac: 0.0014307962299354873
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 7.086496924846226e-05
bound_frac = 0.0014307962299354873
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731591.68187551
Testing bound_push=3.3166591296373e-05, bound_frac=0.0032711937954244246
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 3.3166591296373e-05
bound_frac: 0.0032711937954244246
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 3.3166591296373e-05
bound_frac = 0.0032711937954244246
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9470049.783635251
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 6.442216729878901e-05
bound_frac: 0.00333767942899838
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.442216729878901e-05
bound_frac = 0.00333767942899838
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9414455.572801786
Solve_result:  solved
Solve_time: 9.584021000000007 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    94,14,456     1,23,11,376   2.23s       limit         No        226.83s
(9, 149)  True    94,14,456     1,29,47,852   3.72s       limit         No        230.66s
(15, 150) True    94,14,456     1,22,32,963   3.56s       limit         No        234.36s
(154, 151)True    94,14,456     98,73,496     0.66s       solved        No        235.16s
(109, 153)True    94,14,456     1,16,27,814   3.77s       limit         No        239.03s
(29, 155) True    94,14,456     1,02,89,295   1.23s       solved        No        240.36s
(67, 135) True    94,14,456     1,55,15,964   3.69s       limit         No        244.2s
(83, 141) True    94,14,456     1,44,31,297   3.63s       limit         No        247.96s
(130, 124)True    94,14,456     94,08,700     0.58s       solved        Yes       248.68s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 129) True    94,08,700     95,74,095     2.09s       solved        No        250.93s
(82, 130) True    94,08,700     93,99,424     0.25s       solved        Yes       251.32s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(81, 9)   True    93,99,424     1,43,34,085   3.62s       limit         No        255.1s
(35, 146) True    93,99,424     96,22,893     0.92s       solved        No        256.13s
(107, 27) True    93,99,424     1,22,69,973   3.66s       limit         No        259.9s
(130, 82) True    93,99,424     93,85,859     0.19s       solved        Yes       260.31s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 40, 65, 79, 22, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 3)  True    93,85,859     96,08,230     3.71s       limit         No        264.23s
(133, 103)True    93,85,859     1,08,37,606   3.71s       limit         No        268.12s
(132, 57) True    93,85,859     95,63,547     1.09s       solved        No        269.31s
(117, 116)True    93,85,859     1,01,49,566   2.59s       solved        No        272.09s
(32, 75)  True    93,85,859     93,98,413     0.18s       solved        No        272.38s
(72, 25)  True    93,85,859     1,25,20,912   3.53s       limit         No        276.01s
(113, 20) True    93,85,859     95,00,355     0.32s       solved        No        276.43s
(137, 100)True    93,85,859     1,50,20,036   3.66s       limit         No        280.19s
(108, 59) True    93,85,859     1,30,28,497   3.49s       limit         No        283.78s
(6, 121)  True    93,85,859     96,53,055     1.05s       solved        No        284.94s
(28, 102) True    93,85,859     99,45,269     3.44s       limit         No        288.47s
(21, 58)  True    93,85,859     93,87,011     0.16s       solved        No        288.73s
(95, 16)  True    93,85,859     1,14,36,981   3.25s       limit         No        292.09s
(116, 63) True    93,85,859     1,01,08,008   3.37s       limit         No        295.58s
(85, 5)   True    93,85,859     93,85,463     0.51s       solved        Yes       296.2s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [70, 32, 90, 26, 64, 65, 79, 85, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 70)  True    93,85,463     97,66,478     1.93s       solved        No        298.3s
(142, 32) True    93,85,463     93,87,950     0.25s       solved        No        298.66s
(110, 90) True    93,85,463     96,88,269     0.85s       solved        No        299.61s
(22, 26)  True    93,85,463     1,45,75,448   3.79s       limit         No        303.51s
(99, 64)  True    93,85,463     95,21,076     0.96s       infeasible    No        304.6s
(45, 65)  True    93,85,463     93,90,697     0.33s       solved        No        305.05s
(112, 79) True    93,85,463     95,58,333     1.91s       solved        No        307.09s
(5, 85)   True    93,85,463     93,84,054     0.19s       solved        Yes       307.38s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 70, 32, 90, 26, 64, 65, 79, 85]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(24, 22)  True    93,84,054     1,04,47,743   3.81s       limit         No        311.35s
(86, 2)   True    93,84,054     93,80,448     1.17s       solved        Yes       312.63s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 70, 32, 90, 26, 64, 65, 79, 85, 22, 2]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [52, 42, 86, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(34, 52)  True    93,80,448     93,96,147     0.79s       solved        No        313.62s
(94, 42)  True    93,80,448     1,46,35,064   3.48s       limit         No        317.21s
(4, 86)   True    93,80,448     1,16,72,892   3.69s       limit         No        321.01s
(23, 112) True    93,80,448     94,83,203     0.33s       solved        No        321.46s
(84, 4)   True    93,80,448     93,76,364     0.51s       solved        Yes       322.1s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 70, 32, 90, 26, 64, 65, 79, 85, 22, 2, 52, 42, 86, 112, 4]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [40, 84, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(65, 40)  True    93,76,364     97,55,319     3.29s       solved        No        325.52s
(122, 84) True    93,76,364     93,73,909     0.16s       solved        Yes       325.81s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 70, 32, 90, 26, 64, 65, 79, 85, 22, 2, 52, 42, 86, 112, 4, 40, 84]

**********************************************************************************************
Iteration : 9 

self.sorted_nodes: [122, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(7, 122)  True    93,73,909     93,85,269     0.22s       solved        No        326.19s
(147, 123)True    93,73,909     1,18,93,262   3.42s       limit         No        329.71s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_2,40       |                   -0 |           8e-08      |
+-----------------+----------------------+----------------------+
| con2_2,86       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,106      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,115      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_4,1        |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_5,85       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_6,55       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_7,1        |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_8,11       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_9,81       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,141      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,151      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_10,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_11,26      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_12,100     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_13,49      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_14,112     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_15,132     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_15,150     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_16,95      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_17,10      |                   -0 |           6.5e-07    |
+-----------------+----------------------+----------------------+
| con2_18,20      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_18,111     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_19,78      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,7       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_20,113     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_21,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_22,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_23,56      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,10      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_24,22      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_25,91      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_26,22      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_26,54      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_27,107     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_28,20      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_29,75      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_30,98      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_31,53      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_32,142     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_33,122     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_34,5       |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_34,52      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_35,93      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_36,100     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,105     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_38,16      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_39,16      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_39,121     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_40,34      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_41,79      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_42,94      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_43,79      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_44,49      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_44,134     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_45,7       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_46,109     |                   -0 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_47,63      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_48,44      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_49,140     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,123     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_50,129     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_51,37      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,2       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,14      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_53,85      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_54,42      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_55,102     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_56,86      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_57,127     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_57,132     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,5       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,21      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_58,146     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_59,25      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_59,108     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_60,103     |                   -0 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_61,106     |                   -0 |           1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_62,128     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_63,76      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_64,42      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_64,136     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_65,40      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_65,45      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_66,102     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_67,80      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_68,12      |                   -0 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_69,31      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_70,38      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_70,58      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_71,155     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,25      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,91      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_73,24      |                   -0 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_74,134     |                   -0 |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_75,13      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_75,32      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_76,36      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_77,37      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_78,18      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_79,23      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_79,112     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,8       |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_80,12      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_81,47      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_82,27      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_82,51      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_82,89      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_83,145     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_84,4       |                   -0 |           8e-08      |
+-----------------+----------------------+----------------------+
| con2_85,40      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_86,4       |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_87,98      |                   -0 |           2.4e-07    |
+-----------------+----------------------+----------------------+
| con2_88,149     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_88,154     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_89,27      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_90,41      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_90,110     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_91,118     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_92,108     |                   -0 |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_93,43      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_94,136     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_95,69      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_96,114     |                   -0 |           8e-08      |
+-----------------+----------------------+----------------------+
| con2_97,55      |                   -0 |           3.4e-07    |
+-----------------+----------------------+----------------------+
| con2_98,33      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_99,64      |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_99,136     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_100,137    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_101,11     |                   -0 |           2.6e-07    |
+-----------------+----------------------+----------------------+
| con2_102,28     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,19     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,133    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_104,99     |                   -0 |           9.1e-07    |
+-----------------+----------------------+----------------------+
| con2_105,70     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_106,48     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_107,77     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_108,25     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_109,103    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_110,146    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_111,66     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_111,102    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,23     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,52     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_113,30     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_114,73     |                   -0 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_115,106    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,63     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,76     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_116,117    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_117,59     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_119,86     |                   -0 |           8.5e-07    |
+-----------------+----------------------+----------------------+
| con2_120,143    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_121,6      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_122,7      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_122,84     |                   -0 |          -0.00105634 |
+-----------------+----------------------+----------------------+
| con2_123,125    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_123,147    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_124,51     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_124,130    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_125,109    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_126,3      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_127,120    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_128,3      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_129,71     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_129,123    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_130,82     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_131,125    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_132,117    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_133,19     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_134,32     |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,67     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,154    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_136,41     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_137,8      |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_138,62     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_139,152    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_140,121    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_141,83     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_141,145    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_142,13     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_143,124    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_144,126    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_144,148    |                    0 |           0          |
+-----------------+----------------------+----------------------+
| con2_145,80     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_146,21     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_146,35     |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_147,19     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_148,27     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_148,126    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_149,9      |                    0 |          -0          |
+-----------------+----------------------+----------------------+
| con2_150,57     |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_151,154    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_152,149    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_153,109    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_153,135    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_154,141    |                   -0 |           0          |
+-----------------+----------------------+----------------------+
| con2_155,29     |                   -0 |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1843399291085893e-10
Total relative constraint violation: 0.001060212015758433
*******************************************************************************

Final best objective: 9373909.225444578
Number of nlp problem solved: 80
Total number of iteration: 9
Solver_time: 321.94 seconds
Heuristic elapsed time: 329.73 seconds

