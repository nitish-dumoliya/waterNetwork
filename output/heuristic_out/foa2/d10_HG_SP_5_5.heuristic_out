Water Network: d10_HG_SP_5_5 

Testing bound_push=0.00011323663576640791, bound_frac=0.0021470752543473206
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00011323663576640791
bound_frac: 0.0021470752543473206
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00011323663576640791
bound_frac = 0.0021470752543473206
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9731591.68141361
Testing bound_push=0.00030264860602601586, bound_frac=0.0002837586147482662
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00030264860602601586
bound_frac: 0.0002837586147482662
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00030264860602601586
bound_frac = 0.0002837586147482662
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9424740.812761452
Testing bound_push=0.0009717572783053249, bound_frac=0.0046905158917839055
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0009717572783053249
bound_frac: 0.0046905158917839055
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009717572783053249
bound_frac = 0.0046905158917839055
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9650399.488762235
Testing bound_push=7.14075707210482e-05, bound_frac=0.00298348579703413
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 7.14075707210482e-05
bound_frac: 0.00298348579703413
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 7.14075707210482e-05
bound_frac = 0.00298348579703413
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9420269.756686509
Testing bound_push=0.0008435735428067359, bound_frac=0.006049238870138208
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0008435735428067359
bound_frac: 0.006049238870138208
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008435735428067359
bound_frac = 0.006049238870138208
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710384.96607043
Testing bound_push=0.0005885290305119562, bound_frac=0.003882737030966813
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005885290305119562
bound_frac: 0.003882737030966813
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005885290305119562
bound_frac = 0.003882737030966813
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Maximum Number of Iterations Exceeded.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9553154.83974887
Testing bound_push=0.0006834451312641421, bound_frac=0.005127872792377633
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006834451312641421
bound_frac: 0.005127872792377633
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006834451312641421
bound_frac = 0.005127872792377633
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9645246.772107203
Testing bound_push=0.0007858514338021235, bound_frac=0.008358217617756748
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007858514338021235
bound_frac: 0.008358217617756748
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007858514338021235
bound_frac = 0.008358217617756748
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9660789.76570296
Testing bound_push=0.0002237323966033192, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002237323966033192
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002237323966033192
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9718192.471358214
Testing bound_push=0.0006462975186075611, bound_frac=0.009136854342132988
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006462975186075611
bound_frac: 0.009136854342132988
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006462975186075611
bound_frac = 0.009136854342132988
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9687265.409570325
Testing bound_push=0.0007127171519189538, bound_frac=0.0045508231471324614
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007127171519189538
bound_frac: 0.0045508231471324614
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007127171519189538
bound_frac = 0.0045508231471324614
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9648250.380495891
Testing bound_push=0.0006255549420535922, bound_frac=0.0049510922586336525
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0006255549420535922
bound_frac: 0.0049510922586336525
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006255549420535922
bound_frac = 0.0049510922586336525
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9667288.76610509
Testing bound_push=0.0007021726151207563, bound_frac=0.009481972576355918
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0007021726151207563
bound_frac: 0.009481972576355918
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007021726151207563
bound_frac = 0.009481972576355918
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9763133.821974289
Testing bound_push=0.00023571251510625684, bound_frac=1e-06
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00023571251510625684
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00023571251510625684
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9453543.204470772
Testing bound_push=0.00034205558227169697, bound_frac=0.009903153338731875
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00034205558227169697
bound_frac: 0.009903153338731875
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034205558227169697
bound_frac = 0.009903153338731875
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9711753.519459546
Testing bound_push=0.0005854044798056713, bound_frac=0.004287448047131803
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005854044798056713
bound_frac: 0.004287448047131803
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005854044798056713
bound_frac = 0.004287448047131803
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9692633.677390529
Testing bound_push=0.0002968697427141984, bound_frac=0.0031934263016661518
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002968697427141984
bound_frac: 0.0031934263016661518
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002968697427141984
bound_frac = 0.0031934263016661518
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9655688.968426118
Testing bound_push=0.0005828706893906638, bound_frac=0.008511250000055702
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005828706893906638
bound_frac: 0.008511250000055702
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005828706893906638
bound_frac = 0.008511250000055702
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9699283.54960989
Testing bound_push=0.00017422685921875136, bound_frac=0.002257383044188868
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00017422685921875136
bound_frac: 0.002257383044188868
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00017422685921875136
bound_frac = 0.002257383044188868
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9641447.778181152
Testing bound_push=0.0002574935012446452, bound_frac=0.007151489299990118
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0002574935012446452
bound_frac: 0.007151489299990118
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002574935012446452
bound_frac = 0.007151489299990118
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9730020.501200771
Testing bound_push=0.00048749351312104194, bound_frac=0.003973901772509788
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00048749351312104194
bound_frac: 0.003973901772509788
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00048749351312104194
bound_frac = 0.003973901772509788
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9692633.677390816
Testing bound_push=4.3563370793339923e-05, bound_frac=0.0009185271148226459
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 4.3563370793339923e-05
bound_frac: 0.0009185271148226459
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.3563370793339923e-05
bound_frac = 0.0009185271148226459
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9481182.864571404
Testing bound_push=0.0005575729316387373, bound_frac=0.0052881772432797425
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005575729316387373
bound_frac: 0.0052881772432797425
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005575729316387373
bound_frac = 0.0052881772432797425
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9578526.048951125
Testing bound_push=6.851297026061202e-05, bound_frac=0.0036672881633957734
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 6.851297026061202e-05
bound_frac: 0.0036672881633957734
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.851297026061202e-05
bound_frac = 0.0036672881633957734
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9710384.9619311
Testing bound_push=0.0003424660789989501, bound_frac=0.005967184390107421
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0003424660789989501
bound_frac: 0.005967184390107421
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003424660789989501
bound_frac = 0.005967184390107421
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9702700.443847165
Testing bound_push=0.00028212154885458134, bound_frac=0.0035032946348532304
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00028212154885458134
bound_frac: 0.0035032946348532304
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00028212154885458134
bound_frac = 0.0035032946348532304
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9728013.952010605
Testing bound_push=1.1718747376093357e-05, bound_frac=3.028574736226703e-05
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1.1718747376093357e-05
bound_frac: 3.028574736226703e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.1718747376093357e-05
bound_frac = 3.028574736226703e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9505558.665918004
Testing bound_push=0.0005035154842015748, bound_frac=0.0033161664376379118
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.0005035154842015748
bound_frac: 0.0033161664376379118
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005035154842015748
bound_frac = 0.0033161664376379118
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9634810.715492101
Testing bound_push=1.6966742846763153e-05, bound_frac=0.004130244778466071
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 1.6966742846763153e-05
bound_frac: 0.004130244778466071
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.6966742846763153e-05
bound_frac = 0.004130244778466071
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9639758.073404951
Testing bound_push=0.00039842305653854936, bound_frac=0.0057213458756221304
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 0.00039842305653854936
bound_frac: 0.0057213458756221304
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00039842305653854936
bound_frac = 0.0057213458756221304
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9659589.113174694
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(104, 99), (46, 109), (74, 134), (131, 125), (87, 98), (101, 11), (61, 106), (119, 86), (97, 55), (128, 3), (92, 108), (60, 103), (62, 128), (138, 62), (73, 24), (139, 152), (96, 114), (17, 10), (152, 149), (68, 12), (114, 73)}
super_source_out_arc: [(1, 4), (1, 7), (1, 65)] 

bound_push: 7.14075707210482e-05
bound_frac: 0.00298348579703413
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 7.14075707210482e-05
bound_frac = 0.00298348579703413
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  9420269.756686509
Solve_result:  solved
Solve_time: 6.156367000000003 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 9, 146, 82, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 148) True    94,20,270     1,44,81,257   1.58s       limit         No        108.88s
(9, 149)  True    94,20,270     1,27,97,965   1.59s       limit         No        110.55s
(15, 150) True    94,20,270     1,05,28,096   1.06s       solved        No        111.71s
(154, 151)True    94,20,270     98,74,917     0.24s       solved        No        112.03s
(109, 153)True    94,20,270     1,12,59,367   1.61s       limit         No        113.72s
(29, 155) True    94,20,270     1,02,92,554   0.66s       solved        No        114.45s
(67, 135) True    94,20,270     1,57,20,256   1.58s       limit         No        116.11s
(83, 141) True    94,20,270     1,47,21,482   1.59s       limit         No        117.77s
(130, 124)True    94,20,270     93,74,293     0.35s       solved        Yes       118.19s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(50, 129) True    93,74,293     95,77,423     0.4s        solved        No        118.71s
(82, 130) True    93,74,293     93,75,799     0.07s       solved        No        118.86s
(81, 9)   True    93,74,293     1,36,75,601   1.5s        limit         No        120.44s
(35, 146) True    93,74,293     96,22,075     1.35s       solved        No        121.87s
(107, 27) True    93,74,293     1,09,99,816   1.58s       limit         No        123.53s
(115, 3)  True    93,74,293     95,87,161     1.4s        limit         No        125.01s
(133, 103)True    93,74,293     1,18,19,331   1.54s       limit         No        126.64s
(132, 57) True    93,74,293     95,75,857     0.24s       solved        No        126.95s
(117, 116)True    93,74,293     1,01,04,447   1.05s       solved        No        128.08s
(32, 75)  True    93,74,293     93,74,625     0.09s       solved        No        128.26s
(72, 25)  True    93,74,293     1,17,59,187   1.57s       limit         No        129.91s
(113, 20) True    93,74,293     94,61,745     0.11s       solved        No        130.11s
(137, 100)True    93,74,293     1,51,89,797   1.59s       limit         No        131.77s
(108, 59) True    93,74,293     1,31,72,881   1.51s       limit         No        133.33s
(6, 121)  True    93,74,293     96,62,883     0.36s       solved        No        133.76s
(28, 102) True    93,74,293     1,08,14,573   1.52s       limit         No        135.36s
(21, 58)  True    93,74,293     93,62,360     0.07s       solved        Yes       135.5s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [16, 63, 5, 32, 90, 26, 21, 64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(95, 16)  True    93,62,360     1,21,02,407   1.53s       limit         No        137.16s
(116, 63) True    93,62,360     1,01,08,043   0.97s       solved        No        138.2s
(34, 5)   True    93,62,360     93,81,652     0.22s       solved        No        138.49s
(142, 32) True    93,62,360     93,65,629     0.07s       solved        No        138.62s
(110, 90) True    93,62,360     96,81,647     0.41s       solved        No        139.1s
(22, 26)  True    93,62,360     1,40,46,464   1.52s       limit         No        140.7s
(58, 21)  True    93,62,360     93,61,914     0.06s       solved        Yes       140.83s

visited_nodes: [148, 149, 150, 151, 153, 155, 135, 141, 124, 129, 130, 9, 146, 27, 3, 103, 57, 116, 75, 25, 20, 100, 59, 121, 102, 58, 16, 63, 5, 32, 90, 26, 21]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [64, 65, 79, 22, 2, 52, 42, 112, 4, 123] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(99, 64)  True    93,61,914     96,58,671     0.26s       infeasible    No        141.18s
(45, 65)  True    93,61,914     93,67,951     0.06s       solved        No        141.29s
(112, 79) True    93,61,914     95,58,346     1.3s        solved        No        142.64s
(24, 22)  True    93,61,914     98,39,839     0.33s       infeasible    No        143.05s
(86, 2)   True    93,61,914     93,77,476     0.07s       solved        No        143.2s
(34, 52)  True    93,61,914     93,95,471     0.22s       solved        No        143.5s
(94, 42)  True    93,61,914     1,43,23,703   1.48s       limit         No        145.06s
(23, 112) True    93,61,914     94,79,745     0.11s       solved        No        145.24s
(84, 4)   True    93,61,914     93,75,369     0.1s        solved        No        145.39s
(147, 123)True    93,61,914     1,09,79,101   1.51s       limit         No        146.97s

**********************************Final best results******************************************

Water Network: d10_HG_SP_5_5
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,65       |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_2,40       |               -0     |           1.4e-07    |
+-----------------+----------------------+----------------------+
| con2_2,86       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_3,106      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_3,115      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_4,1        |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_5,85       |               -0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_6,55       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_7,1        |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_8,11       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_9,81       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_9,141      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_9,151      |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_10,54      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_11,26      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_12,100     |                1e-08 |           1.6e-07    |
+-----------------+----------------------+----------------------+
| con2_13,49      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_14,112     |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_15,132     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_15,150     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_16,95      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_17,10      |               -0     |           0.00455379 |
+-----------------+----------------------+----------------------+
| con2_18,20      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_18,111     |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_19,78      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_20,7       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_20,113     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_21,5       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_22,54      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_23,56      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_24,10      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_24,22      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_25,91      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_26,22      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_26,54      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_27,107     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_28,20      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_29,75      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_30,98      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_31,53      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_32,142     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_33,122     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_34,5       |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_34,52      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_35,93      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_36,100     |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,105     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_38,16      |                1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_39,16      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_39,121     |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_40,34      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_41,79      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_42,94      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_43,79      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_44,49      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_44,134     |                0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_45,7       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_46,109     |               -2e-08 |           0.00015128 |
+-----------------+----------------------+----------------------+
| con2_47,63      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_48,44      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_49,140     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_50,123     |               -3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_50,129     |                2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_51,37      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_52,2       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_52,14      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_53,85      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_54,42      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_55,102     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_56,86      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_57,127     |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_57,132     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_58,5       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_58,21      |               -0     |           8.8e-07    |
+-----------------+----------------------+----------------------+
| con2_58,146     |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_59,25      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_59,108     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_60,103     |               -2e-08 |           0.00027602 |
+-----------------+----------------------+----------------------+
| con2_61,106     |               -1e-08 |           0.00100262 |
+-----------------+----------------------+----------------------+
| con2_62,128     |               -3e-08 |           1e-07      |
+-----------------+----------------------+----------------------+
| con2_63,76      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,42      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_64,136     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_65,40      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_65,45      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_66,102     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_67,80      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_68,12      |               -1e-08 |           0.00046756 |
+-----------------+----------------------+----------------------+
| con2_69,31      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_70,38      |                1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_70,58      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_71,155     |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_72,25      |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_72,91      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_73,24      |               -0     |           8.004e-05  |
+-----------------+----------------------+----------------------+
| con2_74,134     |               -1e-08 |           0.00060581 |
+-----------------+----------------------+----------------------+
| con2_75,13      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_75,32      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_76,36      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_77,37      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_78,18      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_79,23      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_79,112     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_80,8       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_80,12      |                1e-08 |           1.4e-07    |
+-----------------+----------------------+----------------------+
| con2_81,47      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_82,27      |                3e-08 |           1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_82,51      |               -3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_82,89      |                2e-08 |           1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_83,145     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_84,4       |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_85,40      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_86,4       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_87,98      |               -1e-08 |           0.00194952 |
+-----------------+----------------------+----------------------+
| con2_88,149     |                2e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_88,154     |               -6e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_89,27      |                1e-08 |           1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_90,41      |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_90,110     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_91,118     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_92,108     |               -1e-08 |           0.00062403 |
+-----------------+----------------------+----------------------+
| con2_93,43      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_94,136     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_95,69      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_96,114     |               -1e-08 |           0.00069989 |
+-----------------+----------------------+----------------------+
| con2_97,55      |               -0     |           0.00260978 |
+-----------------+----------------------+----------------------+
| con2_98,33      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_99,64      |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_99,136     |               -1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_100,137    |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_101,11     |               -1e-08 |           0.00209454 |
+-----------------+----------------------+----------------------+
| con2_102,28     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_103,19     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_103,133    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_104,99     |               -0     |           0.00604999 |
+-----------------+----------------------+----------------------+
| con2_105,70     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_106,48     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_107,77     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_108,25     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_109,103    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_110,146    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_111,66     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_111,102    |                1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_112,23     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_112,52     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_113,30     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_114,73     |               -0     |           0.00012799 |
+-----------------+----------------------+----------------------+
| con2_115,106    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_116,63     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_116,76     |               -1e-08 |           1.6e-07    |
+-----------------+----------------------+----------------------+
| con2_116,117    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_117,59     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_119,86     |               -0     |           0.00575916 |
+-----------------+----------------------+----------------------+
| con2_120,143    |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_121,6      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_122,7      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_122,84     |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_123,125    |               -3e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_123,147    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_124,51     |               -3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_124,130    |               -0     |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_125,109    |               -2e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_126,3      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_127,120    |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_128,3      |               -1e-08 |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_129,71     |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_129,123    |               -4e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_130,82     |               -1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_131,125    |               -1e-08 |           2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_132,117    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_133,19     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_134,32     |                0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_135,67     |               -4e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,154    |               -2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_136,41     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_137,8      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_138,62     |               -5e-08 |           1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_139,152    |               -3e-08 |           5.3e-07    |
+-----------------+----------------------+----------------------+
| con2_140,121    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_141,83     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_141,145    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_142,13     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_143,124    |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_144,126    |               -5e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_144,148    |                5e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_145,80     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_146,21     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_146,35     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_147,19     |               -2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_148,27     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_148,126    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_149,9      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_150,57     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_151,154    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_152,149    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_153,109    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_153,135    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_154,141    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_155,29     |               -0     |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1751802237245432e-06
Total relative constraint violation: 0.0270578765938255
*******************************************************************************

Final best objective: 9361914.10789529
Number of nlp problem solved: 74
Total number of iteration: 4
Solver_time: 142.96 seconds
Heuristic elapsed time: 146.99 seconds

