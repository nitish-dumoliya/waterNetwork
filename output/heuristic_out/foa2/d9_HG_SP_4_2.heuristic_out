Water Network: d9_HG_SP_4_2 

Testing bound_push=0.0007510956816696566, bound_frac=0.0005397704400754354
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007510956816696566
bound_frac: 0.0005397704400754354
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007510956816696566
bound_frac = 0.0005397704400754354
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8968761.580349213
Testing bound_push=7.471123975493778e-05, bound_frac=0.003290374570885258
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 7.471123975493778e-05
bound_frac: 0.003290374570885258
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 7.471123975493778e-05
bound_frac = 0.003290374570885258
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984622.372268094
Testing bound_push=0.0008275175897374229, bound_frac=0.005371672254509702
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0008275175897374229
bound_frac: 0.005371672254509702
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008275175897374229
bound_frac = 0.005371672254509702
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9020492.152730847
Testing bound_push=2.2150752732376294e-05, bound_frac=0.0003734779516837154
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 2.2150752732376294e-05
bound_frac: 0.0003734779516837154
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.2150752732376294e-05
bound_frac = 0.0003734779516837154
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980644.532848276
Testing bound_push=0.0009788573231082189, bound_frac=0.0030766361013642917
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0009788573231082189
bound_frac: 0.0030766361013642917
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009788573231082189
bound_frac = 0.0030766361013642917
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8983409.019227555
Testing bound_push=0.0007764668035913844, bound_frac=0.003069887604824727
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007764668035913844
bound_frac: 0.003069887604824727
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007764668035913844
bound_frac = 0.003069887604824727
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8974224.809247201
Testing bound_push=0.0006894356093605241, bound_frac=0.0018431707837084604
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0006894356093605241
bound_frac: 0.0018431707837084604
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006894356093605241
bound_frac = 0.0018431707837084604
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984105.890223792
Testing bound_push=0.00036372862575906334, bound_frac=0.004750242236029956
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00036372862575906334
bound_frac: 0.004750242236029956
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00036372862575906334
bound_frac = 0.004750242236029956
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8981585.696100095
Testing bound_push=1e-06, bound_frac=0.0046322934405590285
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0046322934405590285
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0046322934405590285
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8990182.187041383
Testing bound_push=0.0005458219921920773, bound_frac=0.0003749307545063466
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005458219921920773
bound_frac: 0.0003749307545063466
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005458219921920773
bound_frac = 0.0003749307545063466
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9057417.828206118
Testing bound_push=0.0007818660078323527, bound_frac=0.004122511005842676
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007818660078323527
bound_frac: 0.004122511005842676
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007818660078323527
bound_frac = 0.004122511005842676
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9013121.338982347
Testing bound_push=0.0009989375010236244, bound_frac=0.0008920517098251497
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0009989375010236244
bound_frac: 0.0008920517098251497
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009989375010236244
bound_frac = 0.0008920517098251497
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8981415.023694128
Testing bound_push=0.0001926289235322619, bound_frac=0.0032136124170245553
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0001926289235322619
bound_frac: 0.0032136124170245553
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001926289235322619
bound_frac = 0.0032136124170245553
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9020285.780764362
Testing bound_push=0.00018154809240300548, bound_frac=0.005350956652002666
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00018154809240300548
bound_frac: 0.005350956652002666
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00018154809240300548
bound_frac = 0.005350956652002666
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9023559.941361649
Testing bound_push=0.0005508652370020238, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005508652370020238
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005508652370020238
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984990.144346077
Testing bound_push=0.0007715840985367829, bound_frac=0.0026416653456600714
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007715840985367829
bound_frac: 0.0026416653456600714
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007715840985367829
bound_frac = 0.0026416653456600714
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8969085.953551402
Testing bound_push=0.001, bound_frac=0.0002767668105735265
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.001
bound_frac: 0.0002767668105735265
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0002767668105735265
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8973882.122164348
Testing bound_push=0.0001983639888764922, bound_frac=0.0029502744918625907
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0001983639888764922
bound_frac: 0.0029502744918625907
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001983639888764922
bound_frac = 0.0029502744918625907
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980487.9832992
Testing bound_push=0.00038017732800115823, bound_frac=0.0017438372476633367
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00038017732800115823
bound_frac: 0.0017438372476633367
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00038017732800115823
bound_frac = 0.0017438372476633367
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8988060.326264393
Testing bound_push=0.0006516674847709267, bound_frac=0.0005386343338901078
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0006516674847709267
bound_frac: 0.0005386343338901078
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006516674847709267
bound_frac = 0.0005386343338901078
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9020482.799630325
Testing bound_push=0.0007483355417400704, bound_frac=0.00021037275513967162
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007483355417400704
bound_frac: 0.00021037275513967162
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007483355417400704
bound_frac = 0.00021037275513967162
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8976007.96592642
Testing bound_push=0.0009489581386294381, bound_frac=1.3590724010379058e-05
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0009489581386294381
bound_frac: 1.3590724010379058e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009489581386294381
bound_frac = 1.3590724010379058e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019104.868332092
Testing bound_push=0.0002437926630826217, bound_frac=0.002728548719099064
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002437926630826217
bound_frac: 0.002728548719099064
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002437926630826217
bound_frac = 0.002728548719099064
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019543.228268024
Testing bound_push=0.00047747840658498485, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00047747840658498485
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00047747840658498485
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9056498.424933441
Testing bound_push=0.0007529528133167485, bound_frac=0.0009567237371552513
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007529528133167485
bound_frac: 0.0009567237371552513
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007529528133167485
bound_frac = 0.0009567237371552513
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9007404.668764047
Testing bound_push=0.0007377375784745744, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007377375784745744
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007377375784745744
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8987891.25064099
Testing bound_push=0.0008564702809607648, bound_frac=1.8168227368387592e-05
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0008564702809607648
bound_frac: 1.8168227368387592e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008564702809607648
bound_frac = 1.8168227368387592e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019837.05762157
Testing bound_push=0.00043571562595607033, bound_frac=0.0022409695182529082
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00043571562595607033
bound_frac: 0.0022409695182529082
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00043571562595607033
bound_frac = 0.0022409695182529082
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8979751.808103273
Testing bound_push=0.0004853327527149465, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004853327527149465
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004853327527149465
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9019173.51802983
Testing bound_push=0.0008682729263315421, bound_frac=0.0014390432771136412
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0008682729263315421
bound_frac: 0.0014390432771136412
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008682729263315421
bound_frac = 0.0014390432771136412
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9003478.227016067
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007510956816696566
bound_frac: 0.0005397704400754354
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007510956816696566
bound_frac = 0.0005397704400754354
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  8968761.580349213
Solve_result:  solved
Solve_time: 6.696080999999992 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 37, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(115, 138)True    89,68,762     90,82,142     1.4s        solved        No        278.74s
(117, 143)True    89,68,762     91,53,417     0.56s       infeasible    No        279.4s
(141, 134)True    89,68,762     89,69,661     0.53s       solved        No        280.03s
(76, 126) True    89,68,762     89,48,544     1.61s       solved        Yes       281.75s

visited_nodes: [138, 143, 134, 126]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(59, 135) True    89,48,544     90,46,458     2.23s       solved        No        284.13s
(50, 123) True    89,48,544     88,82,900     1.6s        solved        Yes       285.84s

visited_nodes: [138, 143, 134, 126, 135, 123]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 50, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(41, 17)  True    88,82,900     89,67,670     1.23s       solved        No        287.25s
(105, 112)True    88,82,900     96,98,135     3.51s       limit         No        290.9s
(29, 9)   True    88,82,900     89,90,497     2.24s       solved        No        293.23s
(39, 83)  True    88,82,900     91,12,803     0.68s       solved        No        294.02s
(44, 35)  True    88,82,900     90,47,411     0.56s       infeasible    No        294.69s
(126, 59) True    88,82,900     89,57,179     1.23s       solved        No        296.01s
(54, 93)  True    88,82,900     88,77,536     1.43s       solved        Yes       297.55s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [54, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(56, 54)  True    88,77,536     1,10,54,131   3.69s       limit         No        301.38s
(108, 105)True    88,77,536     88,72,281     0.45s       solved        Yes       301.93s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [108, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(105, 108)True    88,72,281     88,69,024     0.49s       solved        Yes       302.58s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105, 108]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(82, 109) True    88,69,024     88,83,854     0.51s       solved        No        303.3s
(6, 85)   True    88,69,024     94,52,204     3.52s       limit         No        306.95s
(5, 76)   True    88,69,024     94,35,511     2.95s       solved        No        309.99s
(109, 89) True    88,69,024     88,80,734     2.59s       solved        No        312.68s
(40, 43)  True    88,69,024     1,12,29,246   3.63s       limit         No        316.43s
(101, 104)True    88,69,024     89,13,935     0.93s       solved        No        317.49s
(89, 2)   True    88,69,024     88,91,583     3.36s       solved        No        320.96s
(51, 103) True    88,69,024     89,38,615     3.06s       solved        No        324.15s
(92, 114) True    88,69,024     88,81,422     3.22s       limit         No        327.46s
(28, 51)  True    88,69,024     89,02,772     1.31s       solved        No        328.9s
(114, 5)  True    88,69,024     88,79,092     0.6s        solved        No        329.6s
(74, 60)  True    88,69,024     1,35,88,534   3.53s       limit         No        333.23s
(25, 49)  True    88,69,024     1,31,19,569   3.68s       limit         No        337.01s
(36, 42)  True    88,69,024     1,12,78,485   3.34s       limit         No        340.45s
(26, 74)  True    88,69,024     1,34,00,032   3.67s       limit         No        344.21s
(28, 111) True    88,69,024     88,74,346     0.86s       solved        No        345.15s
(73, 28)  True    88,69,024     88,76,846     0.87s       solved        No        346.12s
(60, 58)  True    88,69,024     90,99,155     1.95s       solved        No        348.2s
(4, 18)   True    88,69,024     88,70,388     0.5s        solved        No        348.79s
(21, 68)  True    88,69,024     88,72,578     0.99s       solved        No        349.88s
(23, 65)  True    88,69,024     88,72,945     0.54s       solved        No        350.53s
(77, 57)  True    88,69,024     89,34,033     1.59s       solved        No        352.23s
(18, 23)  True    88,69,024     88,69,150     0.39s       solved        No        352.72s
(70, 101) True    88,69,024     93,35,037     3.63s       limit         No        356.45s
(80, 6)   True    88,69,024     88,70,616     0.61s       solved        No        357.17s
(99, 24)  True    88,69,024     93,12,442     3.59s       limit         No        360.85s
(75, 36)  True    88,69,024     88,66,793     1.18s       solved        Yes       362.13s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105, 108, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [75, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(101, 75) True    88,66,793     88,55,794     2.11s       solved        Yes       364.39s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105, 108, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 75]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [84, 50, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(123, 84) True    88,55,794     88,48,408     0.48s       solved        Yes       365.0s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105, 108, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 75, 84]

**********************************************************************************************
Iteration : 9 

self.sorted_nodes: [77, 37, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(87, 77)  True    88,48,408     88,47,968     1.07s       solved        Yes       366.24s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105, 108, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 75, 84, 77]

**********************************************************************************************
Iteration : 10 

self.sorted_nodes: [50, 37, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(4, 50)   True    88,47,968     88,45,952     0.59s       solved        Yes       367.01s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 54, 105, 108, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 57, 23, 101, 6, 24, 36, 75, 84, 77, 50]

**********************************************************************************************
Iteration : 11 

self.sorted_nodes: [37, 4, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(31, 37)  True    88,45,952     88,69,036     0.7s        solved        No        367.88s
(50, 4)   True    88,45,952     88,47,954     0.64s       solved        No        368.62s
(96, 47)  True    88,45,952     89,48,442     1.58s       solved        No        370.29s
(47, 53)  True    88,45,952     88,50,159     0.71s       solved        No        371.1s
(55, 100) True    88,45,952     88,47,398     0.72s       solved        No        371.92s
(53, 78)  True    88,45,952     88,48,901     0.67s       solved        No        372.69s
(91, 87)  True    88,45,952     88,86,905     0.89s       solved        No        373.68s
(48, 11)  True    88,45,952     88,46,959     0.75s       solved        No        374.53s
(87, 63)  True    88,45,952     88,72,300     2.07s       solved        No        376.7s
(119, 115)True    88,45,952     89,28,601     0.84s       solved        No        377.64s

**********************************Final best results******************************************

Water Network: d9_HG_SP_4_2
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_2,48       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_2,89       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_2,109      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_3,12       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_4,18       |                   -0 |              6.1e-07 |
+-----------------+----------------------+----------------------+
| con2_5,58       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_5,114      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_6,10       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_7,34       |                   -0 |              5.6e-07 |
+-----------------+----------------------+----------------------+
| con2_8,78       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_9,22       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_9,29       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_9,59       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_10,72      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_11,48      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_11,52      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_12,22      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_13,45      |                   -0 |              1e-06   |
+-----------------+----------------------+----------------------+
| con2_14,97      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_15,128     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_16,110     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_17,54      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_17,83      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_18,23      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_19,84      |                    0 |              2e-08   |
+-----------------+----------------------+----------------------+
| con2_20,18      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_20,50      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_21,68      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_21,130     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_22,135     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_23,65      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_24,8       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_24,36      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_24,99      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_25,49      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_26,16      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_27,14      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_27,65      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_27,94      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_28,111     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_29,103     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_30,38      |                   -0 |              7e-08   |
+-----------------+----------------------+----------------------+
| con2_31,37      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_31,104     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_32,58      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_32,67      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_33,45      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_34,78      |                   -0 |              9e-08   |
+-----------------+----------------------+----------------------+
| con2_35,44      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_35,85      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_36,75      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_37,5       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_37,76      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_38,130     |                   -0 |              1e-08   |
+-----------------+----------------------+----------------------+
| con2_39,17      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_40,43      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_41,17      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_41,54      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_42,36      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_42,69      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_43,10      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_44,66      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_45,125     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_46,64      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_47,53      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_47,91      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_48,52      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_49,33      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_50,4       |                    0 |              5e-08   |
+-----------------+----------------------+----------------------+
| con2_51,28      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_52,81      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_53,63      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_53,91      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_54,93      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_55,77      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_55,97      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_55,100     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_56,54      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_56,90      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_57,31      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_58,60      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_59,126     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_60,32      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_60,57      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_60,74      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_61,93      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_62,42      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_63,87      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_64,91      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_65,96      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_66,85      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_67,16      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_68,20      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_68,94      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_69,106     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_70,87      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_71,9       |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_71,119     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_72,62      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_73,28      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_73,32      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_74,26      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_74,67      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_75,42      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_75,101     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_76,5       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_76,59      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_76,126     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_77,57      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_78,47      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_78,53      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_79,71      |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_80,6       |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_80,10      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_81,104     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_82,80      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_83,39      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_83,40      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_84,123     |                   -0 |              8e-08   |
+-----------------+----------------------+----------------------+
| con2_85,6       |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_85,43      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_86,28      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_86,58      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_87,77      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_88,114     |                   -0 |              5e-08   |
+-----------------+----------------------+----------------------+
| con2_89,80      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_89,109     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_90,1       |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_91,87      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_92,111     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_93,19      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_94,129     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_95,51      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_95,73      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_96,47      |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_97,100     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_98,118     |                   -0 |              3.3e-07 |
+-----------------+----------------------+----------------------+
| con2_99,63      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_100,46     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_101,24     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_101,70     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_102,35     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_102,134    |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_103,51     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_103,95     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_104,101    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_105,103    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_105,108    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_106,75     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_107,116    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_108,95     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_109,52     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_109,82     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_110,14     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_110,49     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_111,86     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_111,114    |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_112,29     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_112,105    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_112,108    |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_113,2      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_114,92     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_115,22     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_115,138    |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_116,142    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_117,79     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_118,90     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_119,115    |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_120,39     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_121,128    |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_122,107    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_123,50     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_124,121    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_125,1      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_125,49     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_126,11     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_126,104    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_127,136    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_128,112    |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_129,21     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_130,61     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_130,93     |                    0 |              0       |
+-----------------+----------------------+----------------------+
| con2_131,102    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_132,133    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_133,41     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_134,141    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_135,59     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_135,113    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_136,141    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_137,143    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_138,3      |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_139,134    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_140,121    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_141,102    |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_142,15     |                   -0 |              0       |
+-----------------+----------------------+----------------------+
| con2_143,79     |                    0 |             -0       |
+-----------------+----------------------+----------------------+
| con2_143,117    |                   -0 |              0       |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1043322675892698e-10
Total relative constraint violation: 2.8822158697304884e-06
*******************************************************************************

Final best objective: 8845952.070994034
Number of nlp problem solved: 88
Total number of iteration: 11
Solver_time: 369.71 seconds
Heuristic elapsed time: 377.67 seconds

