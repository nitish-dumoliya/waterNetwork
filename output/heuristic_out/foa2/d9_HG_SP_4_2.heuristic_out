Water Network: d9_HG_SP_4_2 

Testing bound_push=0.0004165313272871766, bound_frac=0.003720644341753084
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0004165313272871766
bound_frac: 0.003720644341753084
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004165313272871766
bound_frac = 0.003720644341753084
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8945862.804613305
Testing bound_push=0.0005595646850052559, bound_frac=9.670484899397248e-05
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0005595646850052559
bound_frac: 9.670484899397248e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005595646850052559
bound_frac = 9.670484899397248e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984970.57931516
Testing bound_push=1.836593901085499e-05, bound_frac=9.890876144932958e-05
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1.836593901085499e-05
bound_frac: 9.890876144932958e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.836593901085499e-05
bound_frac = 9.890876144932958e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8941894.704392208
Testing bound_push=0.0007689996565797375, bound_frac=0.002789719531675607
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0007689996565797375
bound_frac: 0.002789719531675607
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007689996565797375
bound_frac = 0.002789719531675607
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8984310.731203241
Testing bound_push=0.00020447811099362856, bound_frac=0.0032815333717069626
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00020447811099362856
bound_frac: 0.0032815333717069626
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020447811099362856
bound_frac = 0.0032815333717069626
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8934378.681882989
Testing bound_push=1e-06, bound_frac=0.006719992184834718
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.006719992184834718
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.006719992184834718
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=0.00011408738491280608, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00011408738491280608
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00011408738491280608
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8986843.059877938
Testing bound_push=1e-06, bound_frac=0.002550117210356749
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.002550117210356749
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.002550117210356749
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=0.00029554239691534926, bound_frac=0.002952646112708394
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00029554239691534926
bound_frac: 0.002952646112708394
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029554239691534926
bound_frac = 0.002952646112708394
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980644.53143575
Testing bound_push=1e-06, bound_frac=0.0031494863097501127
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0031494863097501127
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0031494863097501127
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1e-06, bound_frac=0.007067933707483323
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.007067933707483323
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.007067933707483323
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1e-06, bound_frac=1e-06
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1e-06, bound_frac=0.003951262754505016
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.003951262754505016
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.003951262754505016
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=4.070586199543427e-05, bound_frac=0.0030967850289298636
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 4.070586199543427e-05
bound_frac: 0.0030967850289298636
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.070586199543427e-05
bound_frac = 0.0030967850289298636
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9001496.868520847
Testing bound_push=1e-06, bound_frac=0.003158212608079847
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.003158212608079847
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.003158212608079847
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1e-06, bound_frac=0.006900383535079845
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.006900383535079845
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.006900383535079845
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1e-06, bound_frac=0.00032911775122160746
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.00032911775122160746
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.00032911775122160746
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1.3557091688784257e-06, bound_frac=0.003817984751947167
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1.3557091688784257e-06
bound_frac: 0.003817984751947167
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1.3557091688784257e-06
bound_frac = 0.003817984751947167
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9008093.767416822
Testing bound_push=4.536948748744978e-05, bound_frac=0.00311406968799397
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 4.536948748744978e-05
bound_frac: 0.00311406968799397
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 4.536948748744978e-05
bound_frac = 0.00311406968799397
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8982539.226176511
Testing bound_push=0.00012951256488118718, bound_frac=0.0032553369448196467
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00012951256488118718
bound_frac: 0.0032553369448196467
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00012951256488118718
bound_frac = 0.0032553369448196467
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9025876.64847282
Testing bound_push=1e-06, bound_frac=0.005821828710169048
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.005821828710169048
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.005821828710169048
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=1e-06, bound_frac=0.0008188887797055095
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.0008188887797055095
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.0008188887797055095
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=2.8587997530017392e-05, bound_frac=0.003098836009191014
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 2.8587997530017392e-05
bound_frac: 0.003098836009191014
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.8587997530017392e-05
bound_frac = 0.003098836009191014
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8979619.221728196
Testing bound_push=0.0002011423019492503, bound_frac=0.0031684231482909733
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002011423019492503
bound_frac: 0.0031684231482909733
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002011423019492503
bound_frac = 0.0031684231482909733
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9003225.168290319
Testing bound_push=0.0002485368992630495, bound_frac=0.0033090871928850942
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0002485368992630495
bound_frac: 0.0033090871928850942
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002485368992630495
bound_frac = 0.0033090871928850942
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8995868.884840503
Testing bound_push=2.298379568525836e-06, bound_frac=0.00476264452683762
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 2.298379568525836e-06
bound_frac: 0.00476264452683762
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 2.298379568525836e-06
bound_frac = 0.00476264452683762
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8980893.913189149
Testing bound_push=1e-06, bound_frac=0.001268103627616141
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 1e-06
bound_frac: 0.001268103627616141
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.001268103627616141
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8937070.595360212
Testing bound_push=6.51011118171173e-05, bound_frac=0.0025031154392831513
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 6.51011118171173e-05
bound_frac: 0.0025031154392831513
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 6.51011118171173e-05
bound_frac = 0.0025031154392831513
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9057089.579464806
Testing bound_push=0.0003084213197582088, bound_frac=0.0031507642218494836
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.0003084213197582088
bound_frac: 0.0031507642218494836
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003084213197582088
bound_frac = 0.0031507642218494836
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 8982010.431958139
Testing bound_push=0.00027876308738759923, bound_frac=0.003320449313767132
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00027876308738759923
bound_frac: 0.003320449313767132
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00027876308738759923
bound_frac = 0.003320449313767132
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 9017828.384490423
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(13, 45), (122, 107), (107, 116), (132, 133), (142, 15), (140, 121), (7, 34), (88, 114), (127, 136), (98, 118), (120, 39), (116, 142), (118, 90), (30, 38), (137, 143), (139, 134), (136, 141), (131, 102), (15, 128), (124, 121), (34, 78), (128, 112), (121, 128), (133, 41), (38, 130)}
super_source_out_arc: [(1, 25), (1, 90), (1, 125)] 

bound_push: 0.00020447811099362856
bound_frac: 0.0032815333717069626
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020447811099362856
bound_frac = 0.0032815333717069626
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  8934378.681882989
Solve_result:  solved
Solve_time: 3.2895419999999973 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 58, 18, 68, 65, 57, 23, 101, 6, 86, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(3, 138)  True    89,34,379     1,13,38,155   1.46s       limit         No        122.38s
(117, 143)True    89,34,379     90,03,548     0.23s       infeasible    No        122.68s
(141, 134)True    89,34,379     89,47,681     0.21s       solved        No        122.94s
(11, 126) True    89,34,379     89,31,486     0.14s       solved        Yes       123.16s

visited_nodes: [138, 143, 134, 126]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 58, 18, 68, 65, 57, 48, 23, 37, 101, 6, 86, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(59, 135) True    89,31,486     91,16,836     0.56s       solved        No        123.83s
(50, 123) True    89,31,486     89,15,644     0.37s       solved        Yes       124.27s

visited_nodes: [138, 143, 134, 126, 135, 123]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 58, 50, 18, 68, 65, 77, 57, 23, 101, 6, 86, 24, 36, 53, 91, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(41, 17)  True    89,15,644     89,98,950     0.18s       solved        No        124.57s
(105, 112)True    89,15,644     1,03,71,765   1.37s       limit         No        125.99s
(29, 9)   True    89,15,644     90,11,793     0.69s       solved        No        126.72s
(39, 83)  True    89,15,644     91,57,482     0.32s       solved        No        127.12s
(44, 35)  True    89,15,644     89,98,923     0.28s       infeasible    No        127.48s
(126, 59) True    89,15,644     89,96,090     1.42s       solved        No        128.97s
(61, 93)  True    89,15,644     89,19,921     0.18s       solved        No        129.23s
(103, 105)True    89,15,644     88,88,428     0.48s       solved        Yes       129.78s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [109, 85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(82, 109) True    88,88,428     88,86,155     0.15s       solved        Yes       130.06s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109]

**********************************************************************************************
Iteration : 5 

self.sorted_nodes: [85, 76, 89, 43, 104, 2, 103, 114, 51, 5, 60, 49, 82, 42, 74, 111, 28, 58, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(6, 85)   True    88,86,155     94,20,098     1.06s       solved        No        131.25s
(5, 76)   True    88,86,155     97,22,852     1.45s       limit         No        132.78s
(109, 89) True    88,86,155     88,67,221     0.13s       solved        Yes       132.98s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89]

**********************************************************************************************
Iteration : 6 

self.sorted_nodes: [80, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77, 57, 23, 37, 101, 24, 36, 47, 53, 100, 78, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(6, 80)   True    88,67,221     88,81,762     0.4s        solved        No        133.51s
(40, 43)  True    88,67,221     1,10,89,457   1.6s        limit         No        135.18s
(101, 104)True    88,67,221     89,25,962     0.42s       solved        No        135.68s
(109, 2)  True    88,67,221     88,84,551     0.78s       solved        No        136.54s
(51, 103) True    88,67,221     95,66,782     1.44s       limit         No        138.04s
(92, 114) True    88,67,221     88,82,897     1.0s        solved        No        139.09s
(28, 51)  True    88,67,221     89,15,447     0.32s       solved        No        139.49s
(114, 5)  True    88,67,221     88,77,848     0.21s       solved        No        139.77s
(74, 60)  True    88,67,221     1,32,31,214   1.55s       limit         No        141.39s
(25, 49)  True    88,67,221     1,36,99,629   1.53s       limit         No        143.0s
(36, 42)  True    88,67,221     1,08,11,084   1.45s       limit         No        144.53s
(26, 74)  True    88,67,221     1,34,86,463   1.55s       limit         No        146.15s
(28, 111) True    88,67,221     88,72,774     0.2s        solved        No        146.42s
(73, 28)  True    88,67,221     88,72,703     0.33s       solved        No        146.83s
(60, 58)  True    88,67,221     91,27,836     1.56s       limit         No        148.46s
(4, 18)   True    88,67,221     88,87,661     0.44s       solved        No        148.98s
(21, 68)  True    88,67,221     88,70,267     0.18s       solved        No        149.24s
(23, 65)  True    88,67,221     88,70,874     0.18s       solved        No        149.49s
(87, 77)  True    88,67,221     88,67,194     0.12s       solved        Yes       149.69s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 80, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77]

**********************************************************************************************
Iteration : 7 

self.sorted_nodes: [57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(77, 57)  True    88,67,194     89,45,351     0.38s       solved        No        150.17s
(18, 23)  True    88,67,194     88,69,986     0.19s       solved        No        150.43s
(70, 101) True    88,67,194     98,79,907     1.61s       limit         No        152.12s
(80, 6)   True    88,67,194     88,70,568     0.18s       solved        No        152.37s
(99, 24)  True    88,67,194     89,05,409     0.91s       solved        No        153.36s
(75, 36)  True    88,67,194     88,93,766     0.63s       solved        No        154.07s
(96, 47)  True    88,67,194     89,81,895     1.66s       limit         No        155.8s
(47, 53)  True    88,67,194     88,91,824     0.75s       solved        No        156.61s
(55, 100) True    88,67,194     88,69,408     0.64s       solved        No        157.32s
(53, 78)  True    88,67,194     88,68,036     0.14s       solved        No        157.54s
(91, 87)  True    88,67,194     89,09,577     0.4s        solved        No        158.01s
(48, 11)  True    88,67,194     88,65,148     0.21s       solved        Yes       158.3s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 80, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11]

**********************************************************************************************
Iteration : 8 

self.sorted_nodes: [54, 84, 48, 37, 4, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(56, 54)  True    88,65,148     1,12,48,958   1.51s       limit         No        159.94s
(19, 84)  True    88,65,148     88,64,857     0.1s        solved        Yes       160.11s

visited_nodes: [138, 143, 134, 126, 135, 123, 17, 112, 9, 83, 35, 59, 93, 105, 109, 85, 76, 89, 80, 43, 104, 2, 103, 114, 51, 5, 60, 49, 42, 74, 111, 28, 58, 18, 68, 65, 77, 57, 23, 101, 6, 24, 36, 47, 53, 100, 78, 87, 11, 54, 84]

**********************************************************************************************
Iteration : 9 

self.sorted_nodes: [19, 50, 37, 63, 115] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(93, 19)  True    88,64,857     88,66,103     0.21s       solved        No        160.43s
(4, 50)   True    88,64,857     88,65,388     0.45s       solved        No        160.95s
(31, 37)  True    88,64,857     88,85,846     0.21s       solved        No        161.24s
(87, 63)  True    88,64,857     88,95,152     0.28s       solved        No        161.59s
(119, 115)True    88,64,857     89,03,968     0.19s       solved        No        161.86s

**********************************Final best results******************************************

Water Network: d9_HG_SP_4_2
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_2,48       |               -1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_2,89       |               -1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_2,109      |               -0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_3,12       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_4,18       |               -1e-08 |           7.344e-05  |
+-----------------+----------------------+----------------------+
| con2_5,58       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_5,114      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_6,10       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_7,34       |               -0     |           0.00403693 |
+-----------------+----------------------+----------------------+
| con2_8,78       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_9,22       |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_9,29       |               -2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_9,59       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_10,72      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_11,48      |               -0     |           1.56e-06   |
+-----------------+----------------------+----------------------+
| con2_11,52      |               -0     |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_12,22      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_13,45      |               -0     |           0.00652958 |
+-----------------+----------------------+----------------------+
| con2_14,97      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_15,128     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_16,110     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_17,54      |               -3e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_17,83      |                2e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_18,23      |                0     |           2.33e-06   |
+-----------------+----------------------+----------------------+
| con2_19,84      |               -0     |          -0.00459607 |
+-----------------+----------------------+----------------------+
| con2_20,18      |                1e-08 |           1.38e-06   |
+-----------------+----------------------+----------------------+
| con2_20,23      |                1e-08 |           9.5e-07    |
+-----------------+----------------------+----------------------+
| con2_20,50      |                1e-08 |           9.6e-07    |
+-----------------+----------------------+----------------------+
| con2_21,68      |                0     |           3.28e-06   |
+-----------------+----------------------+----------------------+
| con2_21,130     |                2e-08 |           3e-07      |
+-----------------+----------------------+----------------------+
| con2_22,135     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_23,65      |                1e-08 |           3.9e-07    |
+-----------------+----------------------+----------------------+
| con2_24,8       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_24,36      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_24,99      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_25,49      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_26,16      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_27,14      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_27,65      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_27,94      |                1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_28,111     |                0     |           7e-08      |
+-----------------+----------------------+----------------------+
| con2_29,103     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_30,38      |               -1e-08 |           0.00059179 |
+-----------------+----------------------+----------------------+
| con2_31,37      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_31,104     |                1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_32,58      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_32,67      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_33,45      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_34,78      |               -0     |           0.00077825 |
+-----------------+----------------------+----------------------+
| con2_35,44      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_35,85      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_36,75      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_37,5       |               -0     |           1.5e-06    |
+-----------------+----------------------+----------------------+
| con2_37,76      |                1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_38,130     |               -0     |           0.00013237 |
+-----------------+----------------------+----------------------+
| con2_39,17      |               -0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_40,43      |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_41,17      |                4e-08 |           6e-08      |
+-----------------+----------------------+----------------------+
| con2_41,54      |               -3e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_42,36      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_42,69      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_43,10      |               -1e-08 |           1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_44,66      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_45,125     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_46,64      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_47,53      |                0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_47,91      |               -0     |           9e-08      |
+-----------------+----------------------+----------------------+
| con2_48,52      |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_49,33      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_50,4       |               -1e-08 |           0.00027293 |
+-----------------+----------------------+----------------------+
| con2_51,28      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_52,81      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_53,63      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_53,91      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_54,93      |               -2e-08 |           5.59e-06   |
+-----------------+----------------------+----------------------+
| con2_55,77      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_55,97      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_55,100     |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_56,54      |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_56,90      |               -3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_57,31      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_58,60      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_59,126     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_60,32      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_60,57      |                1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_60,74      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_61,93      |                1e-08 |           7.75e-06   |
+-----------------+----------------------+----------------------+
| con2_62,42      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_63,87      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_64,91      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_65,96      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_66,85      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_67,16      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_68,20      |                1e-08 |           1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_68,94      |               -1e-08 |           1.5e-07    |
+-----------------+----------------------+----------------------+
| con2_69,106     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_70,87      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_71,9       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_71,119     |                3e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_72,62      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_73,28      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_73,32      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_74,26      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_74,67      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_75,42      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_75,101     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_76,5       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_76,59      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_76,126     |                1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_77,57      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_78,47      |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_78,53      |               -0     |           1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_79,71      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_80,6       |                0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_80,10      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_81,104     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_82,80      |               -1e-08 |           1e-07      |
+-----------------+----------------------+----------------------+
| con2_83,39      |               -2e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_83,40      |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_84,123     |               -2e-08 |           8.967e-05  |
+-----------------+----------------------+----------------------+
| con2_85,6       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_85,43      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_86,28      |                0     |           8e-08      |
+-----------------+----------------------+----------------------+
| con2_86,58      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_87,77      |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_88,114     |               -1e-08 |           0.0004596  |
+-----------------+----------------------+----------------------+
| con2_89,80      |               -2e-08 |           1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_89,109     |               -0     |           4.8e-07    |
+-----------------+----------------------+----------------------+
| con2_90,1       |               -2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_91,87      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_92,111     |               -0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_93,19      |                1e-08 |           0.00011118 |
+-----------------+----------------------+----------------------+
| con2_94,129     |                0     |           1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_95,51      |                1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_95,73      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_96,47      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_97,100     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_98,118     |               -0     |           0.00255735 |
+-----------------+----------------------+----------------------+
| con2_99,63      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_100,46     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_101,24     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_101,70     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_102,35     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_102,134    |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_103,51     |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_103,95     |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_104,101    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_105,103    |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_105,108    |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_106,75     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_107,116    |               -1e-08 |           1.67e-06   |
+-----------------+----------------------+----------------------+
| con2_108,95     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_109,52     |               -1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_109,82     |               -1e-08 |           1.1e-07    |
+-----------------+----------------------+----------------------+
| con2_110,14     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_110,49     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_111,86     |               -0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_111,114    |                0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_112,29     |               -2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_112,105    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_112,108    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_113,2      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_114,92     |               -0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_115,22     |               -3e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_115,138    |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_116,142    |               -0     |           4.7e-07    |
+-----------------+----------------------+----------------------+
| con2_117,79     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_118,90     |               -3e-08 |           2.06e-06   |
+-----------------+----------------------+----------------------+
| con2_119,115    |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_120,39     |               -1e-08 |           2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_121,128    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_122,107    |               -1e-08 |           2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_123,50     |               -1e-08 |           1.02e-06   |
+-----------------+----------------------+----------------------+
| con2_124,121    |               -3e-08 |           5.5e-07    |
+-----------------+----------------------+----------------------+
| con2_125,1      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_125,49     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_126,11     |               -0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_126,104    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_127,136    |               -6e-08 |           9e-08      |
+-----------------+----------------------+----------------------+
| con2_128,112    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_129,21     |                0     |           1.6e-07    |
+-----------------+----------------------+----------------------+
| con2_130,61     |                0     |           5.91e-06   |
+-----------------+----------------------+----------------------+
| con2_130,93     |                1e-08 |           7e-06      |
+-----------------+----------------------+----------------------+
| con2_131,102    |               -2e-08 |           6.24e-06   |
+-----------------+----------------------+----------------------+
| con2_132,133    |               -2e-08 |           2.41e-06   |
+-----------------+----------------------+----------------------+
| con2_133,41     |               -1e-08 |           4.2e-07    |
+-----------------+----------------------+----------------------+
| con2_134,141    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_135,59     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_135,113    |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_136,141    |               -1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_137,143    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_138,3      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_139,134    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_140,121    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_141,102    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_142,15     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_143,79     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_143,117    |               -0     |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.0655710333002137e-06
Total relative constraint violation: 0.02029052466061512
*******************************************************************************

Final best objective: 8864856.7903825
Number of nlp problem solved: 87
Total number of iteration: 9
Solver_time: 156.72 seconds
Heuristic elapsed time: 161.88 seconds

