Water Network: d3_Sample_input_double_hanoi 

Testing bound_push=0.0009688942498617072, bound_frac=0.002168843242412447
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009688942498617072
bound_frac: 0.002168843242412447
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009688942498617072
bound_frac = 0.002168843242412447
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12079838.81531109
Testing bound_push=0.0009496798778599887, bound_frac=0.006413798748494136
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009496798778599887
bound_frac: 0.006413798748494136
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009496798778599887
bound_frac = 0.006413798748494136
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636364
Testing bound_push=0.00033349567589334813, bound_frac=0.0006800774207527756
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00033349567589334813
bound_frac: 0.0006800774207527756
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00033349567589334813
bound_frac = 0.0006800774207527756
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006635828
Testing bound_push=0.0006939253818617732, bound_frac=0.00482639741130815
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006939253818617732
bound_frac: 0.00482639741130815
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006939253818617732
bound_frac = 0.00482639741130815
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006617012
Testing bound_push=0.0009235262655292825, bound_frac=0.0007672498267601487
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009235262655292825
bound_frac: 0.0007672498267601487
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009235262655292825
bound_frac = 0.0007672498267601487
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006633256
Testing bound_push=0.0006725214596140582, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006725214596140582
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006725214596140582
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636342
Testing bound_push=0.000825499295844112, bound_frac=0.006720800436870856
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.000825499295844112
bound_frac: 0.006720800436870856
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000825499295844112
bound_frac = 0.006720800436870856
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636292
Testing bound_push=0.0009078148655475371, bound_frac=0.0039081358939438695
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009078148655475371
bound_frac: 0.0039081358939438695
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009078148655475371
bound_frac = 0.0039081358939438695
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636346
Testing bound_push=0.0006369881284799183, bound_frac=0.002441486342937537
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006369881284799183
bound_frac: 0.002441486342937537
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006369881284799183
bound_frac = 0.002441486342937537
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12271582.902740495
Testing bound_push=0.001, bound_frac=0.0031127163152573256
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.0031127163152573256
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.0031127163152573256
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636346
Testing bound_push=0.0005325571206249936, bound_frac=0.0008090527561879828
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005325571206249936
bound_frac: 0.0008090527561879828
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005325571206249936
bound_frac = 0.0008090527561879828
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636342
Testing bound_push=0.0007485110070189731, bound_frac=0.006724923955512879
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007485110070189731
bound_frac: 0.006724923955512879
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007485110070189731
bound_frac = 0.006724923955512879
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00663642
Testing bound_push=0.0008567661903689893, bound_frac=0.004698533139812946
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008567661903689893
bound_frac: 0.004698533139812946
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008567661903689893
bound_frac = 0.004698533139812946
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636342
Testing bound_push=0.0006515416750970062, bound_frac=0.0030206458172036235
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006515416750970062
bound_frac: 0.0030206458172036235
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006515416750970062
bound_frac = 0.0030206458172036235
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00663392
Testing bound_push=0.001, bound_frac=0.003507991598348939
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001
bound_frac: 0.003507991598348939
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.003507991598348939
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636346
Testing bound_push=0.0005275039727297946, bound_frac=0.002013836343221629
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005275039727297946
bound_frac: 0.002013836343221629
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005275039727297946
bound_frac = 0.002013836343221629
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636389
Testing bound_push=0.0007089378975817997, bound_frac=0.006228668361052451
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007089378975817997
bound_frac: 0.006228668361052451
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007089378975817997
bound_frac = 0.006228668361052451
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.062910488
Testing bound_push=0.0006897501586872053, bound_frac=0.0038063502267288224
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006897501586872053
bound_frac: 0.0038063502267288224
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006897501586872053
bound_frac = 0.0038063502267288224
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006658336
Testing bound_push=0.0006811080062877121, bound_frac=0.004270911363481895
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006811080062877121
bound_frac: 0.004270911363481895
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006811080062877121
bound_frac = 0.004270911363481895
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006637188
Testing bound_push=0.0009742010966066659, bound_frac=0.003615806007458707
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0009742010966066659
bound_frac: 0.003615806007458707
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009742010966066659
bound_frac = 0.003615806007458707
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636435
Testing bound_push=0.0005728632997341659, bound_frac=0.0028942273842692615
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0005728632997341659
bound_frac: 0.0028942273842692615
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005728632997341659
bound_frac = 0.0028942273842692615
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636322
Testing bound_push=0.0007045154384419797, bound_frac=0.005522906430933538
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007045154384419797
bound_frac: 0.005522906430933538
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007045154384419797
bound_frac = 0.005522906430933538
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636342
Testing bound_push=0.0004667843537869192, bound_frac=0.0026701288563598944
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0004667843537869192
bound_frac: 0.0026701288563598944
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004667843537869192
bound_frac = 0.0026701288563598944
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636344
Testing bound_push=0.0007039797960387683, bound_frac=0.005126715267091426
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007039797960387683
bound_frac: 0.005126715267091426
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007039797960387683
bound_frac = 0.005126715267091426
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006638529
Testing bound_push=0.0008921581015270835, bound_frac=0.0037004552293904
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008921581015270835
bound_frac: 0.0037004552293904
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008921581015270835
bound_frac = 0.0037004552293904
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636344
Testing bound_push=0.0006455360969775733, bound_frac=0.004068297530956719
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006455360969775733
bound_frac: 0.004068297530956719
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006455360969775733
bound_frac = 0.004068297530956719
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.012554565
Testing bound_push=0.0007146572269341913, bound_frac=0.00520408215151498
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007146572269341913
bound_frac: 0.00520408215151498
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007146572269341913
bound_frac = 0.00520408215151498
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006635824
Testing bound_push=0.0003335127674849041, bound_frac=0.0022169263944881172
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003335127674849041
bound_frac: 0.0022169263944881172
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003335127674849041
bound_frac = 0.0022169263944881172
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636322
Testing bound_push=0.0007142457820184909, bound_frac=0.005356212760425388
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0007142457820184909
bound_frac: 0.005356212760425388
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007142457820184909
bound_frac = 0.005356212760425388
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006635815
Testing bound_push=0.0008474345971531766, bound_frac=0.003997015419736133
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008474345971531766
bound_frac: 0.003997015419736133
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008474345971531766
bound_frac = 0.003997015419736133
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.006636268
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0006939253818617732
bound_frac: 0.00482639741130815
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006939253818617732
bound_frac = 0.00482639741130815
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  12064445.006617012
Solve_result:  solved
Solve_time: 0.878305000000001 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 29, 59, 16, 46] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,20,64,445   1,21,14,709   0.07s       solved        No        29.72s
(56, 57)  True    1,20,64,445   1,21,14,386   0.1s        solved        No        29.92s
(28, 29)  True    1,20,64,445   1,23,41,023   0.09s       solved        No        30.03s
(58, 59)  True    1,20,64,445   1,23,41,023   0.11s       solved        No        30.17s
(15, 16)  True    1,20,64,445   1,20,69,256   0.07s       solved        No        30.28s
(45, 46)  True    1,20,64,445   1,20,69,256   0.1s        solved        No        30.4s

**********************************Final best results******************************************

Water Network: d3_Sample_input_double_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_2,3        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_2,33       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_3,4        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_3,19       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_3,20       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_4,5        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_5,6        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_6,7        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_7,8        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_8,9        |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_9,10       |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_10,11      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_10,14      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_11,12      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_12,13      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_14,15      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_15,16      |                1e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_16,27      |                1e-08 |                3e-08 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                3e-08 |                1e-08 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_19,18      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_20,21      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_20,23      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_21,22      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_23,24      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_23,28      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_24,25      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_25,32      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_26,25      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_27,26      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_28,29      |                2e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_29,30      |               -2e-08 |                8e-08 |
+-----------------+----------------------+----------------------+
| con2_30,31      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_32,31      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_33,34      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_33,49      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_33,50      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_34,35      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_35,36      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_36,37      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_37,38      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_38,39      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_39,40      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_40,41      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_40,44      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_41,42      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_42,43      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_44,45      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_45,46      |                1e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_46,57      |                1e-08 |                3e-08 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                3e-08 |                1e-08 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_49,48      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_50,51      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_50,53      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_51,52      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_53,54      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_53,58      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_54,55      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_55,62      |                0     |                0     |
+-----------------+----------------------+----------------------+
| con2_56,55      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_57,56      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_58,59      |                2e-08 |                0     |
+-----------------+----------------------+----------------------+
| con2_59,60      |               -2e-08 |                8e-08 |
+-----------------+----------------------+----------------------+
| con2_60,61      |               -0     |                0     |
+-----------------+----------------------+----------------------+
| con2_62,61      |                0     |                0     |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 2.3453313396926134e-07
Total relative constraint violation: 2.735894929693356e-07
*******************************************************************************

Final best objective: 12064445.006617012
Number of nlp problem solved: 37
Total number of iteration: 1
Solver_time: 28.97 seconds
Heuristic elapsed time: 30.41 seconds

