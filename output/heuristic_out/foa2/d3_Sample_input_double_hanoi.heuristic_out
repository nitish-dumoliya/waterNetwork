Water Network: d3_Sample_input_double_hanoi 

Testing bound_push=0.005469712071012473, bound_frac=0.062204887632866704
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.005469712071012473
bound_frac: 0.062204887632866704
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005469712071012473
bound_frac = 0.062204887632866704
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246101
Testing bound_push=0.0014306480531953165, bound_frac=0.05676669008661958
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0014306480531953165
bound_frac: 0.05676669008661958
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0014306480531953165
bound_frac = 0.05676669008661958
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246118
Testing bound_push=0.00521098538027425, bound_frac=0.09736621086471654
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.00521098538027425
bound_frac: 0.09736621086471654
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00521098538027425
bound_frac = 0.09736621086471654
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246109
Testing bound_push=0.003202382110150625, bound_frac=0.06311998078264257
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003202382110150625
bound_frac: 0.06311998078264257
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003202382110150625
bound_frac = 0.06311998078264257
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245897
Testing bound_push=0.008437659694967126, bound_frac=0.022258891280618063
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.008437659694967126
bound_frac: 0.022258891280618063
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008437659694967126
bound_frac = 0.022258891280618063
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082461
Testing bound_push=0.009500268570342061, bound_frac=0.060198796552111
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.009500268570342061
bound_frac: 0.060198796552111
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009500268570342061
bound_frac = 0.060198796552111
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008248178
Testing bound_push=1e-06, bound_frac=0.021460831049620148
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.021460831049620148
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.021460831049620148
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.720337275
Testing bound_push=0.0042730777714575586, bound_frac=0.1
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0042730777714575586
bound_frac: 0.1
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0042730777714575586
bound_frac = 0.1
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246107
Testing bound_push=0.0013326943800144988, bound_frac=0.07973167229154643
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0013326943800144988
bound_frac: 0.07973167229154643
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0013326943800144988
bound_frac = 0.07973167229154643
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245597
Testing bound_push=0.0030299536596865113, bound_frac=1e-06
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0030299536596865113
bound_frac: 1e-06
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0030299536596865113
bound_frac = 1e-06
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082461
Testing bound_push=0.01, bound_frac=0.06273257995717693
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.01
bound_frac: 0.06273257995717693
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.01
bound_frac = 0.06273257995717693
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00824619
Testing bound_push=1e-06, bound_frac=0.03040848397141095
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.03040848397141095
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.03040848397141095
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.720337275
Testing bound_push=0.0033134774015370497, bound_frac=0.1
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0033134774015370497
bound_frac: 0.1
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0033134774015370497
bound_frac = 0.1
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246128
Testing bound_push=0.0003978505149464357, bound_frac=0.08803751804599835
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0003978505149464357
bound_frac: 0.08803751804599835
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0003978505149464357
bound_frac = 0.08803751804599835
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246131
Testing bound_push=0.0018043466148555873, bound_frac=0.0041172455002935855
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0018043466148555873
bound_frac: 0.0041172455002935855
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0018043466148555873
bound_frac = 0.0041172455002935855
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008249924
Testing bound_push=0.009401260143041292, bound_frac=0.06808953627923746
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.009401260143041292
bound_frac: 0.06808953627923746
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.009401260143041292
bound_frac = 0.06808953627923746
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12346785.77411368
Testing bound_push=1e-06, bound_frac=0.05369914233537386
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 1e-06
bound_frac: 0.05369914233537386
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.05369914233537386
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12295147.720337275
Testing bound_push=0.0029020559172815725, bound_frac=0.09422973129748057
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0029020559172815725
bound_frac: 0.09422973129748057
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0029020559172815725
bound_frac = 0.09422973129748057
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008222798
Testing bound_push=0.0014632482831843769, bound_frac=0.09411370786554503
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0014632482831843769
bound_frac: 0.09411370786554503
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0014632482831843769
bound_frac = 0.09411370786554503
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00824611
Testing bound_push=0.004986187922040657, bound_frac=0.04421947720505407
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.004986187922040657
bound_frac: 0.04421947720505407
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004986187922040657
bound_frac = 0.04421947720505407
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.008322802808122436, bound_frac=0.07068399549639218
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.008322802808122436
bound_frac: 0.07068399549639218
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008322802808122436
bound_frac = 0.07068399549639218
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246211
Testing bound_push=0.0008005434071420024, bound_frac=0.0826473513502308
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0008005434071420024
bound_frac: 0.0826473513502308
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008005434071420024
bound_frac = 0.0826473513502308
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246107
Testing bound_push=0.002696345175153834, bound_frac=0.09134459694622085
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.002696345175153834
bound_frac: 0.09134459694622085
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.002696345175153834
bound_frac = 0.09134459694622085
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.002573335509477842, bound_frac=0.09546559640421476
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.002573335509477842
bound_frac: 0.09546559640421476
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.002573335509477842
bound_frac = 0.09546559640421476
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245874
Testing bound_push=0.008076683478266674, bound_frac=0.06657306918154514
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.008076683478266674
bound_frac: 0.06657306918154514
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.008076683478266674
bound_frac = 0.06657306918154514
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246444
Testing bound_push=0.005200609829233244, bound_frac=0.08024659887945687
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.005200609829233244
bound_frac: 0.08024659887945687
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.005200609829233244
bound_frac = 0.08024659887945687
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246241
Testing bound_push=0.001461152866131654, bound_frac=0.09808687768626638
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.001461152866131654
bound_frac: 0.09808687768626638
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001461152866131654
bound_frac = 0.09808687768626638
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246075
Testing bound_push=0.002663031086903835, bound_frac=0.09166467534626695
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.002663031086903835
bound_frac: 0.09166467534626695
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.002663031086903835
bound_frac = 0.09166467534626695
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.01613128
Testing bound_push=0.003142917227533357, bound_frac=0.08997941301590823
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003142917227533357
bound_frac: 0.08997941301590823
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003142917227533357
bound_frac = 0.08997941301590823
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008211225
Testing bound_push=0.007790345901455138, bound_frac=0.06337585162634389
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.007790345901455138
bound_frac: 0.06337585162634389
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.007790345901455138
bound_frac = 0.06337585162634389
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246025
Testing bound_push=0.0032230197321141203, bound_frac=0.08468688123246232
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0032230197321141203
bound_frac: 0.08468688123246232
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0032230197321141203
bound_frac = 0.08468688123246232
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.0019753546631544596, bound_frac=0.1
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0019753546631544596
bound_frac: 0.1
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0019753546631544596
bound_frac = 0.1
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246109
Testing bound_push=0.0028338219255169854, bound_frac=0.09298946611814923
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0028338219255169854
bound_frac: 0.09298946611814923
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0028338219255169854
bound_frac = 0.09298946611814923
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246105
Testing bound_push=0.0034277080865611144, bound_frac=0.08723632132175496
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0034277080865611144
bound_frac: 0.08723632132175496
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0034277080865611144
bound_frac = 0.08723632132175496
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.006869762409744796, bound_frac=0.06758684292207917
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.006869762409744796
bound_frac: 0.06758684292207917
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.006869762409744796
bound_frac = 0.06758684292207917
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008259399
Testing bound_push=0.0026424905860358383, bound_frac=0.07829239942679031
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0026424905860358383
bound_frac: 0.07829239942679031
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0026424905860358383
bound_frac = 0.07829239942679031
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.009996215
Testing bound_push=0.002598844862775052, bound_frac=0.09870291669385457
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.002598844862775052
bound_frac: 0.09870291669385457
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.002598844862775052
bound_frac = 0.09870291669385457
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246105
Testing bound_push=0.003048766018982743, bound_frac=0.0939555433033851
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003048766018982743
bound_frac: 0.0939555433033851
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003048766018982743
bound_frac = 0.0939555433033851
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245952
Testing bound_push=0.0034067261844938092, bound_frac=0.08721454951987002
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0034067261844938092
bound_frac: 0.08721454951987002
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0034067261844938092
bound_frac = 0.08721454951987002
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.006188060606277736, bound_frac=0.07140806514463804
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.006188060606277736
bound_frac: 0.07140806514463804
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.006188060606277736
bound_frac = 0.07140806514463804
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246101
Testing bound_push=0.0028956125012216177, bound_frac=0.0759517030650305
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0028956125012216177
bound_frac: 0.0759517030650305
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0028956125012216177
bound_frac = 0.0759517030650305
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082461
Testing bound_push=0.002923471913482792, bound_frac=0.09474994670357795
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.002923471913482792
bound_frac: 0.09474994670357795
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.002923471913482792
bound_frac = 0.09474994670357795
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246083
Testing bound_push=0.003110370749445673, bound_frac=0.09366299209059943
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003110370749445673
bound_frac: 0.09366299209059943
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003110370749445673
bound_frac = 0.09366299209059943
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082461
Testing bound_push=0.0033229719581495984, bound_frac=0.08844538855743407
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0033229719581495984
bound_frac: 0.08844538855743407
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0033229719581495984
bound_frac = 0.08844538855743407
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246105
Testing bound_push=0.004658951780712293, bound_frac=0.07855098777659258
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.004658951780712293
bound_frac: 0.07855098777659258
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.004658951780712293
bound_frac = 0.07855098777659258
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008245282
Testing bound_push=0.003070635512106094, bound_frac=0.07724493081303133
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003070635512106094
bound_frac: 0.07724493081303133
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003070635512106094
bound_frac = 0.07724493081303133
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246107
Testing bound_push=0.0026621234959100103, bound_frac=0.09286937374797238
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0026621234959100103
bound_frac: 0.09286937374797238
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0026621234959100103
bound_frac = 0.09286937374797238
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246107
Testing bound_push=0.0030505918918305535, bound_frac=0.0933232532469712
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0030505918918305535
bound_frac: 0.0933232532469712
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0030505918918305535
bound_frac = 0.0933232532469712
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.00824558
Testing bound_push=0.0031516565852492996, bound_frac=0.0898232630199248
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0031516565852492996
bound_frac: 0.0898232630199248
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0031516565852492996
bound_frac = 0.0898232630199248
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.003389647968406576, bound_frac=0.08732645016071323
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003389647968406576
bound_frac: 0.08732645016071323
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003389647968406576
bound_frac = 0.08732645016071323
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082364
Testing bound_push=0.003087847758708626, bound_frac=0.07775331384354323
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003087847758708626
bound_frac: 0.07775331384354323
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003087847758708626
bound_frac = 0.07775331384354323
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246103
Testing bound_push=0.0026961207292376444, bound_frac=0.09313800812281757
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0026961207292376444
bound_frac: 0.09313800812281757
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0026961207292376444
bound_frac = 0.09313800812281757
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082461
Testing bound_push=0.003021500028904534, bound_frac=0.09248984202042404
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003021500028904534
bound_frac: 0.09248984202042404
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003021500028904534
bound_frac = 0.09248984202042404
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246098
Testing bound_push=0.0030614138415412206, bound_frac=0.09060312864000891
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0030614138415412206
bound_frac: 0.09060312864000891
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0030614138415412206
bound_frac = 0.09060312864000891
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.008246098
Testing bound_push=0.0027200984189094815, bound_frac=0.09176544072661476
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.0027200984189094815
bound_frac: 0.09176544072661476
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0027200984189094815
bound_frac = 0.09176544072661476
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 12064445.0082466
Stopping search: maximum iterations reached --> 10
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(1, 2), (10, 11), (41, 42), (12, 13), (21, 22), (50, 51), (11, 12), (51, 52), (40, 41), (42, 43), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50)] 

bound_push: 0.003142917227533357
bound_frac: 0.08997941301590823
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.003142917227533357
bound_frac = 0.08997941301590823
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  12064445.008211225
Solve_result:  solved
Solve_time: 0.7989810000000048 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 29, 59, 16, 46] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,20,64,445   1,21,14,386   0.1s        solved        No        41.45s
(56, 57)  True    1,20,64,445   1,21,14,709   0.15s       solved        No        41.65s
(28, 29)  True    1,20,64,445   1,23,41,023   0.1s        solved        No        41.8s
(58, 59)  True    1,20,64,445   1,23,41,023   0.1s        solved        No        41.94s
(15, 16)  True    1,20,64,445   1,20,69,256   0.09s       solved        No        42.08s
(45, 46)  True    1,20,64,445   1,20,69,256   0.09s       solved        No        42.21s

**********************************Final best results******************************************

Water Network: d3_Sample_input_double_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                    0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                   -0 |                   -0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                    0 |                    0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.1601830607332886e-13
Total relative constraint violation: 1.0238189332377983e-13
*******************************************************************************

Final best objective: 12064445.008211225
Number of nlp problem solved: 62
Total number of iteration: 1
Solver_time: 40.91 seconds
Heuristic elapsed time: 42.22 seconds

