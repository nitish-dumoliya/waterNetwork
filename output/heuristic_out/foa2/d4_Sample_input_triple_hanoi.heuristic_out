Water Network: d4_Sample_input_triple_hanoi 

Testing bound_push=0.0007484036571465371, bound_frac=0.002683831159827007
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007484036571465371
bound_frac: 0.002683831159827007
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007484036571465371
bound_frac = 0.002683831159827007
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942883242
Testing bound_push=9.61863443455038e-05, bound_frac=0.0002038904492669173
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 9.61863443455038e-05
bound_frac: 0.0002038904492669173
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.61863443455038e-05
bound_frac = 0.0002038904492669173
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18684212.78731092
Testing bound_push=0.00034476194281842935, bound_frac=0.00970130089632406
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00034476194281842935
bound_frac: 0.00970130089632406
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00034476194281842935
bound_frac = 0.00970130089632406
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942883022
Testing bound_push=0.00015189349518342357, bound_frac=0.003035273360542411
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00015189349518342357
bound_frac: 0.003035273360542411
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00015189349518342357
bound_frac = 0.003035273360542411
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.035340007
Testing bound_push=0.00029206500231108003, bound_frac=0.005186472682218476
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00029206500231108003
bound_frac: 0.005186472682218476
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00029206500231108003
bound_frac = 0.005186472682218476
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942883197
Testing bound_push=0.0007403262063022731, bound_frac=0.0022504541999431855
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0007403262063022731
bound_frac: 0.0022504541999431855
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007403262063022731
bound_frac = 0.0022504541999431855
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942883216
Testing bound_push=0.00010049664639425635, bound_frac=0.00903150465151712
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010049664639425635
bound_frac: 0.00903150465151712
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010049664639425635
bound_frac = 0.00903150465151712
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937353335
Testing bound_push=1e-06, bound_frac=0.006492190701613958
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.006492190701613958
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.006492190701613958
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.515701655
Testing bound_push=1e-06, bound_frac=0.00019900962741525125
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.00019900962741525125
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.00019900962741525125
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.515701655
Testing bound_push=0.00011232018655673174, bound_frac=0.00879993689127549
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00011232018655673174
bound_frac: 0.00879993689127549
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00011232018655673174
bound_frac = 0.00879993689127549
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942883264
Testing bound_push=0.0005717064397396177, bound_frac=0.004564112968340875
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0005717064397396177
bound_frac: 0.004564112968340875
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005717064397396177
bound_frac = 0.004564112968340875
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942882925
Testing bound_push=0.00010265179741863262, bound_frac=0.01
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010265179741863262
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010265179741863262
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18684211.99054197
Testing bound_push=1e-06, bound_frac=0.00550522289638946
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.00550522289638946
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.00550522289638946
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.515701655
Testing bound_push=1e-06, bound_frac=8.153619415585925e-05
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 8.153619415585925e-05
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 8.153619415585925e-05
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.515701655
Testing bound_push=0.00010404224836356625, bound_frac=0.01
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010404224836356625
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010404224836356625
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18652606.911341466
Testing bound_push=0.0002538191154532838, bound_frac=0.0060054378988818715
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0002538191154532838
bound_frac: 0.0060054378988818715
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002538191154532838
bound_frac = 0.0060054378988818715
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.942882415
Testing bound_push=0.00010309963415783895, bound_frac=0.01
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010309963415783895
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010309963415783895
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18684085.228869304
Testing bound_push=9.088622481554168e-05, bound_frac=0.008094036865808726
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 9.088622481554168e-05
bound_frac: 0.008094036865808726
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.088622481554168e-05
bound_frac = 0.008094036865808726
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.029702563
Testing bound_push=1e-06, bound_frac=0.005010838581713045
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 1e-06
bound_frac: 0.005010838581713045
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.005010838581713045
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18630312.515701655
Testing bound_push=0.0001365706195732517, bound_frac=0.008898877303587708
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0001365706195732517
bound_frac: 0.008898877303587708
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001365706195732517
bound_frac = 0.008898877303587708
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18571127.44904891
Testing bound_push=9.025895803306712e-05, bound_frac=0.007555312950161108
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 9.025895803306712e-05
bound_frac: 0.007555312950161108
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.025895803306712e-05
bound_frac = 0.007555312950161108
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Restoration Phase Failed.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18655345.854611415
Testing bound_push=0.00010293063373977065, bound_frac=0.01
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00010293063373977065
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00010293063373977065
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18923748.197408278
Testing bound_push=0.00020040329862761237, bound_frac=0.009885104915136866
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.00020040329862761237
bound_frac: 0.009885104915136866
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00020040329862761237
bound_frac = 0.009885104915136866
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.937353335
Testing bound_push=9.001898343262828e-05, bound_frac=0.008838014882249152
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 9.001898343262828e-05
bound_frac: 0.008838014882249152
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 9.001898343262828e-05
bound_frac = 0.008838014882249152
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18621001.035370253
Testing bound_push=0.0001948640850572089, bound_frac=0.007725894202217638
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0001948640850572089
bound_frac: 0.007725894202217638
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001948640850572089
bound_frac = 0.007725894202217638
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 18369652.93735333
Stopping search: Swarm best objective change less than 1e-08
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(72, 73), (81, 82), (1, 2), (10, 11), (70, 71), (41, 42), (12, 13), (21, 22), (50, 51), (80, 81), (11, 12), (51, 52), (40, 41), (42, 43), (71, 72), (20, 21)}
super_source_out_arc: [(1, 2), (2, 3), (3, 4), (3, 19), (3, 20), (2, 33), (33, 34), (33, 49), (33, 50), (2, 63), (63, 64), (63, 79), (63, 80)] 

bound_push: 0.0001948640850572089
bound_frac: 0.007725894202217638
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0001948640850572089
bound_frac = 0.007725894202217638
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  18369652.93735333
Solve_result:  solved
Solve_time: 0.629353 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [27, 57, 87, 29, 59, 89, 16, 46, 76] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(26, 27)  True    1,83,69,653   1,84,19,582   0.04s       solved        No        15.66s
(56, 57)  True    1,83,69,653   1,84,19,582   0.04s       solved        No        15.72s
(86, 87)  True    1,83,69,653   1,84,19,582   0.04s       solved        No        15.77s
(28, 29)  True    1,83,69,653   1,86,46,183   0.06s       solved        No        15.85s
(58, 59)  True    1,83,69,653   1,86,46,181   0.05s       solved        No        15.91s
(88, 89)  True    1,83,69,653   1,86,46,181   0.07s       solved        No        16.0s
(15, 16)  True    1,83,69,653   1,83,74,515   0.04s       solved        No        16.07s
(45, 46)  True    1,83,69,653   1,83,74,517   0.04s       solved        No        16.13s
(75, 76)  True    1,83,69,653   1,83,74,517   0.04s       solved        No        16.19s

**********************************Final best results******************************************

Water Network: d4_Sample_input_triple_hanoi
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,2        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,3        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,33       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_2,63       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,4        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,19       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_3,20       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_4,5        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_5,6        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_6,7        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_7,8        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_8,9        |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_9,10       |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,11      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_10,14      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_11,12      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_12,13      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_14,15      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_15,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_16,27      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_17,16      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_18,17      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_19,18      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,21      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_20,23      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_21,22      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,24      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_23,28      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_24,25      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_25,32      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_26,25      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_27,26      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_28,29      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_29,30      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_30,31      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_32,31      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,34      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,49      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_33,50      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_34,35      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_35,36      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_36,37      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_37,38      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_38,39      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_39,40      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,41      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_40,44      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_41,42      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_42,43      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_44,45      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_45,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_46,57      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_47,46      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_48,47      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_49,48      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,51      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_50,53      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_51,52      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,54      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_53,58      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_54,55      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_55,62      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_56,55      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_57,56      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_58,59      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_59,60      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_60,61      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_62,61      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,64      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,79      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_63,80      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_64,65      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_65,66      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_66,67      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_67,68      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_68,69      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_69,70      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_70,71      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_70,74      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_71,72      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_72,73      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_74,75      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_75,76      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_76,87      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_77,76      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_78,77      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_79,78      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,81      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_80,83      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_81,82      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_83,84      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_83,88      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_84,85      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_85,92      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_86,85      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_87,86      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_88,89      |                    0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_89,90      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_90,91      |                   -0 |                    0 |
+-----------------+----------------------+----------------------+
| con2_92,91      |                    0 |                    0 |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.2658416814748108e-09
Total relative constraint violation: 1.4741936550518286e-09
*******************************************************************************

Final best objective: 18369652.93735333
Number of nlp problem solved: 35
Total number of iteration: 1
Solver_time: 15.85 seconds
Heuristic elapsed time: 16.20 seconds

