Water Network: d11_HG_SP_6_3 

Testing bound_push=0.0005257710268677868, bound_frac=0.002401347523840756
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005257710268677868
bound_frac: 0.002401347523840756
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005257710268677868
bound_frac = 0.002401347523840756
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11793243.59053619
Testing bound_push=8.940462097562169e-05, bound_frac=0.007595369227534675
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 8.940462097562169e-05
bound_frac: 0.007595369227534675
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 8.940462097562169e-05
bound_frac = 0.007595369227534675
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.61540117
Testing bound_push=0.0007992438934393672, bound_frac=0.006708606590585164
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007992438934393672
bound_frac: 0.006708606590585164
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007992438934393672
bound_frac = 0.006708606590585164
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926470.568188654
Testing bound_push=0.0004358120403477672, bound_frac=0.0072659249260194824
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0004358120403477672
bound_frac: 0.0072659249260194824
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004358120403477672
bound_frac = 0.0072659249260194824
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11041200.245144378
Testing bound_push=0.0009235528007475145, bound_frac=0.005605251899738661
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0009235528007475145
bound_frac: 0.005605251899738661
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0009235528007475145
bound_frac = 0.005605251899738661
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Solved To Acceptable Level.

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933681.90247695
Testing bound_push=0.000755511014852203, bound_frac=0.0017518067798247582
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000755511014852203
bound_frac: 0.0017518067798247582
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000755511014852203
bound_frac = 0.0017518067798247582
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10938441.669504983
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.615400882
Testing bound_push=0.001, bound_frac=0.007095502579899082
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.007095502579899082
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.007095502579899082
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11039133.949911816
Testing bound_push=0.0004390988753519194, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0004390988753519194
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0004390988753519194
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11060304.279240372
Testing bound_push=0.001, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11039133.949911816
Testing bound_push=0.0008892720837954044, bound_frac=0.00276848482357244
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008892720837954044
bound_frac: 0.00276848482357244
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008892720837954044
bound_frac = 0.00276848482357244
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.615421386
Testing bound_push=1e-06, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 1e-06
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 1e-06
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.615400882
Testing bound_push=0.001, bound_frac=0.006932208803855887
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.006932208803855887
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.006932208803855887
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11039133.949911816
Testing bound_push=0.0005946883287522636, bound_frac=0.009801074979147176
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005946883287522636
bound_frac: 0.009801074979147176
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005946883287522636
bound_frac = 0.009801074979147176
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11045678.934193958
Testing bound_push=0.001, bound_frac=0.01
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.001
bound_frac: 0.01
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.001
bound_frac = 0.01
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11039133.949911816
Testing bound_push=0.0008769622854250173, bound_frac=0.003109571038978638
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008769622854250173
bound_frac: 0.003109571038978638
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008769622854250173
bound_frac = 0.003109571038978638
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10935010.749063514
Testing bound_push=3.8764775951619904e-05, bound_frac=0.009524654174403728
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 3.8764775951619904e-05
bound_frac: 0.009524654174403728
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 3.8764775951619904e-05
bound_frac = 0.009524654174403728
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10807087.327360988
Testing bound_push=0.0006853751524684944, bound_frac=0.007268142650484941
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006853751524684944
bound_frac: 0.007268142650484941
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006853751524684944
bound_frac = 0.007268142650484941
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10926470.568162076
Testing bound_push=0.0006022849500175531, bound_frac=0.009508067901526874
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006022849500175531
bound_frac: 0.009508067901526874
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006022849500175531
bound_frac = 0.009508067901526874
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10999847.211413698
Testing bound_push=0.0005725979083182428, bound_frac=0.009889805064208152
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005725979083182428
bound_frac: 0.009889805064208152
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005725979083182428
bound_frac = 0.009889805064208152
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10924516.674780505
Testing bound_push=0.0008502495439987691, bound_frac=0.003729103060703092
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008502495439987691
bound_frac: 0.003729103060703092
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008502495439987691
bound_frac = 0.003729103060703092
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10755551.890814016
Testing bound_push=0.0002729315262931793, bound_frac=0.0065138399038047485
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0002729315262931793
bound_frac: 0.0065138399038047485
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0002729315262931793
bound_frac = 0.0065138399038047485
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.615420217
Testing bound_push=0.000582198693844705, bound_frac=0.005825162231479017
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000582198693844705
bound_frac: 0.005825162231479017
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000582198693844705
bound_frac = 0.005825162231479017
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10938254.09883343
Testing bound_push=0.000611741721354459, bound_frac=0.006850558841701422
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000611741721354459
bound_frac: 0.006850558841701422
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000611741721354459
bound_frac = 0.006850558841701422
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11039133.949948214
Testing bound_push=0.00045830814199577705, bound_frac=0.0069359159708065835
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.00045830814199577705
bound_frac: 0.0069359159708065835
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.00045830814199577705
bound_frac = 0.0069359159708065835
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11679016.938549168
Testing bound_push=0.000836893173285645, bound_frac=0.004038869071565319
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.000836893173285645
bound_frac: 0.004038869071565319
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.000836893173285645
bound_frac = 0.004038869071565319
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10933759.36646097
Testing bound_push=0.0005034076589630546, bound_frac=0.00494344019797565
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005034076589630546
bound_frac: 0.00494344019797565
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005034076589630546
bound_frac = 0.00494344019797565
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11642886.6154012
Testing bound_push=0.0006265400737372801, bound_frac=0.004983220581525364
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0006265400737372801
bound_frac: 0.004983220581525364
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0006265400737372801
bound_frac = 0.004983220581525364
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10930060.171503855
Testing bound_push=0.0007011127090787728, bound_frac=0.005678109396141644
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0007011127090787728
bound_frac: 0.005678109396141644
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0007011127090787728
bound_frac = 0.005678109396141644
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 10937817.3001565
Testing bound_push=0.0005063386130261546, bound_frac=0.006140692406486602
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0005063386130261546
bound_frac: 0.006140692406486602
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0005063386130261546
bound_frac = 0.006140692406486602
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Total cost: 11793243.594697587
Stopping search: maximum iterations reached --> 5
Solve the original nonconvex optimization problem using IPOPT 
fix_arc_set: {(54, 92), (53, 35), (139, 114), (17, 152), (109, 61), (146, 86), (24, 26), (31, 83), (135, 134), (134, 142), (161, 162), (23, 94), (29, 43), (162, 139), (156, 138), (71, 73), (50, 44), (98, 29), (157, 161), (51, 42), (38, 30), (152, 24), (155, 75), (64, 155), (28, 135), (137, 51), (163, 12), (130, 82), (42, 146), (44, 79), (95, 121)}
super_source_out_arc: [(1, 25), (1, 39), (1, 153)] 

bound_push: 0.0008502495439987691
bound_frac: 0.003729103060703092
Ipopt 3.14.13: outlev = 0
expect_infeasible_problem = yes
bound_push = 0.0008502495439987691
bound_frac = 0.003729103060703092
warm_start_init_point = yes
nlp_scaling_method = none


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

 
Ipopt 3.14.13: Optimal Solution Found

suffix ipopt_zU_out OUT;
suffix ipopt_zL_out OUT;
Objective:  10755551.890814016
Solve_result:  solved
Solve_time: 3.104766000000012 


**********************************************************************************************
Iteration : 1 

self.sorted_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(27, 165) True    1,07,55,552   1,19,87,534   1.49s       limit         No        94.43s
(136, 166)True    1,07,55,552   1,57,04,034   1.44s       limit         No        95.95s
(140, 136)True    1,07,55,552   1,52,38,606   1.45s       limit         No        97.51s
(141, 140)True    1,07,55,552   1,17,99,719   1.45s       limit         No        99.05s
(8, 141)  True    1,07,55,552   1,08,79,952   0.39s       solved        No        99.53s
(69, 70)  True    1,07,55,552   1,15,96,374   0.74s       infeasible    No        100.34s
(128, 115)True    1,07,55,552   1,53,19,159   1.47s       limit         No        101.89s
(119, 114)True    1,07,55,552   1,54,14,598   1.45s       limit         No        103.42s
(22, 87)  True    1,07,55,552   1,23,43,957   1.63s       limit         No        105.12s
(87, 85)  True    1,07,55,552   1,08,53,787   0.56s       solved        No        105.76s
(147, 37) True    1,07,55,552   1,07,35,003   0.53s       solved        Yes       106.4s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37]

**********************************************************************************************
Iteration : 2 

self.sorted_nodes: [147, 82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(58, 147) True    1,07,35,003   1,07,08,873   0.26s       solved        Yes       106.77s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147]

**********************************************************************************************
Iteration : 3 

self.sorted_nodes: [82, 30, 131, 35, 65, 32, 72, 2, 122, 93, 19, 113, 55, 100, 45, 116, 88, 6, 58] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(124, 82) True    1,07,08,873   1,07,78,945   0.38s       solved        No        107.26s
(105, 30) True    1,07,08,873   1,07,81,535   0.93s       solved        No        108.28s
(56, 131) True    1,07,08,873   1,12,85,322   1.57s       limit         No        109.92s
(48, 35)  True    1,07,08,873   1,55,44,681   1.48s       limit         No        111.46s
(75, 65)  True    1,07,08,873   1,13,00,063   0.61s       infeasible    No        112.13s
(111, 32) True    1,07,08,873   1,10,95,381   1.53s       limit         No        113.74s
(129, 72) True    1,07,08,873   1,47,19,864   1.37s       limit         No        115.19s
(18, 2)   True    1,07,08,873   1,16,49,672   1.4s        limit         No        116.67s
(14, 122) True    1,07,08,873   1,07,06,606   0.14s       solved        Yes       116.87s

visited_nodes: [165, 166, 136, 140, 141, 70, 115, 114, 87, 85, 37, 147, 82, 30, 131, 35, 65, 32, 72, 2, 122]

**********************************************************************************************
Iteration : 4 

self.sorted_nodes: [93, 19, 113, 55, 100, 45, 14, 60, 88, 6] 

Arc       Acyclic C_Best_Sol    New_Sol       Solve_Time  Solve_Result  Improved  Time        
(74, 93)  True    1,07,06,606   1,07,19,213   0.16s       solved        No        117.15s
(68, 19)  True    1,07,06,606   1,07,85,162   0.24s       solved        No        117.44s
(100, 113)True    1,07,06,606   1,19,76,166   1.08s       solved        No        118.59s
(76, 55)  True    1,07,06,606   1,07,17,222   1.06s       solved        No        119.73s
(144, 100)True    1,07,06,606   1,09,85,243   0.75s       solved        No        120.56s
(6, 45)   True    1,07,06,606   1,07,80,840   0.39s       solved        No        121.03s
(62, 14)  True    1,07,06,606   1,46,79,645   1.48s       limit         No        122.58s
(116, 60) True    1,07,06,606   1,07,08,438   0.24s       solved        No        122.87s
(84, 88)  True    1,07,06,606   1,09,27,936   0.5s        solved        No        123.44s
(101, 6)  True    1,07,06,606   1,07,06,635   0.26s       solved        No        123.78s

**********************************Final best results******************************************

Water Network: d11_HG_SP_6_3
*******************************************************************************

Constraint violations:

+-----------------+----------------------+----------------------+
| Constraint ID   |   Absolute Violation |   Relative Violation |
+=================+======================+======================+
| con2_1,25       |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_2,18       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_3,111      |                1e-08 |           1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_4,43       |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_5,89       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_6,101      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_7,39       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_8,85       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_9,92       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_10,126     |               -0     |           0.00038778 |
+-----------------+----------------------+----------------------+
| con2_11,59      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_12,125     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_13,66      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_14,149     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_15,103     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_16,96      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_17,152     |               -1e-08 |           0.00155966 |
+-----------------+----------------------+----------------------+
| con2_18,96      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_19,68      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_20,115     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_21,121     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_22,2       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_23,94      |               -1e-08 |           0.00170692 |
+-----------------+----------------------+----------------------+
| con2_24,26      |               -1e-08 |           9.25e-06   |
+-----------------+----------------------+----------------------+
| con2_25,65      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_26,116     |                0     |           2.077e-05  |
+-----------------+----------------------+----------------------+
| con2_27,159     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_27,165     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_28,135     |               -2e-08 |           0.00026197 |
+-----------------+----------------------+----------------------+
| con2_29,43      |               -0     |           0.0001806  |
+-----------------+----------------------+----------------------+
| con2_30,77      |               -1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_30,105     |               -0     |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_31,83      |               -1e-08 |           0.00055987 |
+-----------------+----------------------+----------------------+
| con2_32,3       |               -1e-08 |           1.2e-07    |
+-----------------+----------------------+----------------------+
| con2_32,41      |                1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_33,114     |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_34,11      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_35,48      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_36,154     |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,7       |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_37,147     |               -1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_38,30      |               -0     |           0.0114156  |
+-----------------+----------------------+----------------------+
| con2_39,1       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_40,62      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_41,19      |                0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_42,146     |               -1e-08 |           9.4e-07    |
+-----------------+----------------------+----------------------+
| con2_43,158     |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_44,79      |               -0     |           0.00266409 |
+-----------------+----------------------+----------------------+
| con2_45,6       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_45,101     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_46,133     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_47,93      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_48,117     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_49,25      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_50,44      |               -0     |           0.0174184  |
+-----------------+----------------------+----------------------+
| con2_51,42      |               -1e-08 |           1.23e-06   |
+-----------------+----------------------+----------------------+
| con2_52,118     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_53,35      |               -1e-08 |           0.00101025 |
+-----------------+----------------------+----------------------+
| con2_54,92      |               -0     |           0.00548889 |
+-----------------+----------------------+----------------------+
| con2_55,10      |               -1e-08 |           0.00256951 |
+-----------------+----------------------+----------------------+
| con2_56,112     |               -1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_57,16      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_58,91      |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_59,40      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_60,97      |               -0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_60,100     |                0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_61,34      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_61,153     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_62,14      |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_63,33      |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_63,120     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_64,155     |               -1e-08 |           0.00088501 |
+-----------------+----------------------+----------------------+
| con2_65,49      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_65,75      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_66,132     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_67,13      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_68,30      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_69,70      |                1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_69,131     |               -0     |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_70,73      |               -1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_71,73      |               -0     |           0.00348547 |
+-----------------+----------------------+----------------------+
| con2_72,7       |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_73,131     |               -1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_74,72      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_74,93      |                0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_75,49      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_76,55      |                1e-08 |           0.00078487 |
+-----------------+----------------------+----------------------+
| con2_76,108     |               -0     |           0.0002193  |
+-----------------+----------------------+----------------------+
| con2_77,35      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_78,99      |               -4e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_78,141     |                2e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_79,6       |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_80,106     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_81,15      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_82,83      |               -1e-08 |           2.4e-07    |
+-----------------+----------------------+----------------------+
| con2_82,115     |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_83,123     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_84,88      |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_85,87      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_86,3       |                1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_87,22      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_87,36      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_88,145     |               -0     |           6e-08      |
+-----------------+----------------------+----------------------+
| con2_89,67      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_90,88      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_91,74      |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_92,113     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_93,72      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_94,15      |               -1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_94,150     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_95,121     |               -1e-08 |           0.00087667 |
+-----------------+----------------------+----------------------+
| con2_96,2       |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_96,122     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_97,81      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_97,145     |                0     |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_98,29      |               -1e-08 |           0.00104169 |
+-----------------+----------------------+----------------------+
| con2_99,36      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_100,144    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_101,110    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_102,65     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_103,45     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_103,52     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_104,127    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_105,77     |               -1e-08 |           5e-08      |
+-----------------+----------------------+----------------------+
| con2_106,20     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_107,37     |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_107,85     |                2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_108,116    |               -0     |           4.129e-05  |
+-----------------+----------------------+----------------------+
| con2_109,61     |               -0     |           0.00494647 |
+-----------------+----------------------+----------------------+
| con2_110,5      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_111,32     |                0     |           1.3e-07    |
+-----------------+----------------------+----------------------+
| con2_112,4      |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_113,100    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_113,101    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_114,119    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_115,83     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_115,128    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_116,60     |                0     |           0.00099988 |
+-----------------+----------------------+----------------------+
| con2_117,35     |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_117,92     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_118,79     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_119,77     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_120,19     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_121,104    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_122,11     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_122,14     |                1e-08 |           7.17e-06   |
+-----------------+----------------------+----------------------+
| con2_123,21     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_124,47     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_124,82     |                1e-08 |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_125,124    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_126,108    |               -0     |           0.00023637 |
+-----------------+----------------------+----------------------+
| con2_127,9      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_128,46     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_129,7      |               -1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_129,72     |                1e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_130,82     |               -1e-08 |           0.00200566 |
+-----------------+----------------------+----------------------+
| con2_131,56     |               -1e-08 |           4e-08      |
+-----------------+----------------------+----------------------+
| con2_131,112    |               -1e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_132,102    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_133,21     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_134,142    |               -2e-08 |           1.83e-06   |
+-----------------+----------------------+----------------------+
| con2_135,134    |               -1e-08 |           1.83e-06   |
+-----------------+----------------------+----------------------+
| con2_136,8      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_136,140    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_137,51     |               -3e-08 |           2.17e-06   |
+-----------------+----------------------+----------------------+
| con2_138,160    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_139,114    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_140,8      |               -2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_140,141    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_141,8      |               -2e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_142,70     |               -2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_142,86     |                2e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_143,78     |               -3e-08 |           3e-08      |
+-----------------+----------------------+----------------------+
| con2_143,141    |                5e-08 |           5.3e-07    |
+-----------------+----------------------+----------------------+
| con2_144,45     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_145,26     |                0     |           2.8e-06    |
+-----------------+----------------------+----------------------+
| con2_146,86     |               -1e-08 |           1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_147,58     |               -0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_148,27     |               -1e-08 |           0          |
+-----------------+----------------------+----------------------+
| con2_148,166    |                8e-08 |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_149,103    |                0     |           0          |
+-----------------+----------------------+----------------------+
| con2_150,84     |                0     |           2e-08      |
+-----------------+----------------------+----------------------+
| con2_151,80     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_152,24     |               -1e-08 |           1.255e-05  |
+-----------------+----------------------+----------------------+
| con2_153,1      |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_154,57     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_155,75     |               -0     |           1.096e-05  |
+-----------------+----------------------+----------------------+
| con2_156,138    |               -8e-08 |           1.7e-07    |
+-----------------+----------------------+----------------------+
| con2_157,161    |               -3e-08 |           1.74e-06   |
+-----------------+----------------------+----------------------+
| con2_158,90     |               -0     |           1e-08      |
+-----------------+----------------------+----------------------+
| con2_159,12     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_160,151    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_161,162    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_162,139    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_163,12     |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_164,138    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_165,164    |               -0     |           0          |
+-----------------+----------------------+----------------------+
| con2_166,136    |               -0     |           0          |
+-----------------+----------------------+----------------------+

Total absolute constraint violation: 1.0079656849164858e-06
Total relative constraint violation: 0.06082219060841404
*******************************************************************************

Final best objective: 10706606.088125126
Number of nlp problem solved: 62
Total number of iteration: 4
Solver_time: 120.61 seconds
Heuristic elapsed time: 123.80 seconds

